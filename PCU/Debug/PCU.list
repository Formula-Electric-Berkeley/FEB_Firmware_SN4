
PCU.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000083b8  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000500  08008588  08008588  00009588  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08008a88  08008a88  0000a1d4  2**0
                  CONTENTS
  4 .ARM          00000008  08008a88  08008a88  00009a88  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08008a90  08008a90  0000a1d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08008a90  08008a90  00009a90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08008a94  08008a94  00009a94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001d4  20000000  08008a98  0000a000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000002e8  200001d4  08008c6c  0000a1d4  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200004bc  08008c6c  0000a4bc  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000a1d4  2**0
                  CONTENTS, READONLY
 12 .debug_info   00013786  00000000  00000000  0000a204  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000034c6  00000000  00000000  0001d98a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000f98  00000000  00000000  00020e50  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000c03  00000000  00000000  00021de8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00025e87  00000000  00000000  000229eb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000162f7  00000000  00000000  00048872  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000df358  00000000  00000000  0005eb69  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0013dec1  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000050c0  00000000  00000000  0013df04  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000058  00000000  00000000  00142fc4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	200001d4 	.word	0x200001d4
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08008570 	.word	0x08008570

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	200001d8 	.word	0x200001d8
 800020c:	08008570 	.word	0x08008570

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <strlen>:
 80002b0:	4603      	mov	r3, r0
 80002b2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80002b6:	2a00      	cmp	r2, #0
 80002b8:	d1fb      	bne.n	80002b2 <strlen+0x2>
 80002ba:	1a18      	subs	r0, r3, r0
 80002bc:	3801      	subs	r0, #1
 80002be:	4770      	bx	lr

080002c0 <__aeabi_drsub>:
 80002c0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80002c4:	e002      	b.n	80002cc <__adddf3>
 80002c6:	bf00      	nop

080002c8 <__aeabi_dsub>:
 80002c8:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080002cc <__adddf3>:
 80002cc:	b530      	push	{r4, r5, lr}
 80002ce:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002d2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002d6:	ea94 0f05 	teq	r4, r5
 80002da:	bf08      	it	eq
 80002dc:	ea90 0f02 	teqeq	r0, r2
 80002e0:	bf1f      	itttt	ne
 80002e2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002e6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ea:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ee:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002f2:	f000 80e2 	beq.w	80004ba <__adddf3+0x1ee>
 80002f6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002fa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002fe:	bfb8      	it	lt
 8000300:	426d      	neglt	r5, r5
 8000302:	dd0c      	ble.n	800031e <__adddf3+0x52>
 8000304:	442c      	add	r4, r5
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	ea82 0000 	eor.w	r0, r2, r0
 8000312:	ea83 0101 	eor.w	r1, r3, r1
 8000316:	ea80 0202 	eor.w	r2, r0, r2
 800031a:	ea81 0303 	eor.w	r3, r1, r3
 800031e:	2d36      	cmp	r5, #54	@ 0x36
 8000320:	bf88      	it	hi
 8000322:	bd30      	pophi	{r4, r5, pc}
 8000324:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000328:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800032c:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000330:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000334:	d002      	beq.n	800033c <__adddf3+0x70>
 8000336:	4240      	negs	r0, r0
 8000338:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800033c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000340:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000344:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000348:	d002      	beq.n	8000350 <__adddf3+0x84>
 800034a:	4252      	negs	r2, r2
 800034c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000350:	ea94 0f05 	teq	r4, r5
 8000354:	f000 80a7 	beq.w	80004a6 <__adddf3+0x1da>
 8000358:	f1a4 0401 	sub.w	r4, r4, #1
 800035c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000360:	db0d      	blt.n	800037e <__adddf3+0xb2>
 8000362:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000366:	fa22 f205 	lsr.w	r2, r2, r5
 800036a:	1880      	adds	r0, r0, r2
 800036c:	f141 0100 	adc.w	r1, r1, #0
 8000370:	fa03 f20e 	lsl.w	r2, r3, lr
 8000374:	1880      	adds	r0, r0, r2
 8000376:	fa43 f305 	asr.w	r3, r3, r5
 800037a:	4159      	adcs	r1, r3
 800037c:	e00e      	b.n	800039c <__adddf3+0xd0>
 800037e:	f1a5 0520 	sub.w	r5, r5, #32
 8000382:	f10e 0e20 	add.w	lr, lr, #32
 8000386:	2a01      	cmp	r2, #1
 8000388:	fa03 fc0e 	lsl.w	ip, r3, lr
 800038c:	bf28      	it	cs
 800038e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000392:	fa43 f305 	asr.w	r3, r3, r5
 8000396:	18c0      	adds	r0, r0, r3
 8000398:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800039c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80003a0:	d507      	bpl.n	80003b2 <__adddf3+0xe6>
 80003a2:	f04f 0e00 	mov.w	lr, #0
 80003a6:	f1dc 0c00 	rsbs	ip, ip, #0
 80003aa:	eb7e 0000 	sbcs.w	r0, lr, r0
 80003ae:	eb6e 0101 	sbc.w	r1, lr, r1
 80003b2:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80003b6:	d31b      	bcc.n	80003f0 <__adddf3+0x124>
 80003b8:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80003bc:	d30c      	bcc.n	80003d8 <__adddf3+0x10c>
 80003be:	0849      	lsrs	r1, r1, #1
 80003c0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003c4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003c8:	f104 0401 	add.w	r4, r4, #1
 80003cc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003d0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003d4:	f080 809a 	bcs.w	800050c <__adddf3+0x240>
 80003d8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003dc:	bf08      	it	eq
 80003de:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003e2:	f150 0000 	adcs.w	r0, r0, #0
 80003e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ea:	ea41 0105 	orr.w	r1, r1, r5
 80003ee:	bd30      	pop	{r4, r5, pc}
 80003f0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003f4:	4140      	adcs	r0, r0
 80003f6:	eb41 0101 	adc.w	r1, r1, r1
 80003fa:	3c01      	subs	r4, #1
 80003fc:	bf28      	it	cs
 80003fe:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 8000402:	d2e9      	bcs.n	80003d8 <__adddf3+0x10c>
 8000404:	f091 0f00 	teq	r1, #0
 8000408:	bf04      	itt	eq
 800040a:	4601      	moveq	r1, r0
 800040c:	2000      	moveq	r0, #0
 800040e:	fab1 f381 	clz	r3, r1
 8000412:	bf08      	it	eq
 8000414:	3320      	addeq	r3, #32
 8000416:	f1a3 030b 	sub.w	r3, r3, #11
 800041a:	f1b3 0220 	subs.w	r2, r3, #32
 800041e:	da0c      	bge.n	800043a <__adddf3+0x16e>
 8000420:	320c      	adds	r2, #12
 8000422:	dd08      	ble.n	8000436 <__adddf3+0x16a>
 8000424:	f102 0c14 	add.w	ip, r2, #20
 8000428:	f1c2 020c 	rsb	r2, r2, #12
 800042c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000430:	fa21 f102 	lsr.w	r1, r1, r2
 8000434:	e00c      	b.n	8000450 <__adddf3+0x184>
 8000436:	f102 0214 	add.w	r2, r2, #20
 800043a:	bfd8      	it	le
 800043c:	f1c2 0c20 	rsble	ip, r2, #32
 8000440:	fa01 f102 	lsl.w	r1, r1, r2
 8000444:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000448:	bfdc      	itt	le
 800044a:	ea41 010c 	orrle.w	r1, r1, ip
 800044e:	4090      	lslle	r0, r2
 8000450:	1ae4      	subs	r4, r4, r3
 8000452:	bfa2      	ittt	ge
 8000454:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000458:	4329      	orrge	r1, r5
 800045a:	bd30      	popge	{r4, r5, pc}
 800045c:	ea6f 0404 	mvn.w	r4, r4
 8000460:	3c1f      	subs	r4, #31
 8000462:	da1c      	bge.n	800049e <__adddf3+0x1d2>
 8000464:	340c      	adds	r4, #12
 8000466:	dc0e      	bgt.n	8000486 <__adddf3+0x1ba>
 8000468:	f104 0414 	add.w	r4, r4, #20
 800046c:	f1c4 0220 	rsb	r2, r4, #32
 8000470:	fa20 f004 	lsr.w	r0, r0, r4
 8000474:	fa01 f302 	lsl.w	r3, r1, r2
 8000478:	ea40 0003 	orr.w	r0, r0, r3
 800047c:	fa21 f304 	lsr.w	r3, r1, r4
 8000480:	ea45 0103 	orr.w	r1, r5, r3
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f1c4 040c 	rsb	r4, r4, #12
 800048a:	f1c4 0220 	rsb	r2, r4, #32
 800048e:	fa20 f002 	lsr.w	r0, r0, r2
 8000492:	fa01 f304 	lsl.w	r3, r1, r4
 8000496:	ea40 0003 	orr.w	r0, r0, r3
 800049a:	4629      	mov	r1, r5
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	fa21 f004 	lsr.w	r0, r1, r4
 80004a2:	4629      	mov	r1, r5
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	f094 0f00 	teq	r4, #0
 80004aa:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 80004ae:	bf06      	itte	eq
 80004b0:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80004b4:	3401      	addeq	r4, #1
 80004b6:	3d01      	subne	r5, #1
 80004b8:	e74e      	b.n	8000358 <__adddf3+0x8c>
 80004ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004be:	bf18      	it	ne
 80004c0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004c4:	d029      	beq.n	800051a <__adddf3+0x24e>
 80004c6:	ea94 0f05 	teq	r4, r5
 80004ca:	bf08      	it	eq
 80004cc:	ea90 0f02 	teqeq	r0, r2
 80004d0:	d005      	beq.n	80004de <__adddf3+0x212>
 80004d2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004d6:	bf04      	itt	eq
 80004d8:	4619      	moveq	r1, r3
 80004da:	4610      	moveq	r0, r2
 80004dc:	bd30      	pop	{r4, r5, pc}
 80004de:	ea91 0f03 	teq	r1, r3
 80004e2:	bf1e      	ittt	ne
 80004e4:	2100      	movne	r1, #0
 80004e6:	2000      	movne	r0, #0
 80004e8:	bd30      	popne	{r4, r5, pc}
 80004ea:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ee:	d105      	bne.n	80004fc <__adddf3+0x230>
 80004f0:	0040      	lsls	r0, r0, #1
 80004f2:	4149      	adcs	r1, r1
 80004f4:	bf28      	it	cs
 80004f6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004fa:	bd30      	pop	{r4, r5, pc}
 80004fc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000500:	bf3c      	itt	cc
 8000502:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 8000506:	bd30      	popcc	{r4, r5, pc}
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 800050c:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000510:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000514:	f04f 0000 	mov.w	r0, #0
 8000518:	bd30      	pop	{r4, r5, pc}
 800051a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800051e:	bf1a      	itte	ne
 8000520:	4619      	movne	r1, r3
 8000522:	4610      	movne	r0, r2
 8000524:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000528:	bf1c      	itt	ne
 800052a:	460b      	movne	r3, r1
 800052c:	4602      	movne	r2, r0
 800052e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000532:	bf06      	itte	eq
 8000534:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000538:	ea91 0f03 	teqeq	r1, r3
 800053c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000540:	bd30      	pop	{r4, r5, pc}
 8000542:	bf00      	nop

08000544 <__aeabi_ui2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000558:	f04f 0500 	mov.w	r5, #0
 800055c:	f04f 0100 	mov.w	r1, #0
 8000560:	e750      	b.n	8000404 <__adddf3+0x138>
 8000562:	bf00      	nop

08000564 <__aeabi_i2d>:
 8000564:	f090 0f00 	teq	r0, #0
 8000568:	bf04      	itt	eq
 800056a:	2100      	moveq	r1, #0
 800056c:	4770      	bxeq	lr
 800056e:	b530      	push	{r4, r5, lr}
 8000570:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000574:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000578:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800057c:	bf48      	it	mi
 800057e:	4240      	negmi	r0, r0
 8000580:	f04f 0100 	mov.w	r1, #0
 8000584:	e73e      	b.n	8000404 <__adddf3+0x138>
 8000586:	bf00      	nop

08000588 <__aeabi_f2d>:
 8000588:	0042      	lsls	r2, r0, #1
 800058a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800058e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000592:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000596:	bf1f      	itttt	ne
 8000598:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800059c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 80005a0:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 80005a4:	4770      	bxne	lr
 80005a6:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 80005aa:	bf08      	it	eq
 80005ac:	4770      	bxeq	lr
 80005ae:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80005b2:	bf04      	itt	eq
 80005b4:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80005b8:	4770      	bxeq	lr
 80005ba:	b530      	push	{r4, r5, lr}
 80005bc:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80005c0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005c4:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005c8:	e71c      	b.n	8000404 <__adddf3+0x138>
 80005ca:	bf00      	nop

080005cc <__aeabi_ul2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f04f 0500 	mov.w	r5, #0
 80005da:	e00a      	b.n	80005f2 <__aeabi_l2d+0x16>

080005dc <__aeabi_l2d>:
 80005dc:	ea50 0201 	orrs.w	r2, r0, r1
 80005e0:	bf08      	it	eq
 80005e2:	4770      	bxeq	lr
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005ea:	d502      	bpl.n	80005f2 <__aeabi_l2d+0x16>
 80005ec:	4240      	negs	r0, r0
 80005ee:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005f2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005f6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005fa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005fe:	f43f aed8 	beq.w	80003b2 <__adddf3+0xe6>
 8000602:	f04f 0203 	mov.w	r2, #3
 8000606:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800060a:	bf18      	it	ne
 800060c:	3203      	addne	r2, #3
 800060e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000612:	bf18      	it	ne
 8000614:	3203      	addne	r2, #3
 8000616:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800061a:	f1c2 0320 	rsb	r3, r2, #32
 800061e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000622:	fa20 f002 	lsr.w	r0, r0, r2
 8000626:	fa01 fe03 	lsl.w	lr, r1, r3
 800062a:	ea40 000e 	orr.w	r0, r0, lr
 800062e:	fa21 f102 	lsr.w	r1, r1, r2
 8000632:	4414      	add	r4, r2
 8000634:	e6bd      	b.n	80003b2 <__adddf3+0xe6>
 8000636:	bf00      	nop

08000638 <__aeabi_dmul>:
 8000638:	b570      	push	{r4, r5, r6, lr}
 800063a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800063e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000642:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000646:	bf1d      	ittte	ne
 8000648:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800064c:	ea94 0f0c 	teqne	r4, ip
 8000650:	ea95 0f0c 	teqne	r5, ip
 8000654:	f000 f8de 	bleq	8000814 <__aeabi_dmul+0x1dc>
 8000658:	442c      	add	r4, r5
 800065a:	ea81 0603 	eor.w	r6, r1, r3
 800065e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000662:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000666:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800066a:	bf18      	it	ne
 800066c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000674:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000678:	d038      	beq.n	80006ec <__aeabi_dmul+0xb4>
 800067a:	fba0 ce02 	umull	ip, lr, r0, r2
 800067e:	f04f 0500 	mov.w	r5, #0
 8000682:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000686:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800068a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800068e:	f04f 0600 	mov.w	r6, #0
 8000692:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000696:	f09c 0f00 	teq	ip, #0
 800069a:	bf18      	it	ne
 800069c:	f04e 0e01 	orrne.w	lr, lr, #1
 80006a0:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 80006a4:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 80006a8:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 80006ac:	d204      	bcs.n	80006b8 <__aeabi_dmul+0x80>
 80006ae:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006b2:	416d      	adcs	r5, r5
 80006b4:	eb46 0606 	adc.w	r6, r6, r6
 80006b8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006bc:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006c0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006c4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006c8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006cc:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006d0:	bf88      	it	hi
 80006d2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006d6:	d81e      	bhi.n	8000716 <__aeabi_dmul+0xde>
 80006d8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006dc:	bf08      	it	eq
 80006de:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006e2:	f150 0000 	adcs.w	r0, r0, #0
 80006e6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006f0:	ea46 0101 	orr.w	r1, r6, r1
 80006f4:	ea40 0002 	orr.w	r0, r0, r2
 80006f8:	ea81 0103 	eor.w	r1, r1, r3
 80006fc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000700:	bfc2      	ittt	gt
 8000702:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000706:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800070a:	bd70      	popgt	{r4, r5, r6, pc}
 800070c:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000710:	f04f 0e00 	mov.w	lr, #0
 8000714:	3c01      	subs	r4, #1
 8000716:	f300 80ab 	bgt.w	8000870 <__aeabi_dmul+0x238>
 800071a:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 800071e:	bfde      	ittt	le
 8000720:	2000      	movle	r0, #0
 8000722:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 8000726:	bd70      	pople	{r4, r5, r6, pc}
 8000728:	f1c4 0400 	rsb	r4, r4, #0
 800072c:	3c20      	subs	r4, #32
 800072e:	da35      	bge.n	800079c <__aeabi_dmul+0x164>
 8000730:	340c      	adds	r4, #12
 8000732:	dc1b      	bgt.n	800076c <__aeabi_dmul+0x134>
 8000734:	f104 0414 	add.w	r4, r4, #20
 8000738:	f1c4 0520 	rsb	r5, r4, #32
 800073c:	fa00 f305 	lsl.w	r3, r0, r5
 8000740:	fa20 f004 	lsr.w	r0, r0, r4
 8000744:	fa01 f205 	lsl.w	r2, r1, r5
 8000748:	ea40 0002 	orr.w	r0, r0, r2
 800074c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000750:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000754:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000758:	fa21 f604 	lsr.w	r6, r1, r4
 800075c:	eb42 0106 	adc.w	r1, r2, r6
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 040c 	rsb	r4, r4, #12
 8000770:	f1c4 0520 	rsb	r5, r4, #32
 8000774:	fa00 f304 	lsl.w	r3, r0, r4
 8000778:	fa20 f005 	lsr.w	r0, r0, r5
 800077c:	fa01 f204 	lsl.w	r2, r1, r4
 8000780:	ea40 0002 	orr.w	r0, r0, r2
 8000784:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000788:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800078c:	f141 0100 	adc.w	r1, r1, #0
 8000790:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000794:	bf08      	it	eq
 8000796:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800079a:	bd70      	pop	{r4, r5, r6, pc}
 800079c:	f1c4 0520 	rsb	r5, r4, #32
 80007a0:	fa00 f205 	lsl.w	r2, r0, r5
 80007a4:	ea4e 0e02 	orr.w	lr, lr, r2
 80007a8:	fa20 f304 	lsr.w	r3, r0, r4
 80007ac:	fa01 f205 	lsl.w	r2, r1, r5
 80007b0:	ea43 0302 	orr.w	r3, r3, r2
 80007b4:	fa21 f004 	lsr.w	r0, r1, r4
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007bc:	fa21 f204 	lsr.w	r2, r1, r4
 80007c0:	ea20 0002 	bic.w	r0, r0, r2
 80007c4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007cc:	bf08      	it	eq
 80007ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007d2:	bd70      	pop	{r4, r5, r6, pc}
 80007d4:	f094 0f00 	teq	r4, #0
 80007d8:	d10f      	bne.n	80007fa <__aeabi_dmul+0x1c2>
 80007da:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007de:	0040      	lsls	r0, r0, #1
 80007e0:	eb41 0101 	adc.w	r1, r1, r1
 80007e4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3c01      	subeq	r4, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1a6>
 80007ee:	ea41 0106 	orr.w	r1, r1, r6
 80007f2:	f095 0f00 	teq	r5, #0
 80007f6:	bf18      	it	ne
 80007f8:	4770      	bxne	lr
 80007fa:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007fe:	0052      	lsls	r2, r2, #1
 8000800:	eb43 0303 	adc.w	r3, r3, r3
 8000804:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000808:	bf08      	it	eq
 800080a:	3d01      	subeq	r5, #1
 800080c:	d0f7      	beq.n	80007fe <__aeabi_dmul+0x1c6>
 800080e:	ea43 0306 	orr.w	r3, r3, r6
 8000812:	4770      	bx	lr
 8000814:	ea94 0f0c 	teq	r4, ip
 8000818:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800081c:	bf18      	it	ne
 800081e:	ea95 0f0c 	teqne	r5, ip
 8000822:	d00c      	beq.n	800083e <__aeabi_dmul+0x206>
 8000824:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000828:	bf18      	it	ne
 800082a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082e:	d1d1      	bne.n	80007d4 <__aeabi_dmul+0x19c>
 8000830:	ea81 0103 	eor.w	r1, r1, r3
 8000834:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000838:	f04f 0000 	mov.w	r0, #0
 800083c:	bd70      	pop	{r4, r5, r6, pc}
 800083e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000842:	bf06      	itte	eq
 8000844:	4610      	moveq	r0, r2
 8000846:	4619      	moveq	r1, r3
 8000848:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800084c:	d019      	beq.n	8000882 <__aeabi_dmul+0x24a>
 800084e:	ea94 0f0c 	teq	r4, ip
 8000852:	d102      	bne.n	800085a <__aeabi_dmul+0x222>
 8000854:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000858:	d113      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800085a:	ea95 0f0c 	teq	r5, ip
 800085e:	d105      	bne.n	800086c <__aeabi_dmul+0x234>
 8000860:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000864:	bf1c      	itt	ne
 8000866:	4610      	movne	r0, r2
 8000868:	4619      	movne	r1, r3
 800086a:	d10a      	bne.n	8000882 <__aeabi_dmul+0x24a>
 800086c:	ea81 0103 	eor.w	r1, r1, r3
 8000870:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000874:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000878:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800087c:	f04f 0000 	mov.w	r0, #0
 8000880:	bd70      	pop	{r4, r5, r6, pc}
 8000882:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000886:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800088a:	bd70      	pop	{r4, r5, r6, pc}

0800088c <__aeabi_ddiv>:
 800088c:	b570      	push	{r4, r5, r6, lr}
 800088e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000892:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000896:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800089a:	bf1d      	ittte	ne
 800089c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80008a0:	ea94 0f0c 	teqne	r4, ip
 80008a4:	ea95 0f0c 	teqne	r5, ip
 80008a8:	f000 f8a7 	bleq	80009fa <__aeabi_ddiv+0x16e>
 80008ac:	eba4 0405 	sub.w	r4, r4, r5
 80008b0:	ea81 0e03 	eor.w	lr, r1, r3
 80008b4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008b8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008bc:	f000 8088 	beq.w	80009d0 <__aeabi_ddiv+0x144>
 80008c0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008c4:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 80008c8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008cc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008d0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008d4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008d8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008dc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008e0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008e4:	429d      	cmp	r5, r3
 80008e6:	bf08      	it	eq
 80008e8:	4296      	cmpeq	r6, r2
 80008ea:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008ee:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008f2:	d202      	bcs.n	80008fa <__aeabi_ddiv+0x6e>
 80008f4:	085b      	lsrs	r3, r3, #1
 80008f6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fa:	1ab6      	subs	r6, r6, r2
 80008fc:	eb65 0503 	sbc.w	r5, r5, r3
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 800090a:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000938:	085b      	lsrs	r3, r3, #1
 800093a:	ea4f 0232 	mov.w	r2, r2, rrx
 800093e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000942:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000946:	bf22      	ittt	cs
 8000948:	1ab6      	subcs	r6, r6, r2
 800094a:	4675      	movcs	r5, lr
 800094c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000950:	085b      	lsrs	r3, r3, #1
 8000952:	ea4f 0232 	mov.w	r2, r2, rrx
 8000956:	ebb6 0e02 	subs.w	lr, r6, r2
 800095a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800095e:	bf22      	ittt	cs
 8000960:	1ab6      	subcs	r6, r6, r2
 8000962:	4675      	movcs	r5, lr
 8000964:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000968:	ea55 0e06 	orrs.w	lr, r5, r6
 800096c:	d018      	beq.n	80009a0 <__aeabi_ddiv+0x114>
 800096e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000972:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000976:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800097a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800097e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000982:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000986:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800098a:	d1c0      	bne.n	800090e <__aeabi_ddiv+0x82>
 800098c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000990:	d10b      	bne.n	80009aa <__aeabi_ddiv+0x11e>
 8000992:	ea41 0100 	orr.w	r1, r1, r0
 8000996:	f04f 0000 	mov.w	r0, #0
 800099a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800099e:	e7b6      	b.n	800090e <__aeabi_ddiv+0x82>
 80009a0:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80009a4:	bf04      	itt	eq
 80009a6:	4301      	orreq	r1, r0
 80009a8:	2000      	moveq	r0, #0
 80009aa:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80009ae:	bf88      	it	hi
 80009b0:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80009b4:	f63f aeaf 	bhi.w	8000716 <__aeabi_dmul+0xde>
 80009b8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009bc:	bf04      	itt	eq
 80009be:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009c2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009c6:	f150 0000 	adcs.w	r0, r0, #0
 80009ca:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ce:	bd70      	pop	{r4, r5, r6, pc}
 80009d0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009d4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009d8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009dc:	bfc2      	ittt	gt
 80009de:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009e2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009e6:	bd70      	popgt	{r4, r5, r6, pc}
 80009e8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009ec:	f04f 0e00 	mov.w	lr, #0
 80009f0:	3c01      	subs	r4, #1
 80009f2:	e690      	b.n	8000716 <__aeabi_dmul+0xde>
 80009f4:	ea45 0e06 	orr.w	lr, r5, r6
 80009f8:	e68d      	b.n	8000716 <__aeabi_dmul+0xde>
 80009fa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009fe:	ea94 0f0c 	teq	r4, ip
 8000a02:	bf08      	it	eq
 8000a04:	ea95 0f0c 	teqeq	r5, ip
 8000a08:	f43f af3b 	beq.w	8000882 <__aeabi_dmul+0x24a>
 8000a0c:	ea94 0f0c 	teq	r4, ip
 8000a10:	d10a      	bne.n	8000a28 <__aeabi_ddiv+0x19c>
 8000a12:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a16:	f47f af34 	bne.w	8000882 <__aeabi_dmul+0x24a>
 8000a1a:	ea95 0f0c 	teq	r5, ip
 8000a1e:	f47f af25 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a22:	4610      	mov	r0, r2
 8000a24:	4619      	mov	r1, r3
 8000a26:	e72c      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a28:	ea95 0f0c 	teq	r5, ip
 8000a2c:	d106      	bne.n	8000a3c <__aeabi_ddiv+0x1b0>
 8000a2e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a32:	f43f aefd 	beq.w	8000830 <__aeabi_dmul+0x1f8>
 8000a36:	4610      	mov	r0, r2
 8000a38:	4619      	mov	r1, r3
 8000a3a:	e722      	b.n	8000882 <__aeabi_dmul+0x24a>
 8000a3c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a46:	f47f aec5 	bne.w	80007d4 <__aeabi_dmul+0x19c>
 8000a4a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a4e:	f47f af0d 	bne.w	800086c <__aeabi_dmul+0x234>
 8000a52:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a56:	f47f aeeb 	bne.w	8000830 <__aeabi_dmul+0x1f8>
 8000a5a:	e712      	b.n	8000882 <__aeabi_dmul+0x24a>

08000a5c <__gedf2>:
 8000a5c:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
 8000a60:	e006      	b.n	8000a70 <__cmpdf2+0x4>
 8000a62:	bf00      	nop

08000a64 <__ledf2>:
 8000a64:	f04f 0c01 	mov.w	ip, #1
 8000a68:	e002      	b.n	8000a70 <__cmpdf2+0x4>
 8000a6a:	bf00      	nop

08000a6c <__cmpdf2>:
 8000a6c:	f04f 0c01 	mov.w	ip, #1
 8000a70:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a74:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a80:	bf18      	it	ne
 8000a82:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a86:	d01b      	beq.n	8000ac0 <__cmpdf2+0x54>
 8000a88:	b001      	add	sp, #4
 8000a8a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a8e:	bf0c      	ite	eq
 8000a90:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a94:	ea91 0f03 	teqne	r1, r3
 8000a98:	bf02      	ittt	eq
 8000a9a:	ea90 0f02 	teqeq	r0, r2
 8000a9e:	2000      	moveq	r0, #0
 8000aa0:	4770      	bxeq	lr
 8000aa2:	f110 0f00 	cmn.w	r0, #0
 8000aa6:	ea91 0f03 	teq	r1, r3
 8000aaa:	bf58      	it	pl
 8000aac:	4299      	cmppl	r1, r3
 8000aae:	bf08      	it	eq
 8000ab0:	4290      	cmpeq	r0, r2
 8000ab2:	bf2c      	ite	cs
 8000ab4:	17d8      	asrcs	r0, r3, #31
 8000ab6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aba:	f040 0001 	orr.w	r0, r0, #1
 8000abe:	4770      	bx	lr
 8000ac0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d102      	bne.n	8000ad0 <__cmpdf2+0x64>
 8000aca:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ace:	d107      	bne.n	8000ae0 <__cmpdf2+0x74>
 8000ad0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d1d6      	bne.n	8000a88 <__cmpdf2+0x1c>
 8000ada:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ade:	d0d3      	beq.n	8000a88 <__cmpdf2+0x1c>
 8000ae0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ae4:	4770      	bx	lr
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdrcmple>:
 8000ae8:	4684      	mov	ip, r0
 8000aea:	4610      	mov	r0, r2
 8000aec:	4662      	mov	r2, ip
 8000aee:	468c      	mov	ip, r1
 8000af0:	4619      	mov	r1, r3
 8000af2:	4663      	mov	r3, ip
 8000af4:	e000      	b.n	8000af8 <__aeabi_cdcmpeq>
 8000af6:	bf00      	nop

08000af8 <__aeabi_cdcmpeq>:
 8000af8:	b501      	push	{r0, lr}
 8000afa:	f7ff ffb7 	bl	8000a6c <__cmpdf2>
 8000afe:	2800      	cmp	r0, #0
 8000b00:	bf48      	it	mi
 8000b02:	f110 0f00 	cmnmi.w	r0, #0
 8000b06:	bd01      	pop	{r0, pc}

08000b08 <__aeabi_dcmpeq>:
 8000b08:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b0c:	f7ff fff4 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b10:	bf0c      	ite	eq
 8000b12:	2001      	moveq	r0, #1
 8000b14:	2000      	movne	r0, #0
 8000b16:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1a:	bf00      	nop

08000b1c <__aeabi_dcmplt>:
 8000b1c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b20:	f7ff ffea 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b24:	bf34      	ite	cc
 8000b26:	2001      	movcc	r0, #1
 8000b28:	2000      	movcs	r0, #0
 8000b2a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2e:	bf00      	nop

08000b30 <__aeabi_dcmple>:
 8000b30:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b34:	f7ff ffe0 	bl	8000af8 <__aeabi_cdcmpeq>
 8000b38:	bf94      	ite	ls
 8000b3a:	2001      	movls	r0, #1
 8000b3c:	2000      	movhi	r0, #0
 8000b3e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b42:	bf00      	nop

08000b44 <__aeabi_dcmpge>:
 8000b44:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b48:	f7ff ffce 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b4c:	bf94      	ite	ls
 8000b4e:	2001      	movls	r0, #1
 8000b50:	2000      	movhi	r0, #0
 8000b52:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b56:	bf00      	nop

08000b58 <__aeabi_dcmpgt>:
 8000b58:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b5c:	f7ff ffc4 	bl	8000ae8 <__aeabi_cdrcmple>
 8000b60:	bf34      	ite	cc
 8000b62:	2001      	movcc	r0, #1
 8000b64:	2000      	movcs	r0, #0
 8000b66:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b6a:	bf00      	nop

08000b6c <__aeabi_dcmpun>:
 8000b6c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b70:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b74:	d102      	bne.n	8000b7c <__aeabi_dcmpun+0x10>
 8000b76:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b7a:	d10a      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b7c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b84:	d102      	bne.n	8000b8c <__aeabi_dcmpun+0x20>
 8000b86:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b8a:	d102      	bne.n	8000b92 <__aeabi_dcmpun+0x26>
 8000b8c:	f04f 0000 	mov.w	r0, #0
 8000b90:	4770      	bx	lr
 8000b92:	f04f 0001 	mov.w	r0, #1
 8000b96:	4770      	bx	lr

08000b98 <__aeabi_d2iz>:
 8000b98:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b9c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8000ba0:	d215      	bcs.n	8000bce <__aeabi_d2iz+0x36>
 8000ba2:	d511      	bpl.n	8000bc8 <__aeabi_d2iz+0x30>
 8000ba4:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000ba8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bac:	d912      	bls.n	8000bd4 <__aeabi_d2iz+0x3c>
 8000bae:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bb2:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000bb6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bba:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000bbe:	fa23 f002 	lsr.w	r0, r3, r2
 8000bc2:	bf18      	it	ne
 8000bc4:	4240      	negne	r0, r0
 8000bc6:	4770      	bx	lr
 8000bc8:	f04f 0000 	mov.w	r0, #0
 8000bcc:	4770      	bx	lr
 8000bce:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bd2:	d105      	bne.n	8000be0 <__aeabi_d2iz+0x48>
 8000bd4:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8000bd8:	bf08      	it	eq
 8000bda:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	bf00      	nop

08000be8 <__aeabi_d2f>:
 8000be8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000bf0:	bf24      	itt	cs
 8000bf2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000bf6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000bfa:	d90d      	bls.n	8000c18 <__aeabi_d2f+0x30>
 8000bfc:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000c00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c08:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000c0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c10:	bf08      	it	eq
 8000c12:	f020 0001 	biceq.w	r0, r0, #1
 8000c16:	4770      	bx	lr
 8000c18:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000c1c:	d121      	bne.n	8000c62 <__aeabi_d2f+0x7a>
 8000c1e:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000c22:	bfbc      	itt	lt
 8000c24:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000c28:	4770      	bxlt	lr
 8000c2a:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000c2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c32:	f1c2 0218 	rsb	r2, r2, #24
 8000c36:	f1c2 0c20 	rsb	ip, r2, #32
 8000c3a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c3e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c42:	bf18      	it	ne
 8000c44:	f040 0001 	orrne.w	r0, r0, #1
 8000c48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c50:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c54:	ea40 000c 	orr.w	r0, r0, ip
 8000c58:	fa23 f302 	lsr.w	r3, r3, r2
 8000c5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c60:	e7cc      	b.n	8000bfc <__aeabi_d2f+0x14>
 8000c62:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c66:	d107      	bne.n	8000c78 <__aeabi_d2f+0x90>
 8000c68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c6c:	bf1e      	ittt	ne
 8000c6e:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000c72:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000c76:	4770      	bxne	lr
 8000c78:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000c7c:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000c80:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000c84:	4770      	bx	lr
 8000c86:	bf00      	nop

08000c88 <__aeabi_uldivmod>:
 8000c88:	b953      	cbnz	r3, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8a:	b94a      	cbnz	r2, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8c:	2900      	cmp	r1, #0
 8000c8e:	bf08      	it	eq
 8000c90:	2800      	cmpeq	r0, #0
 8000c92:	bf1c      	itt	ne
 8000c94:	f04f 31ff 	movne.w	r1, #4294967295	@ 0xffffffff
 8000c98:	f04f 30ff 	movne.w	r0, #4294967295	@ 0xffffffff
 8000c9c:	f000 b96a 	b.w	8000f74 <__aeabi_idiv0>
 8000ca0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ca4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ca8:	f000 f806 	bl	8000cb8 <__udivmoddi4>
 8000cac:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cb0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cb4:	b004      	add	sp, #16
 8000cb6:	4770      	bx	lr

08000cb8 <__udivmoddi4>:
 8000cb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000cbc:	9d08      	ldr	r5, [sp, #32]
 8000cbe:	460c      	mov	r4, r1
 8000cc0:	2b00      	cmp	r3, #0
 8000cc2:	d14e      	bne.n	8000d62 <__udivmoddi4+0xaa>
 8000cc4:	4694      	mov	ip, r2
 8000cc6:	458c      	cmp	ip, r1
 8000cc8:	4686      	mov	lr, r0
 8000cca:	fab2 f282 	clz	r2, r2
 8000cce:	d962      	bls.n	8000d96 <__udivmoddi4+0xde>
 8000cd0:	b14a      	cbz	r2, 8000ce6 <__udivmoddi4+0x2e>
 8000cd2:	f1c2 0320 	rsb	r3, r2, #32
 8000cd6:	4091      	lsls	r1, r2
 8000cd8:	fa20 f303 	lsr.w	r3, r0, r3
 8000cdc:	fa0c fc02 	lsl.w	ip, ip, r2
 8000ce0:	4319      	orrs	r1, r3
 8000ce2:	fa00 fe02 	lsl.w	lr, r0, r2
 8000ce6:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000cea:	fa1f f68c 	uxth.w	r6, ip
 8000cee:	fbb1 f4f7 	udiv	r4, r1, r7
 8000cf2:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000cf6:	fb07 1114 	mls	r1, r7, r4, r1
 8000cfa:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000cfe:	fb04 f106 	mul.w	r1, r4, r6
 8000d02:	4299      	cmp	r1, r3
 8000d04:	d90a      	bls.n	8000d1c <__udivmoddi4+0x64>
 8000d06:	eb1c 0303 	adds.w	r3, ip, r3
 8000d0a:	f104 30ff 	add.w	r0, r4, #4294967295	@ 0xffffffff
 8000d0e:	f080 8112 	bcs.w	8000f36 <__udivmoddi4+0x27e>
 8000d12:	4299      	cmp	r1, r3
 8000d14:	f240 810f 	bls.w	8000f36 <__udivmoddi4+0x27e>
 8000d18:	3c02      	subs	r4, #2
 8000d1a:	4463      	add	r3, ip
 8000d1c:	1a59      	subs	r1, r3, r1
 8000d1e:	fa1f f38e 	uxth.w	r3, lr
 8000d22:	fbb1 f0f7 	udiv	r0, r1, r7
 8000d26:	fb07 1110 	mls	r1, r7, r0, r1
 8000d2a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000d2e:	fb00 f606 	mul.w	r6, r0, r6
 8000d32:	429e      	cmp	r6, r3
 8000d34:	d90a      	bls.n	8000d4c <__udivmoddi4+0x94>
 8000d36:	eb1c 0303 	adds.w	r3, ip, r3
 8000d3a:	f100 31ff 	add.w	r1, r0, #4294967295	@ 0xffffffff
 8000d3e:	f080 80fc 	bcs.w	8000f3a <__udivmoddi4+0x282>
 8000d42:	429e      	cmp	r6, r3
 8000d44:	f240 80f9 	bls.w	8000f3a <__udivmoddi4+0x282>
 8000d48:	4463      	add	r3, ip
 8000d4a:	3802      	subs	r0, #2
 8000d4c:	1b9b      	subs	r3, r3, r6
 8000d4e:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8000d52:	2100      	movs	r1, #0
 8000d54:	b11d      	cbz	r5, 8000d5e <__udivmoddi4+0xa6>
 8000d56:	40d3      	lsrs	r3, r2
 8000d58:	2200      	movs	r2, #0
 8000d5a:	e9c5 3200 	strd	r3, r2, [r5]
 8000d5e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d62:	428b      	cmp	r3, r1
 8000d64:	d905      	bls.n	8000d72 <__udivmoddi4+0xba>
 8000d66:	b10d      	cbz	r5, 8000d6c <__udivmoddi4+0xb4>
 8000d68:	e9c5 0100 	strd	r0, r1, [r5]
 8000d6c:	2100      	movs	r1, #0
 8000d6e:	4608      	mov	r0, r1
 8000d70:	e7f5      	b.n	8000d5e <__udivmoddi4+0xa6>
 8000d72:	fab3 f183 	clz	r1, r3
 8000d76:	2900      	cmp	r1, #0
 8000d78:	d146      	bne.n	8000e08 <__udivmoddi4+0x150>
 8000d7a:	42a3      	cmp	r3, r4
 8000d7c:	d302      	bcc.n	8000d84 <__udivmoddi4+0xcc>
 8000d7e:	4290      	cmp	r0, r2
 8000d80:	f0c0 80f0 	bcc.w	8000f64 <__udivmoddi4+0x2ac>
 8000d84:	1a86      	subs	r6, r0, r2
 8000d86:	eb64 0303 	sbc.w	r3, r4, r3
 8000d8a:	2001      	movs	r0, #1
 8000d8c:	2d00      	cmp	r5, #0
 8000d8e:	d0e6      	beq.n	8000d5e <__udivmoddi4+0xa6>
 8000d90:	e9c5 6300 	strd	r6, r3, [r5]
 8000d94:	e7e3      	b.n	8000d5e <__udivmoddi4+0xa6>
 8000d96:	2a00      	cmp	r2, #0
 8000d98:	f040 8090 	bne.w	8000ebc <__udivmoddi4+0x204>
 8000d9c:	eba1 040c 	sub.w	r4, r1, ip
 8000da0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000da4:	fa1f f78c 	uxth.w	r7, ip
 8000da8:	2101      	movs	r1, #1
 8000daa:	fbb4 f6f8 	udiv	r6, r4, r8
 8000dae:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000db2:	fb08 4416 	mls	r4, r8, r6, r4
 8000db6:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000dba:	fb07 f006 	mul.w	r0, r7, r6
 8000dbe:	4298      	cmp	r0, r3
 8000dc0:	d908      	bls.n	8000dd4 <__udivmoddi4+0x11c>
 8000dc2:	eb1c 0303 	adds.w	r3, ip, r3
 8000dc6:	f106 34ff 	add.w	r4, r6, #4294967295	@ 0xffffffff
 8000dca:	d202      	bcs.n	8000dd2 <__udivmoddi4+0x11a>
 8000dcc:	4298      	cmp	r0, r3
 8000dce:	f200 80cd 	bhi.w	8000f6c <__udivmoddi4+0x2b4>
 8000dd2:	4626      	mov	r6, r4
 8000dd4:	1a1c      	subs	r4, r3, r0
 8000dd6:	fa1f f38e 	uxth.w	r3, lr
 8000dda:	fbb4 f0f8 	udiv	r0, r4, r8
 8000dde:	fb08 4410 	mls	r4, r8, r0, r4
 8000de2:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000de6:	fb00 f707 	mul.w	r7, r0, r7
 8000dea:	429f      	cmp	r7, r3
 8000dec:	d908      	bls.n	8000e00 <__udivmoddi4+0x148>
 8000dee:	eb1c 0303 	adds.w	r3, ip, r3
 8000df2:	f100 34ff 	add.w	r4, r0, #4294967295	@ 0xffffffff
 8000df6:	d202      	bcs.n	8000dfe <__udivmoddi4+0x146>
 8000df8:	429f      	cmp	r7, r3
 8000dfa:	f200 80b0 	bhi.w	8000f5e <__udivmoddi4+0x2a6>
 8000dfe:	4620      	mov	r0, r4
 8000e00:	1bdb      	subs	r3, r3, r7
 8000e02:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000e06:	e7a5      	b.n	8000d54 <__udivmoddi4+0x9c>
 8000e08:	f1c1 0620 	rsb	r6, r1, #32
 8000e0c:	408b      	lsls	r3, r1
 8000e0e:	fa22 f706 	lsr.w	r7, r2, r6
 8000e12:	431f      	orrs	r7, r3
 8000e14:	fa20 fc06 	lsr.w	ip, r0, r6
 8000e18:	fa04 f301 	lsl.w	r3, r4, r1
 8000e1c:	ea43 030c 	orr.w	r3, r3, ip
 8000e20:	40f4      	lsrs	r4, r6
 8000e22:	fa00 f801 	lsl.w	r8, r0, r1
 8000e26:	0c38      	lsrs	r0, r7, #16
 8000e28:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000e2c:	fbb4 fef0 	udiv	lr, r4, r0
 8000e30:	fa1f fc87 	uxth.w	ip, r7
 8000e34:	fb00 441e 	mls	r4, r0, lr, r4
 8000e38:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000e3c:	fb0e f90c 	mul.w	r9, lr, ip
 8000e40:	45a1      	cmp	r9, r4
 8000e42:	fa02 f201 	lsl.w	r2, r2, r1
 8000e46:	d90a      	bls.n	8000e5e <__udivmoddi4+0x1a6>
 8000e48:	193c      	adds	r4, r7, r4
 8000e4a:	f10e 3aff 	add.w	sl, lr, #4294967295	@ 0xffffffff
 8000e4e:	f080 8084 	bcs.w	8000f5a <__udivmoddi4+0x2a2>
 8000e52:	45a1      	cmp	r9, r4
 8000e54:	f240 8081 	bls.w	8000f5a <__udivmoddi4+0x2a2>
 8000e58:	f1ae 0e02 	sub.w	lr, lr, #2
 8000e5c:	443c      	add	r4, r7
 8000e5e:	eba4 0409 	sub.w	r4, r4, r9
 8000e62:	fa1f f983 	uxth.w	r9, r3
 8000e66:	fbb4 f3f0 	udiv	r3, r4, r0
 8000e6a:	fb00 4413 	mls	r4, r0, r3, r4
 8000e6e:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000e72:	fb03 fc0c 	mul.w	ip, r3, ip
 8000e76:	45a4      	cmp	ip, r4
 8000e78:	d907      	bls.n	8000e8a <__udivmoddi4+0x1d2>
 8000e7a:	193c      	adds	r4, r7, r4
 8000e7c:	f103 30ff 	add.w	r0, r3, #4294967295	@ 0xffffffff
 8000e80:	d267      	bcs.n	8000f52 <__udivmoddi4+0x29a>
 8000e82:	45a4      	cmp	ip, r4
 8000e84:	d965      	bls.n	8000f52 <__udivmoddi4+0x29a>
 8000e86:	3b02      	subs	r3, #2
 8000e88:	443c      	add	r4, r7
 8000e8a:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8000e8e:	fba0 9302 	umull	r9, r3, r0, r2
 8000e92:	eba4 040c 	sub.w	r4, r4, ip
 8000e96:	429c      	cmp	r4, r3
 8000e98:	46ce      	mov	lr, r9
 8000e9a:	469c      	mov	ip, r3
 8000e9c:	d351      	bcc.n	8000f42 <__udivmoddi4+0x28a>
 8000e9e:	d04e      	beq.n	8000f3e <__udivmoddi4+0x286>
 8000ea0:	b155      	cbz	r5, 8000eb8 <__udivmoddi4+0x200>
 8000ea2:	ebb8 030e 	subs.w	r3, r8, lr
 8000ea6:	eb64 040c 	sbc.w	r4, r4, ip
 8000eaa:	fa04 f606 	lsl.w	r6, r4, r6
 8000eae:	40cb      	lsrs	r3, r1
 8000eb0:	431e      	orrs	r6, r3
 8000eb2:	40cc      	lsrs	r4, r1
 8000eb4:	e9c5 6400 	strd	r6, r4, [r5]
 8000eb8:	2100      	movs	r1, #0
 8000eba:	e750      	b.n	8000d5e <__udivmoddi4+0xa6>
 8000ebc:	f1c2 0320 	rsb	r3, r2, #32
 8000ec0:	fa20 f103 	lsr.w	r1, r0, r3
 8000ec4:	fa0c fc02 	lsl.w	ip, ip, r2
 8000ec8:	fa24 f303 	lsr.w	r3, r4, r3
 8000ecc:	4094      	lsls	r4, r2
 8000ece:	430c      	orrs	r4, r1
 8000ed0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000ed4:	fa00 fe02 	lsl.w	lr, r0, r2
 8000ed8:	fa1f f78c 	uxth.w	r7, ip
 8000edc:	fbb3 f0f8 	udiv	r0, r3, r8
 8000ee0:	fb08 3110 	mls	r1, r8, r0, r3
 8000ee4:	0c23      	lsrs	r3, r4, #16
 8000ee6:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000eea:	fb00 f107 	mul.w	r1, r0, r7
 8000eee:	4299      	cmp	r1, r3
 8000ef0:	d908      	bls.n	8000f04 <__udivmoddi4+0x24c>
 8000ef2:	eb1c 0303 	adds.w	r3, ip, r3
 8000ef6:	f100 36ff 	add.w	r6, r0, #4294967295	@ 0xffffffff
 8000efa:	d22c      	bcs.n	8000f56 <__udivmoddi4+0x29e>
 8000efc:	4299      	cmp	r1, r3
 8000efe:	d92a      	bls.n	8000f56 <__udivmoddi4+0x29e>
 8000f00:	3802      	subs	r0, #2
 8000f02:	4463      	add	r3, ip
 8000f04:	1a5b      	subs	r3, r3, r1
 8000f06:	b2a4      	uxth	r4, r4
 8000f08:	fbb3 f1f8 	udiv	r1, r3, r8
 8000f0c:	fb08 3311 	mls	r3, r8, r1, r3
 8000f10:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000f14:	fb01 f307 	mul.w	r3, r1, r7
 8000f18:	42a3      	cmp	r3, r4
 8000f1a:	d908      	bls.n	8000f2e <__udivmoddi4+0x276>
 8000f1c:	eb1c 0404 	adds.w	r4, ip, r4
 8000f20:	f101 36ff 	add.w	r6, r1, #4294967295	@ 0xffffffff
 8000f24:	d213      	bcs.n	8000f4e <__udivmoddi4+0x296>
 8000f26:	42a3      	cmp	r3, r4
 8000f28:	d911      	bls.n	8000f4e <__udivmoddi4+0x296>
 8000f2a:	3902      	subs	r1, #2
 8000f2c:	4464      	add	r4, ip
 8000f2e:	1ae4      	subs	r4, r4, r3
 8000f30:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8000f34:	e739      	b.n	8000daa <__udivmoddi4+0xf2>
 8000f36:	4604      	mov	r4, r0
 8000f38:	e6f0      	b.n	8000d1c <__udivmoddi4+0x64>
 8000f3a:	4608      	mov	r0, r1
 8000f3c:	e706      	b.n	8000d4c <__udivmoddi4+0x94>
 8000f3e:	45c8      	cmp	r8, r9
 8000f40:	d2ae      	bcs.n	8000ea0 <__udivmoddi4+0x1e8>
 8000f42:	ebb9 0e02 	subs.w	lr, r9, r2
 8000f46:	eb63 0c07 	sbc.w	ip, r3, r7
 8000f4a:	3801      	subs	r0, #1
 8000f4c:	e7a8      	b.n	8000ea0 <__udivmoddi4+0x1e8>
 8000f4e:	4631      	mov	r1, r6
 8000f50:	e7ed      	b.n	8000f2e <__udivmoddi4+0x276>
 8000f52:	4603      	mov	r3, r0
 8000f54:	e799      	b.n	8000e8a <__udivmoddi4+0x1d2>
 8000f56:	4630      	mov	r0, r6
 8000f58:	e7d4      	b.n	8000f04 <__udivmoddi4+0x24c>
 8000f5a:	46d6      	mov	lr, sl
 8000f5c:	e77f      	b.n	8000e5e <__udivmoddi4+0x1a6>
 8000f5e:	4463      	add	r3, ip
 8000f60:	3802      	subs	r0, #2
 8000f62:	e74d      	b.n	8000e00 <__udivmoddi4+0x148>
 8000f64:	4606      	mov	r6, r0
 8000f66:	4623      	mov	r3, r4
 8000f68:	4608      	mov	r0, r1
 8000f6a:	e70f      	b.n	8000d8c <__udivmoddi4+0xd4>
 8000f6c:	3e02      	subs	r6, #2
 8000f6e:	4463      	add	r3, ip
 8000f70:	e730      	b.n	8000dd4 <__udivmoddi4+0x11c>
 8000f72:	bf00      	nop

08000f74 <__aeabi_idiv0>:
 8000f74:	4770      	bx	lr
 8000f76:	bf00      	nop

08000f78 <FEB_CAN_Init>:
uint32_t FEB_CAN_Tx_Mailbox;
uint8_t setup = 0;

// **************************************** Functions ****************************************

void FEB_CAN_Init(void) {
 8000f78:	b580      	push	{r7, lr}
 8000f7a:	af00      	add	r7, sp, #0
	FEB_CAN_Filter_Config();
 8000f7c:	f000 f814 	bl	8000fa8 <FEB_CAN_Filter_Config>
	if (HAL_CAN_Start(&hcan1) != HAL_OK) {
 8000f80:	4807      	ldr	r0, [pc, #28]	@ (8000fa0 <FEB_CAN_Init+0x28>)
 8000f82:	f002 f9a7 	bl	80032d4 <HAL_CAN_Start>
 8000f86:	4603      	mov	r3, r0
 8000f88:	2b00      	cmp	r3, #0
 8000f8a:	d002      	beq.n	8000f92 <FEB_CAN_Init+0x1a>
		setup = 1;
 8000f8c:	4b05      	ldr	r3, [pc, #20]	@ (8000fa4 <FEB_CAN_Init+0x2c>)
 8000f8e:	2201      	movs	r2, #1
 8000f90:	701a      	strb	r2, [r3, #0]
        // Code Error - Shutdown
	}
	HAL_CAN_ActivateNotification(&hcan1, CAN_IT_RX_FIFO0_MSG_PENDING);
 8000f92:	2102      	movs	r1, #2
 8000f94:	4802      	ldr	r0, [pc, #8]	@ (8000fa0 <FEB_CAN_Init+0x28>)
 8000f96:	f002 fc08 	bl	80037aa <HAL_CAN_ActivateNotification>
}
 8000f9a:	bf00      	nop
 8000f9c:	bd80      	pop	{r7, pc}
 8000f9e:	bf00      	nop
 8000fa0:	200002a4 	.word	0x200002a4
 8000fa4:	20000238 	.word	0x20000238

08000fa8 <FEB_CAN_Filter_Config>:

void FEB_CAN_Filter_Config(void) {
 8000fa8:	b580      	push	{r7, lr}
 8000faa:	b082      	sub	sp, #8
 8000fac:	af00      	add	r7, sp, #0
	uint8_t filter_bank = 0;
 8000fae:	2300      	movs	r3, #0
 8000fb0:	71fb      	strb	r3, [r7, #7]
    filter_bank = FEB_CAN_ICS_Filter(&hcan1, CAN_RX_FIFO0, filter_bank);
 8000fb2:	79fb      	ldrb	r3, [r7, #7]
 8000fb4:	461a      	mov	r2, r3
 8000fb6:	2100      	movs	r1, #0
 8000fb8:	480c      	ldr	r0, [pc, #48]	@ (8000fec <FEB_CAN_Filter_Config+0x44>)
 8000fba:	f000 f8b3 	bl	8001124 <FEB_CAN_ICS_Filter>
 8000fbe:	4603      	mov	r3, r0
 8000fc0:	71fb      	strb	r3, [r7, #7]
    filter_bank = FEB_CAN_BMS_Filter_Config(&hcan1, CAN_RX_FIFO0,  filter_bank);
 8000fc2:	79fb      	ldrb	r3, [r7, #7]
 8000fc4:	461a      	mov	r2, r3
 8000fc6:	2100      	movs	r1, #0
 8000fc8:	4808      	ldr	r0, [pc, #32]	@ (8000fec <FEB_CAN_Filter_Config+0x44>)
 8000fca:	f000 f833 	bl	8001034 <FEB_CAN_BMS_Filter_Config>
 8000fce:	4603      	mov	r3, r0
 8000fd0:	71fb      	strb	r3, [r7, #7]
    filter_bank = FEB_CAN_RMS_Filter_Config(&hcan1, CAN_RX_FIFO0, filter_bank);
 8000fd2:	79fb      	ldrb	r3, [r7, #7]
 8000fd4:	461a      	mov	r2, r3
 8000fd6:	2100      	movs	r1, #0
 8000fd8:	4804      	ldr	r0, [pc, #16]	@ (8000fec <FEB_CAN_Filter_Config+0x44>)
 8000fda:	f000 faa9 	bl	8001530 <FEB_CAN_RMS_Filter_Config>
 8000fde:	4603      	mov	r3, r0
 8000fe0:	71fb      	strb	r3, [r7, #7]

	// Assign Filter
    // filter_bank = Function(&hcan1, CAN_RX_FIFO0, filter_bank);
}
 8000fe2:	bf00      	nop
 8000fe4:	3708      	adds	r7, #8
 8000fe6:	46bd      	mov	sp, r7
 8000fe8:	bd80      	pop	{r7, pc}
 8000fea:	bf00      	nop
 8000fec:	200002a4 	.word	0x200002a4

08000ff0 <HAL_CAN_RxFifo0MsgPendingCallback>:

void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef* hcan) {
 8000ff0:	b580      	push	{r7, lr}
 8000ff2:	b082      	sub	sp, #8
 8000ff4:	af00      	add	r7, sp, #0
 8000ff6:	6078      	str	r0, [r7, #4]
	if (HAL_CAN_GetRxMessage(hcan, CAN_RX_FIFO0, &FEB_CAN_Rx_Header, FEB_CAN_Rx_Data) == HAL_OK) {
 8000ff8:	4b0c      	ldr	r3, [pc, #48]	@ (800102c <HAL_CAN_RxFifo0MsgPendingCallback+0x3c>)
 8000ffa:	4a0d      	ldr	r2, [pc, #52]	@ (8001030 <HAL_CAN_RxFifo0MsgPendingCallback+0x40>)
 8000ffc:	2100      	movs	r1, #0
 8000ffe:	6878      	ldr	r0, [r7, #4]
 8001000:	f002 fab1 	bl	8003566 <HAL_CAN_GetRxMessage>
 8001004:	4603      	mov	r3, r0
 8001006:	2b00      	cmp	r3, #0
 8001008:	d10b      	bne.n	8001022 <HAL_CAN_RxFifo0MsgPendingCallback+0x32>
		FEB_CAN_ICS_Store_Msg(&FEB_CAN_Rx_Header, FEB_CAN_Rx_Data);
 800100a:	4908      	ldr	r1, [pc, #32]	@ (800102c <HAL_CAN_RxFifo0MsgPendingCallback+0x3c>)
 800100c:	4808      	ldr	r0, [pc, #32]	@ (8001030 <HAL_CAN_RxFifo0MsgPendingCallback+0x40>)
 800100e:	f000 f8cb 	bl	80011a8 <FEB_CAN_ICS_Store_Msg>
		FEB_CAN_BMS_Store_Msg(&FEB_CAN_Rx_Header, FEB_CAN_Rx_Data);
 8001012:	4906      	ldr	r1, [pc, #24]	@ (800102c <HAL_CAN_RxFifo0MsgPendingCallback+0x3c>)
 8001014:	4806      	ldr	r0, [pc, #24]	@ (8001030 <HAL_CAN_RxFifo0MsgPendingCallback+0x40>)
 8001016:	f000 f851 	bl	80010bc <FEB_CAN_BMS_Store_Msg>
		FEB_CAN_RMS_Store_Msg(&FEB_CAN_Rx_Header, FEB_CAN_Rx_Data);
 800101a:	4904      	ldr	r1, [pc, #16]	@ (800102c <HAL_CAN_RxFifo0MsgPendingCallback+0x3c>)
 800101c:	4804      	ldr	r0, [pc, #16]	@ (8001030 <HAL_CAN_RxFifo0MsgPendingCallback+0x40>)
 800101e:	f000 facb 	bl	80015b8 <FEB_CAN_RMS_Store_Msg>

	}
}
 8001022:	bf00      	nop
 8001024:	3708      	adds	r7, #8
 8001026:	46bd      	mov	sp, r7
 8001028:	bd80      	pop	{r7, pc}
 800102a:	bf00      	nop
 800102c:	2000022c 	.word	0x2000022c
 8001030:	20000208 	.word	0x20000208

08001034 <FEB_CAN_BMS_Filter_Config>:



// ***** CAN FUNCTIONS ****

uint8_t FEB_CAN_BMS_Filter_Config(CAN_HandleTypeDef* hcan, uint8_t FIFO_assignment, uint8_t filter_bank) {
 8001034:	b580      	push	{r7, lr}
 8001036:	b08e      	sub	sp, #56	@ 0x38
 8001038:	af00      	add	r7, sp, #0
 800103a:	6078      	str	r0, [r7, #4]
 800103c:	460b      	mov	r3, r1
 800103e:	70fb      	strb	r3, [r7, #3]
 8001040:	4613      	mov	r3, r2
 8001042:	70bb      	strb	r3, [r7, #2]
	uint16_t ids[] = {FEB_CAN_ID_BMS_STATE,FEB_CAN_ID_BMS_TEMPERATURE};
 8001044:	2303      	movs	r3, #3
 8001046:	863b      	strh	r3, [r7, #48]	@ 0x30
 8001048:	2300      	movs	r3, #0
 800104a:	867b      	strh	r3, [r7, #50]	@ 0x32

	for (uint8_t i = 0; i < 1; i++) {
 800104c:	2300      	movs	r3, #0
 800104e:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
 8001052:	e029      	b.n	80010a8 <FEB_CAN_BMS_Filter_Config+0x74>
		CAN_FilterTypeDef filter_config;

	    // Standard CAN - 2.0A - 11 bit
	    filter_config.FilterActivation = CAN_FILTER_ENABLE;
 8001054:	2301      	movs	r3, #1
 8001056:	62bb      	str	r3, [r7, #40]	@ 0x28
		filter_config.FilterBank = filter_bank;
 8001058:	78bb      	ldrb	r3, [r7, #2]
 800105a:	61fb      	str	r3, [r7, #28]
		filter_config.FilterFIFOAssignment = FIFO_assignment;
 800105c:	78fb      	ldrb	r3, [r7, #3]
 800105e:	61bb      	str	r3, [r7, #24]
		filter_config.FilterIdHigh = ids[i] << 5;
 8001060:	f897 3037 	ldrb.w	r3, [r7, #55]	@ 0x37
 8001064:	005b      	lsls	r3, r3, #1
 8001066:	3338      	adds	r3, #56	@ 0x38
 8001068:	443b      	add	r3, r7
 800106a:	f833 3c08 	ldrh.w	r3, [r3, #-8]
 800106e:	015b      	lsls	r3, r3, #5
 8001070:	60bb      	str	r3, [r7, #8]
		filter_config.FilterIdLow = 0;
 8001072:	2300      	movs	r3, #0
 8001074:	60fb      	str	r3, [r7, #12]
		filter_config.FilterMaskIdHigh = 0xFFE0;
 8001076:	f64f 73e0 	movw	r3, #65504	@ 0xffe0
 800107a:	613b      	str	r3, [r7, #16]
		filter_config.FilterMaskIdLow = 0;
 800107c:	2300      	movs	r3, #0
 800107e:	617b      	str	r3, [r7, #20]
		filter_config.FilterMode = CAN_FILTERMODE_IDMASK;
 8001080:	2300      	movs	r3, #0
 8001082:	623b      	str	r3, [r7, #32]
		filter_config.FilterScale = CAN_FILTERSCALE_32BIT;
 8001084:	2301      	movs	r3, #1
 8001086:	627b      	str	r3, [r7, #36]	@ 0x24
		filter_config.SlaveStartFilterBank = 27;
 8001088:	231b      	movs	r3, #27
 800108a:	62fb      	str	r3, [r7, #44]	@ 0x2c
	    filter_bank++;
 800108c:	78bb      	ldrb	r3, [r7, #2]
 800108e:	3301      	adds	r3, #1
 8001090:	70bb      	strb	r3, [r7, #2]

		if (HAL_CAN_ConfigFilter(hcan, &filter_config) != HAL_OK) {
 8001092:	f107 0308 	add.w	r3, r7, #8
 8001096:	4619      	mov	r1, r3
 8001098:	6878      	ldr	r0, [r7, #4]
 800109a:	f002 f83b 	bl	8003114 <HAL_CAN_ConfigFilter>
	for (uint8_t i = 0; i < 1; i++) {
 800109e:	f897 3037 	ldrb.w	r3, [r7, #55]	@ 0x37
 80010a2:	3301      	adds	r3, #1
 80010a4:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
 80010a8:	f897 3037 	ldrb.w	r3, [r7, #55]	@ 0x37
 80010ac:	2b00      	cmp	r3, #0
 80010ae:	d0d1      	beq.n	8001054 <FEB_CAN_BMS_Filter_Config+0x20>
			//Code Error - shutdown
		}
	}

	return filter_bank;
 80010b0:	78bb      	ldrb	r3, [r7, #2]
}
 80010b2:	4618      	mov	r0, r3
 80010b4:	3738      	adds	r7, #56	@ 0x38
 80010b6:	46bd      	mov	sp, r7
 80010b8:	bd80      	pop	{r7, pc}
	...

080010bc <FEB_CAN_BMS_Store_Msg>:

void FEB_CAN_BMS_Store_Msg(CAN_RxHeaderTypeDef* pHeader, uint8_t *RxData) {
 80010bc:	b480      	push	{r7}
 80010be:	b083      	sub	sp, #12
 80010c0:	af00      	add	r7, sp, #0
 80010c2:	6078      	str	r0, [r7, #4]
 80010c4:	6039      	str	r1, [r7, #0]
    switch (pHeader -> StdId){
 80010c6:	687b      	ldr	r3, [r7, #4]
 80010c8:	681b      	ldr	r3, [r3, #0]
 80010ca:	2b00      	cmp	r3, #0
 80010cc:	d002      	beq.n	80010d4 <FEB_CAN_BMS_Store_Msg+0x18>
 80010ce:	2b03      	cmp	r3, #3
 80010d0:	d00f      	beq.n	80010f2 <FEB_CAN_BMS_Store_Msg+0x36>

        case FEB_CAN_ID_BMS_STATE:
            BMS_MESSAGE.status = RxData[0];
            break;
    }
}
 80010d2:	e013      	b.n	80010fc <FEB_CAN_BMS_Store_Msg+0x40>
        	BMS_MESSAGE.temp = RxData[2] << 8 | RxData[3];
 80010d4:	683b      	ldr	r3, [r7, #0]
 80010d6:	3302      	adds	r3, #2
 80010d8:	781b      	ldrb	r3, [r3, #0]
 80010da:	021b      	lsls	r3, r3, #8
 80010dc:	b21a      	sxth	r2, r3
 80010de:	683b      	ldr	r3, [r7, #0]
 80010e0:	3303      	adds	r3, #3
 80010e2:	781b      	ldrb	r3, [r3, #0]
 80010e4:	b21b      	sxth	r3, r3
 80010e6:	4313      	orrs	r3, r2
 80010e8:	b21b      	sxth	r3, r3
 80010ea:	b29a      	uxth	r2, r3
 80010ec:	4b06      	ldr	r3, [pc, #24]	@ (8001108 <FEB_CAN_BMS_Store_Msg+0x4c>)
 80010ee:	801a      	strh	r2, [r3, #0]
            break;
 80010f0:	e004      	b.n	80010fc <FEB_CAN_BMS_Store_Msg+0x40>
            BMS_MESSAGE.status = RxData[0];
 80010f2:	683b      	ldr	r3, [r7, #0]
 80010f4:	781a      	ldrb	r2, [r3, #0]
 80010f6:	4b04      	ldr	r3, [pc, #16]	@ (8001108 <FEB_CAN_BMS_Store_Msg+0x4c>)
 80010f8:	709a      	strb	r2, [r3, #2]
            break;
 80010fa:	bf00      	nop
}
 80010fc:	bf00      	nop
 80010fe:	370c      	adds	r7, #12
 8001100:	46bd      	mov	sp, r7
 8001102:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001106:	4770      	bx	lr
 8001108:	2000023c 	.word	0x2000023c

0800110c <FEB_CAN_BMS_getState>:

FEB_SM_ST_t FEB_CAN_BMS_getState(){
 800110c:	b480      	push	{r7}
 800110e:	af00      	add	r7, sp, #0
	return BMS_MESSAGE.status;
 8001110:	4b03      	ldr	r3, [pc, #12]	@ (8001120 <FEB_CAN_BMS_getState+0x14>)
 8001112:	789b      	ldrb	r3, [r3, #2]

}
 8001114:	4618      	mov	r0, r3
 8001116:	46bd      	mov	sp, r7
 8001118:	f85d 7b04 	ldr.w	r7, [sp], #4
 800111c:	4770      	bx	lr
 800111e:	bf00      	nop
 8001120:	2000023c 	.word	0x2000023c

08001124 <FEB_CAN_ICS_Filter>:
// ******************************** Variables ********************************
bool READY_TO_DRIVE = 0;

// **************************************** Functions ****************************************

uint8_t FEB_CAN_ICS_Filter(CAN_HandleTypeDef* hcan, uint8_t FIFO_assignment, uint8_t filter_bank) {
 8001124:	b580      	push	{r7, lr}
 8001126:	b08e      	sub	sp, #56	@ 0x38
 8001128:	af00      	add	r7, sp, #0
 800112a:	6078      	str	r0, [r7, #4]
 800112c:	460b      	mov	r3, r1
 800112e:	70fb      	strb	r3, [r7, #3]
 8001130:	4613      	mov	r3, r2
 8001132:	70bb      	strb	r3, [r7, #2]
    // For multiple filters, create array of filter IDs and loop over IDs.

	uint16_t ids[] = {FEB_CAN_ID_ICS_BUTTON_STATE};
 8001134:	2307      	movs	r3, #7
 8001136:	86bb      	strh	r3, [r7, #52]	@ 0x34

	for (uint8_t i = 0; i < 1; i++) {
 8001138:	2300      	movs	r3, #0
 800113a:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
 800113e:	e029      	b.n	8001194 <FEB_CAN_ICS_Filter+0x70>
		CAN_FilterTypeDef filter_config;

	    // Standard CAN - 2.0A - 11 bit
	    filter_config.FilterActivation = CAN_FILTER_ENABLE;
 8001140:	2301      	movs	r3, #1
 8001142:	62fb      	str	r3, [r7, #44]	@ 0x2c
		filter_config.FilterBank = filter_bank;
 8001144:	78bb      	ldrb	r3, [r7, #2]
 8001146:	623b      	str	r3, [r7, #32]
		filter_config.FilterFIFOAssignment = FIFO_assignment;
 8001148:	78fb      	ldrb	r3, [r7, #3]
 800114a:	61fb      	str	r3, [r7, #28]
		filter_config.FilterIdHigh = ids[i] << 5;
 800114c:	f897 3037 	ldrb.w	r3, [r7, #55]	@ 0x37
 8001150:	005b      	lsls	r3, r3, #1
 8001152:	3338      	adds	r3, #56	@ 0x38
 8001154:	443b      	add	r3, r7
 8001156:	f833 3c04 	ldrh.w	r3, [r3, #-4]
 800115a:	015b      	lsls	r3, r3, #5
 800115c:	60fb      	str	r3, [r7, #12]
		filter_config.FilterIdLow = 0;
 800115e:	2300      	movs	r3, #0
 8001160:	613b      	str	r3, [r7, #16]
		filter_config.FilterMaskIdHigh = 0xFFE0;
 8001162:	f64f 73e0 	movw	r3, #65504	@ 0xffe0
 8001166:	617b      	str	r3, [r7, #20]
		filter_config.FilterMaskIdLow = 0;
 8001168:	2300      	movs	r3, #0
 800116a:	61bb      	str	r3, [r7, #24]
		filter_config.FilterMode = CAN_FILTERMODE_IDMASK;
 800116c:	2300      	movs	r3, #0
 800116e:	627b      	str	r3, [r7, #36]	@ 0x24
		filter_config.FilterScale = CAN_FILTERSCALE_32BIT;
 8001170:	2301      	movs	r3, #1
 8001172:	62bb      	str	r3, [r7, #40]	@ 0x28
		filter_config.SlaveStartFilterBank = 27;
 8001174:	231b      	movs	r3, #27
 8001176:	633b      	str	r3, [r7, #48]	@ 0x30
	    filter_bank++;
 8001178:	78bb      	ldrb	r3, [r7, #2]
 800117a:	3301      	adds	r3, #1
 800117c:	70bb      	strb	r3, [r7, #2]

		if (HAL_CAN_ConfigFilter(hcan, &filter_config) != HAL_OK) {
 800117e:	f107 030c 	add.w	r3, r7, #12
 8001182:	4619      	mov	r1, r3
 8001184:	6878      	ldr	r0, [r7, #4]
 8001186:	f001 ffc5 	bl	8003114 <HAL_CAN_ConfigFilter>
	for (uint8_t i = 0; i < 1; i++) {
 800118a:	f897 3037 	ldrb.w	r3, [r7, #55]	@ 0x37
 800118e:	3301      	adds	r3, #1
 8001190:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
 8001194:	f897 3037 	ldrb.w	r3, [r7, #55]	@ 0x37
 8001198:	2b00      	cmp	r3, #0
 800119a:	d0d1      	beq.n	8001140 <FEB_CAN_ICS_Filter+0x1c>
			// Shutdown
		}
	}

	return filter_bank;
 800119c:	78bb      	ldrb	r3, [r7, #2]
}
 800119e:	4618      	mov	r0, r3
 80011a0:	3738      	adds	r7, #56	@ 0x38
 80011a2:	46bd      	mov	sp, r7
 80011a4:	bd80      	pop	{r7, pc}
	...

080011a8 <FEB_CAN_ICS_Store_Msg>:

void FEB_CAN_ICS_Store_Msg(CAN_RxHeaderTypeDef *rx_header, uint8_t rx_data[]) {
 80011a8:	b480      	push	{r7}
 80011aa:	b083      	sub	sp, #12
 80011ac:	af00      	add	r7, sp, #0
 80011ae:	6078      	str	r0, [r7, #4]
 80011b0:	6039      	str	r1, [r7, #0]
	switch(rx_header->StdId) {
 80011b2:	687b      	ldr	r3, [r7, #4]
 80011b4:	681b      	ldr	r3, [r3, #0]
 80011b6:	2b07      	cmp	r3, #7
 80011b8:	d10c      	bne.n	80011d4 <FEB_CAN_ICS_Store_Msg+0x2c>
		case FEB_CAN_ID_ICS_BUTTON_STATE:
				READY_TO_DRIVE = ((rx_data[0] | 0b11111101) == 0b11111111);
 80011ba:	683b      	ldr	r3, [r7, #0]
 80011bc:	781b      	ldrb	r3, [r3, #0]
 80011be:	f063 0302 	orn	r3, r3, #2
 80011c2:	b2db      	uxtb	r3, r3
 80011c4:	2bff      	cmp	r3, #255	@ 0xff
 80011c6:	bf0c      	ite	eq
 80011c8:	2301      	moveq	r3, #1
 80011ca:	2300      	movne	r3, #0
 80011cc:	b2da      	uxtb	r2, r3
 80011ce:	4b04      	ldr	r3, [pc, #16]	@ (80011e0 <FEB_CAN_ICS_Store_Msg+0x38>)
 80011d0:	701a      	strb	r2, [r3, #0]
				break;
 80011d2:	bf00      	nop
	}
}
 80011d4:	bf00      	nop
 80011d6:	370c      	adds	r7, #12
 80011d8:	46bd      	mov	sp, r7
 80011da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011de:	4770      	bx	lr
 80011e0:	20000240 	.word	0x20000240

080011e4 <FEB_Ready_To_Drive>:

bool FEB_Ready_To_Drive() {
 80011e4:	b480      	push	{r7}
 80011e6:	af00      	add	r7, sp, #0
	return READY_TO_DRIVE;
 80011e8:	4b03      	ldr	r3, [pc, #12]	@ (80011f8 <FEB_Ready_To_Drive+0x14>)
 80011ea:	781b      	ldrb	r3, [r3, #0]
}
 80011ec:	4618      	mov	r0, r3
 80011ee:	46bd      	mov	sp, r7
 80011f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011f4:	4770      	bx	lr
 80011f6:	bf00      	nop
 80011f8:	20000240 	.word	0x20000240

080011fc <FEB_CAN_RMS_Setup>:

// ********************************** Functions **********************************

// ***** SET UP ****

void FEB_CAN_RMS_Setup(void){
 80011fc:	b480      	push	{r7}
 80011fe:	af00      	add	r7, sp, #0
	 RMSControl.enabled = 0;
 8001200:	4b05      	ldr	r3, [pc, #20]	@ (8001218 <FEB_CAN_RMS_Setup+0x1c>)
 8001202:	2200      	movs	r2, #0
 8001204:	709a      	strb	r2, [r3, #2]
	 RMSControl.torque= 0.0;
 8001206:	4b04      	ldr	r3, [pc, #16]	@ (8001218 <FEB_CAN_RMS_Setup+0x1c>)
 8001208:	2200      	movs	r2, #0
 800120a:	801a      	strh	r2, [r3, #0]
}
 800120c:	bf00      	nop
 800120e:	46bd      	mov	sp, r7
 8001210:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001214:	4770      	bx	lr
 8001216:	bf00      	nop
 8001218:	20000244 	.word	0x20000244

0800121c <FEB_CAN_RMS_Process>:

void FEB_CAN_RMS_Process(void){
 800121c:	b480      	push	{r7}
 800121e:	af00      	add	r7, sp, #0
	if (!RMSControl.enabled){
 8001220:	4b05      	ldr	r3, [pc, #20]	@ (8001238 <FEB_CAN_RMS_Process+0x1c>)
 8001222:	789b      	ldrb	r3, [r3, #2]
 8001224:	2b00      	cmp	r3, #0
 8001226:	d102      	bne.n	800122e <FEB_CAN_RMS_Process+0x12>
//		FEB_CAN_RMS_Init();
		RMSControl.enabled = 1;
 8001228:	4b03      	ldr	r3, [pc, #12]	@ (8001238 <FEB_CAN_RMS_Process+0x1c>)
 800122a:	2201      	movs	r2, #1
 800122c:	709a      	strb	r2, [r3, #2]
	}
}
 800122e:	bf00      	nop
 8001230:	46bd      	mov	sp, r7
 8001232:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001236:	4770      	bx	lr
 8001238:	20000244 	.word	0x20000244

0800123c <FEB_CAN_RMS_Disable>:

void FEB_CAN_RMS_Disable(void){
 800123c:	b480      	push	{r7}
 800123e:	af00      	add	r7, sp, #0
	RMSControl.enabled = 0;
 8001240:	4b03      	ldr	r3, [pc, #12]	@ (8001250 <FEB_CAN_RMS_Disable+0x14>)
 8001242:	2200      	movs	r2, #0
 8001244:	709a      	strb	r2, [r3, #2]
}
 8001246:	bf00      	nop
 8001248:	46bd      	mov	sp, r7
 800124a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800124e:	4770      	bx	lr
 8001250:	20000244 	.word	0x20000244
 8001254:	00000000 	.word	0x00000000

08001258 <FEB_get_peak_current_delimiter>:
// This means we will assume the pack resistance is about 1 Ohm
// Note this will likely be steeper as we approach lower SOC, but these cell dynamics are hopefully
// negligible due to the heavy current limiting and the ohmic losses of the accumulator
// Linear interpolation between (460V, 60/60A) and (410V, 10/60A), where PEAK_CURRENT is 60A
float FEB_get_peak_current_delimiter()
{
 8001258:	b580      	push	{r7, lr}
 800125a:	b086      	sub	sp, #24
 800125c:	af00      	add	r7, sp, #0
	float accumulator_voltage = (RMS_MESSAGE.HV_Bus_Voltage-50.0) / 10.0;
 800125e:	4b38      	ldr	r3, [pc, #224]	@ (8001340 <FEB_get_peak_current_delimiter+0xe8>)
 8001260:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001264:	4618      	mov	r0, r3
 8001266:	f7ff f97d 	bl	8000564 <__aeabi_i2d>
 800126a:	f04f 0200 	mov.w	r2, #0
 800126e:	4b35      	ldr	r3, [pc, #212]	@ (8001344 <FEB_get_peak_current_delimiter+0xec>)
 8001270:	f7ff f82a 	bl	80002c8 <__aeabi_dsub>
 8001274:	4602      	mov	r2, r0
 8001276:	460b      	mov	r3, r1
 8001278:	4610      	mov	r0, r2
 800127a:	4619      	mov	r1, r3
 800127c:	f04f 0200 	mov.w	r2, #0
 8001280:	4b31      	ldr	r3, [pc, #196]	@ (8001348 <FEB_get_peak_current_delimiter+0xf0>)
 8001282:	f7ff fb03 	bl	800088c <__aeabi_ddiv>
 8001286:	4602      	mov	r2, r0
 8001288:	460b      	mov	r3, r1
 800128a:	4610      	mov	r0, r2
 800128c:	4619      	mov	r1, r3
 800128e:	f7ff fcab 	bl	8000be8 <__aeabi_d2f>
 8001292:	4603      	mov	r3, r0
 8001294:	617b      	str	r3, [r7, #20]
	float estimated_voltage_drop_at_peak = PEAK_CURRENT;
 8001296:	4b2d      	ldr	r3, [pc, #180]	@ (800134c <FEB_get_peak_current_delimiter+0xf4>)
 8001298:	613b      	str	r3, [r7, #16]
	float start_derating_voltage = 400.0 + PEAK_CURRENT; // Assume R_acc = 1ohm
 800129a:	4b2d      	ldr	r3, [pc, #180]	@ (8001350 <FEB_get_peak_current_delimiter+0xf8>)
 800129c:	60fb      	str	r3, [r7, #12]
	// Note: Comments are based on start_derating_voltage = 460V and PEAK_CURRENT = 60

	// Saturate outside of 460 and 410
	if (accumulator_voltage > start_derating_voltage)
 800129e:	ed97 7a05 	vldr	s14, [r7, #20]
 80012a2:	edd7 7a03 	vldr	s15, [r7, #12]
 80012a6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80012aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80012ae:	dd02      	ble.n	80012b6 <FEB_get_peak_current_delimiter+0x5e>
	{
		return 1;
 80012b0:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 80012b4:	e034      	b.n	8001320 <FEB_get_peak_current_delimiter+0xc8>
	}
	if (accumulator_voltage <= 410)
 80012b6:	edd7 7a05 	vldr	s15, [r7, #20]
 80012ba:	ed9f 7a26 	vldr	s14, [pc, #152]	@ 8001354 <FEB_get_peak_current_delimiter+0xfc>
 80012be:	eef4 7ac7 	vcmpe.f32	s15, s14
 80012c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80012c6:	d801      	bhi.n	80012cc <FEB_get_peak_current_delimiter+0x74>
	{
		return (10.0 / PEAK_CURRENT); // limit to only 10A 
 80012c8:	4b23      	ldr	r3, [pc, #140]	@ (8001358 <FEB_get_peak_current_delimiter+0x100>)
 80012ca:	e029      	b.n	8001320 <FEB_get_peak_current_delimiter+0xc8>

	//   x0    y0            x1    y1
	// (460V, 60/60A) and (410V, 10/60A)

	//      m   = (        y_1           -              y_0)              / (x_1 -          x_0)
	float slope = ((10.0 / PEAK_CURRENT) - (PEAK_CURRENT / PEAK_CURRENT)) / (410.0 - (start_derating_voltage));
 80012cc:	68f8      	ldr	r0, [r7, #12]
 80012ce:	f7ff f95b 	bl	8000588 <__aeabi_f2d>
 80012d2:	4602      	mov	r2, r0
 80012d4:	460b      	mov	r3, r1
 80012d6:	a116      	add	r1, pc, #88	@ (adr r1, 8001330 <FEB_get_peak_current_delimiter+0xd8>)
 80012d8:	e9d1 0100 	ldrd	r0, r1, [r1]
 80012dc:	f7fe fff4 	bl	80002c8 <__aeabi_dsub>
 80012e0:	4602      	mov	r2, r0
 80012e2:	460b      	mov	r3, r1
 80012e4:	a114      	add	r1, pc, #80	@ (adr r1, 8001338 <FEB_get_peak_current_delimiter+0xe0>)
 80012e6:	e9d1 0100 	ldrd	r0, r1, [r1]
 80012ea:	f7ff facf 	bl	800088c <__aeabi_ddiv>
 80012ee:	4602      	mov	r2, r0
 80012f0:	460b      	mov	r3, r1
 80012f2:	4610      	mov	r0, r2
 80012f4:	4619      	mov	r1, r3
 80012f6:	f7ff fc77 	bl	8000be8 <__aeabi_d2f>
 80012fa:	4603      	mov	r3, r0
 80012fc:	60bb      	str	r3, [r7, #8]
	//      y     =   m     (       x            -          x_0          ) + y_0
	float derater = slope * (accumulator_voltage - start_derating_voltage) + 1.0;
 80012fe:	ed97 7a05 	vldr	s14, [r7, #20]
 8001302:	edd7 7a03 	vldr	s15, [r7, #12]
 8001306:	ee37 7a67 	vsub.f32	s14, s14, s15
 800130a:	edd7 7a02 	vldr	s15, [r7, #8]
 800130e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001312:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8001316:	ee77 7a87 	vadd.f32	s15, s15, s14
 800131a:	edc7 7a01 	vstr	s15, [r7, #4]

	return derater;   
 800131e:	687b      	ldr	r3, [r7, #4]
}
 8001320:	ee07 3a90 	vmov	s15, r3
 8001324:	eeb0 0a67 	vmov.f32	s0, s15
 8001328:	3718      	adds	r7, #24
 800132a:	46bd      	mov	sp, r7
 800132c:	bd80      	pop	{r7, pc}
 800132e:	bf00      	nop
 8001330:	00000000 	.word	0x00000000
 8001334:	4079a000 	.word	0x4079a000
 8001338:	89d89d8a 	.word	0x89d89d8a
 800133c:	bfe9d89d 	.word	0xbfe9d89d
 8001340:	20000248 	.word	0x20000248
 8001344:	40490000 	.word	0x40490000
 8001348:	40240000 	.word	0x40240000
 800134c:	42500000 	.word	0x42500000
 8001350:	43e20000 	.word	0x43e20000
 8001354:	43cd0000 	.word	0x43cd0000
 8001358:	3e44ec4f 	.word	0x3e44ec4f
 800135c:	00000000 	.word	0x00000000

08001360 <FEB_CAN_RMS_getMaxTorque>:

float FEB_CAN_RMS_getMaxTorque(void){
 8001360:	b580      	push	{r7, lr}
 8001362:	b084      	sub	sp, #16
 8001364:	af00      	add	r7, sp, #0
	// float accumulator_voltage = min(INIT_VOLTAGE, (RMS_MESSAGE.HV_Bus_Voltage-50) / 10); // TODO: consider reading from IVT
	float motor_speed = RMS_MESSAGE.Motor_Speed * RPM_TO_RAD_S;
 8001366:	4b30      	ldr	r3, [pc, #192]	@ (8001428 <FEB_CAN_RMS_getMaxTorque+0xc8>)
 8001368:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800136c:	4618      	mov	r0, r3
 800136e:	f7ff f8f9 	bl	8000564 <__aeabi_i2d>
 8001372:	a32b      	add	r3, pc, #172	@ (adr r3, 8001420 <FEB_CAN_RMS_getMaxTorque+0xc0>)
 8001374:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001378:	f7ff f95e 	bl	8000638 <__aeabi_dmul>
 800137c:	4602      	mov	r2, r0
 800137e:	460b      	mov	r3, r1
 8001380:	4610      	mov	r0, r2
 8001382:	4619      	mov	r1, r3
 8001384:	f7ff fc30 	bl	8000be8 <__aeabi_d2f>
 8001388:	4603      	mov	r3, r0
 800138a:	60fb      	str	r3, [r7, #12]
	float peak_current_limited = PEAK_CURRENT * FEB_get_peak_current_delimiter();
 800138c:	f7ff ff64 	bl	8001258 <FEB_get_peak_current_delimiter>
 8001390:	ee10 3a10 	vmov	r3, s0
 8001394:	4618      	mov	r0, r3
 8001396:	f7ff f8f7 	bl	8000588 <__aeabi_f2d>
 800139a:	f04f 0200 	mov.w	r2, #0
 800139e:	4b23      	ldr	r3, [pc, #140]	@ (800142c <FEB_CAN_RMS_getMaxTorque+0xcc>)
 80013a0:	f7ff f94a 	bl	8000638 <__aeabi_dmul>
 80013a4:	4602      	mov	r2, r0
 80013a6:	460b      	mov	r3, r1
 80013a8:	4610      	mov	r0, r2
 80013aa:	4619      	mov	r1, r3
 80013ac:	f7ff fc1c 	bl	8000be8 <__aeabi_d2f>
 80013b0:	4603      	mov	r3, r0
 80013b2:	60bb      	str	r3, [r7, #8]
	float power_capped = peak_current_limited * 400.0; // Cap power to 24kW (i.e. our min voltage)
 80013b4:	edd7 7a02 	vldr	s15, [r7, #8]
 80013b8:	ed9f 7a1d 	vldr	s14, [pc, #116]	@ 8001430 <FEB_CAN_RMS_getMaxTorque+0xd0>
 80013bc:	ee67 7a87 	vmul.f32	s15, s15, s14
 80013c0:	edc7 7a01 	vstr	s15, [r7, #4]
 	// If speed is less than 15, we should command max torque
  	// This catches divide by 0 errors and also negative speeds (which may create very high negative torque values)
	if (motor_speed < 15) {
 80013c4:	edd7 7a03 	vldr	s15, [r7, #12]
 80013c8:	eeb2 7a0e 	vmov.f32	s14, #46	@ 0x41700000  15.0
 80013cc:	eef4 7ac7 	vcmpe.f32	s15, s14
 80013d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80013d4:	d501      	bpl.n	80013da <FEB_CAN_RMS_getMaxTorque+0x7a>
		return MAX_TORQUE;
 80013d6:	4b17      	ldr	r3, [pc, #92]	@ (8001434 <FEB_CAN_RMS_getMaxTorque+0xd4>)
 80013d8:	e018      	b.n	800140c <FEB_CAN_RMS_getMaxTorque+0xac>
	}
	float maxTorque = min(MAX_TORQUE, (power_capped) / motor_speed);
 80013da:	edd7 6a01 	vldr	s13, [r7, #4]
 80013de:	ed97 7a03 	vldr	s14, [r7, #12]
 80013e2:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80013e6:	ed9f 7a14 	vldr	s14, [pc, #80]	@ 8001438 <FEB_CAN_RMS_getMaxTorque+0xd8>
 80013ea:	eef4 7ac7 	vcmpe.f32	s15, s14
 80013ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80013f2:	dd02      	ble.n	80013fa <FEB_CAN_RMS_getMaxTorque+0x9a>
 80013f4:	eddf 7a10 	vldr	s15, [pc, #64]	@ 8001438 <FEB_CAN_RMS_getMaxTorque+0xd8>
 80013f8:	e005      	b.n	8001406 <FEB_CAN_RMS_getMaxTorque+0xa6>
 80013fa:	edd7 6a01 	vldr	s13, [r7, #4]
 80013fe:	ed97 7a03 	vldr	s14, [r7, #12]
 8001402:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001406:	edc7 7a00 	vstr	s15, [r7]
	return maxTorque;
 800140a:	683b      	ldr	r3, [r7, #0]
}
 800140c:	ee07 3a90 	vmov	s15, r3
 8001410:	eeb0 0a67 	vmov.f32	s0, s15
 8001414:	3710      	adds	r7, #16
 8001416:	46bd      	mov	sp, r7
 8001418:	bd80      	pop	{r7, pc}
 800141a:	bf00      	nop
 800141c:	f3af 8000 	nop.w
 8001420:	0f3cb3e5 	.word	0x0f3cb3e5
 8001424:	3fbaceee 	.word	0x3fbaceee
 8001428:	20000248 	.word	0x20000248
 800142c:	404a0000 	.word	0x404a0000
 8001430:	43c80000 	.word	0x43c80000
 8001434:	43660000 	.word	0x43660000
 8001438:	43660000 	.word	0x43660000

0800143c <FEB_CAN_RMS_Torque>:

void FEB_CAN_RMS_Torque(void){
 800143c:	b580      	push	{r7, lr}
 800143e:	ed2d 8b02 	vpush	{d8}
 8001442:	b084      	sub	sp, #16
 8001444:	af00      	add	r7, sp, #0
	FEB_SM_ST_t current_BMS_state = FEB_CAN_BMS_getState(); // TODO: FOR ALEX
 8001446:	f7ff fe61 	bl	800110c <FEB_CAN_BMS_getState>
 800144a:	4603      	mov	r3, r0
 800144c:	73fb      	strb	r3, [r7, #15]
	float accPos = FEB_Normalized_Acc_Pedals();
 800144e:	f000 f9f7 	bl	8001840 <FEB_Normalized_Acc_Pedals>
 8001452:	ed87 0a02 	vstr	s0, [r7, #8]
	float brkPos = FEB_Normalized_getBrake();
 8001456:	f000 fb0b 	bl	8001a70 <FEB_Normalized_getBrake>
 800145a:	ed87 0a01 	vstr	s0, [r7, #4]
//	    {
//	        // No braking detected, but driving not allowed by BMS state
//	        RMSControl.torque = 0;
//	    }
//	}
	RMSControl.torque = 10 * accPos * FEB_CAN_RMS_getMaxTorque(); // temp
 800145e:	edd7 7a02 	vldr	s15, [r7, #8]
 8001462:	eeb2 7a04 	vmov.f32	s14, #36	@ 0x41200000  10.0
 8001466:	ee27 8a87 	vmul.f32	s16, s15, s14
 800146a:	f7ff ff79 	bl	8001360 <FEB_CAN_RMS_getMaxTorque>
 800146e:	eef0 7a40 	vmov.f32	s15, s0
 8001472:	ee68 7a27 	vmul.f32	s15, s16, s15
 8001476:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800147a:	ee17 3a90 	vmov	r3, s15
 800147e:	b21a      	sxth	r2, r3
 8001480:	4b04      	ldr	r3, [pc, #16]	@ (8001494 <FEB_CAN_RMS_Torque+0x58>)
 8001482:	801a      	strh	r2, [r3, #0]
//	sprintf(buf, "Torque: %d\n", max_torque);
//	HAL_UART_Transmit(&huart2, buf, strlen(buf), 100);
//
//	RMSControl.torque= max_torque;

	FEB_CAN_RMS_Transmit_updateTorque();
 8001484:	f000 f808 	bl	8001498 <FEB_CAN_RMS_Transmit_updateTorque>
}
 8001488:	bf00      	nop
 800148a:	3710      	adds	r7, #16
 800148c:	46bd      	mov	sp, r7
 800148e:	ecbd 8b02 	vpop	{d8}
 8001492:	bd80      	pop	{r7, pc}
 8001494:	20000244 	.word	0x20000244

08001498 <FEB_CAN_RMS_Transmit_updateTorque>:

	// Select CAN msg to broadcast
	FEB_CAN_RMS_Transmit_paramBroadcast();
}

void FEB_CAN_RMS_Transmit_updateTorque(void) { //TODO: Create Custom Transmit function and update below call
 8001498:	b580      	push	{r7, lr}
 800149a:	af00      	add	r7, sp, #0
  //uint8_t message_data[8] = {RMSControl.torque & 0xFF, RMSControl.torque >> 8, 0, 0, 0, RMSControl.enabled, 0, 0};
	FEB_CAN_Tx_Header.DLC = 8;
 800149c:	4b1f      	ldr	r3, [pc, #124]	@ (800151c <FEB_CAN_RMS_Transmit_updateTorque+0x84>)
 800149e:	2208      	movs	r2, #8
 80014a0:	611a      	str	r2, [r3, #16]
	FEB_CAN_Tx_Header.StdId = FEB_CAN_RMS_COMMAND_MSG_FRAME_ID; //ID for sending paramater messages for RMS
 80014a2:	4b1e      	ldr	r3, [pc, #120]	@ (800151c <FEB_CAN_RMS_Transmit_updateTorque+0x84>)
 80014a4:	2207      	movs	r2, #7
 80014a6:	601a      	str	r2, [r3, #0]
	FEB_CAN_Tx_Header.IDE = CAN_ID_STD;
 80014a8:	4b1c      	ldr	r3, [pc, #112]	@ (800151c <FEB_CAN_RMS_Transmit_updateTorque+0x84>)
 80014aa:	2200      	movs	r2, #0
 80014ac:	609a      	str	r2, [r3, #8]
	FEB_CAN_Tx_Header.RTR = CAN_RTR_DATA;
 80014ae:	4b1b      	ldr	r3, [pc, #108]	@ (800151c <FEB_CAN_RMS_Transmit_updateTorque+0x84>)
 80014b0:	2200      	movs	r2, #0
 80014b2:	60da      	str	r2, [r3, #12]
	FEB_CAN_Tx_Header.TransmitGlobalTime = DISABLE;
 80014b4:	4b19      	ldr	r3, [pc, #100]	@ (800151c <FEB_CAN_RMS_Transmit_updateTorque+0x84>)
 80014b6:	2200      	movs	r2, #0
 80014b8:	751a      	strb	r2, [r3, #20]

	// Copy data to Tx buffer
	FEB_CAN_Tx_Data[0] = (uint8_t)RMSControl.torque & 0xFF;
 80014ba:	4b19      	ldr	r3, [pc, #100]	@ (8001520 <FEB_CAN_RMS_Transmit_updateTorque+0x88>)
 80014bc:	f9b3 3000 	ldrsh.w	r3, [r3]
 80014c0:	b2da      	uxtb	r2, r3
 80014c2:	4b18      	ldr	r3, [pc, #96]	@ (8001524 <FEB_CAN_RMS_Transmit_updateTorque+0x8c>)
 80014c4:	701a      	strb	r2, [r3, #0]
	FEB_CAN_Tx_Data[1] = (uint8_t)(RMSControl.torque >> 8) & 0xFF;
 80014c6:	4b16      	ldr	r3, [pc, #88]	@ (8001520 <FEB_CAN_RMS_Transmit_updateTorque+0x88>)
 80014c8:	f9b3 3000 	ldrsh.w	r3, [r3]
 80014cc:	121b      	asrs	r3, r3, #8
 80014ce:	b21b      	sxth	r3, r3
 80014d0:	b2da      	uxtb	r2, r3
 80014d2:	4b14      	ldr	r3, [pc, #80]	@ (8001524 <FEB_CAN_RMS_Transmit_updateTorque+0x8c>)
 80014d4:	705a      	strb	r2, [r3, #1]
	FEB_CAN_Tx_Data[2] = 0;
 80014d6:	4b13      	ldr	r3, [pc, #76]	@ (8001524 <FEB_CAN_RMS_Transmit_updateTorque+0x8c>)
 80014d8:	2200      	movs	r2, #0
 80014da:	709a      	strb	r2, [r3, #2]
	FEB_CAN_Tx_Data[3] = 0;
 80014dc:	4b11      	ldr	r3, [pc, #68]	@ (8001524 <FEB_CAN_RMS_Transmit_updateTorque+0x8c>)
 80014de:	2200      	movs	r2, #0
 80014e0:	70da      	strb	r2, [r3, #3]
	FEB_CAN_Tx_Data[4] = 1;
 80014e2:	4b10      	ldr	r3, [pc, #64]	@ (8001524 <FEB_CAN_RMS_Transmit_updateTorque+0x8c>)
 80014e4:	2201      	movs	r2, #1
 80014e6:	711a      	strb	r2, [r3, #4]
	FEB_CAN_Tx_Data[5] = RMSControl.enabled;
 80014e8:	4b0d      	ldr	r3, [pc, #52]	@ (8001520 <FEB_CAN_RMS_Transmit_updateTorque+0x88>)
 80014ea:	789a      	ldrb	r2, [r3, #2]
 80014ec:	4b0d      	ldr	r3, [pc, #52]	@ (8001524 <FEB_CAN_RMS_Transmit_updateTorque+0x8c>)
 80014ee:	715a      	strb	r2, [r3, #5]
	FEB_CAN_Tx_Data[6] = 0;
 80014f0:	4b0c      	ldr	r3, [pc, #48]	@ (8001524 <FEB_CAN_RMS_Transmit_updateTorque+0x8c>)
 80014f2:	2200      	movs	r2, #0
 80014f4:	719a      	strb	r2, [r3, #6]
	FEB_CAN_Tx_Data[7] = 0;
 80014f6:	4b0b      	ldr	r3, [pc, #44]	@ (8001524 <FEB_CAN_RMS_Transmit_updateTorque+0x8c>)
 80014f8:	2200      	movs	r2, #0
 80014fa:	71da      	strb	r2, [r3, #7]

	// Delay until mailbox available
	while (HAL_CAN_GetTxMailboxesFreeLevel(&hcan1) == 0) {}
 80014fc:	bf00      	nop
 80014fe:	480a      	ldr	r0, [pc, #40]	@ (8001528 <FEB_CAN_RMS_Transmit_updateTorque+0x90>)
 8001500:	f001 fffc 	bl	80034fc <HAL_CAN_GetTxMailboxesFreeLevel>
 8001504:	4603      	mov	r3, r0
 8001506:	2b00      	cmp	r3, #0
 8001508:	d0f9      	beq.n	80014fe <FEB_CAN_RMS_Transmit_updateTorque+0x66>

	// Add Tx data to mailbox
	if (HAL_CAN_AddTxMessage(&hcan1, &FEB_CAN_Tx_Header, FEB_CAN_Tx_Data, &FEB_CAN_Tx_Mailbox) != HAL_OK) {
 800150a:	4b08      	ldr	r3, [pc, #32]	@ (800152c <FEB_CAN_RMS_Transmit_updateTorque+0x94>)
 800150c:	4a05      	ldr	r2, [pc, #20]	@ (8001524 <FEB_CAN_RMS_Transmit_updateTorque+0x8c>)
 800150e:	4903      	ldr	r1, [pc, #12]	@ (800151c <FEB_CAN_RMS_Transmit_updateTorque+0x84>)
 8001510:	4805      	ldr	r0, [pc, #20]	@ (8001528 <FEB_CAN_RMS_Transmit_updateTorque+0x90>)
 8001512:	f001 ff23 	bl	800335c <HAL_CAN_AddTxMessage>
		// Code Error - Shutdown
	}
}
 8001516:	bf00      	nop
 8001518:	bd80      	pop	{r7, pc}
 800151a:	bf00      	nop
 800151c:	200001f0 	.word	0x200001f0
 8001520:	20000244 	.word	0x20000244
 8001524:	20000224 	.word	0x20000224
 8001528:	200002a4 	.word	0x200002a4
 800152c:	20000234 	.word	0x20000234

08001530 <FEB_CAN_RMS_Filter_Config>:




uint8_t FEB_CAN_RMS_Filter_Config(CAN_HandleTypeDef* hcan, uint8_t FIFO_assignment, uint8_t filter_bank) {
 8001530:	b580      	push	{r7, lr}
 8001532:	b08e      	sub	sp, #56	@ 0x38
 8001534:	af00      	add	r7, sp, #0
 8001536:	6078      	str	r0, [r7, #4]
 8001538:	460b      	mov	r3, r1
 800153a:	70fb      	strb	r3, [r7, #3]
 800153c:	4613      	mov	r3, r2
 800153e:	70bb      	strb	r3, [r7, #2]
	uint16_t ids[] = {FEB_CAN_ID_RMS_VOLTAGE, FEB_CAN_ID_RMS_MOTOR};
 8001540:	4b1c      	ldr	r3, [pc, #112]	@ (80015b4 <FEB_CAN_RMS_Filter_Config+0x84>)
 8001542:	681b      	ldr	r3, [r3, #0]
 8001544:	633b      	str	r3, [r7, #48]	@ 0x30

	for (uint8_t i = 0; i < 2; i++) {
 8001546:	2300      	movs	r3, #0
 8001548:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
 800154c:	e029      	b.n	80015a2 <FEB_CAN_RMS_Filter_Config+0x72>
		CAN_FilterTypeDef filter_config;

	    // Standard CAN - 2.0A - 11 bit
	    filter_config.FilterActivation = CAN_FILTER_ENABLE;
 800154e:	2301      	movs	r3, #1
 8001550:	62bb      	str	r3, [r7, #40]	@ 0x28
		filter_config.FilterBank = filter_bank;
 8001552:	78bb      	ldrb	r3, [r7, #2]
 8001554:	61fb      	str	r3, [r7, #28]
		filter_config.FilterFIFOAssignment = FIFO_assignment;
 8001556:	78fb      	ldrb	r3, [r7, #3]
 8001558:	61bb      	str	r3, [r7, #24]
		filter_config.FilterIdHigh = ids[i] << 5;
 800155a:	f897 3037 	ldrb.w	r3, [r7, #55]	@ 0x37
 800155e:	005b      	lsls	r3, r3, #1
 8001560:	3338      	adds	r3, #56	@ 0x38
 8001562:	443b      	add	r3, r7
 8001564:	f833 3c08 	ldrh.w	r3, [r3, #-8]
 8001568:	015b      	lsls	r3, r3, #5
 800156a:	60bb      	str	r3, [r7, #8]
		filter_config.FilterIdLow = 0;
 800156c:	2300      	movs	r3, #0
 800156e:	60fb      	str	r3, [r7, #12]
		filter_config.FilterMaskIdHigh = 0xFFE0;
 8001570:	f64f 73e0 	movw	r3, #65504	@ 0xffe0
 8001574:	613b      	str	r3, [r7, #16]
		filter_config.FilterMaskIdLow = 0;
 8001576:	2300      	movs	r3, #0
 8001578:	617b      	str	r3, [r7, #20]
		filter_config.FilterMode = CAN_FILTERMODE_IDMASK;
 800157a:	2300      	movs	r3, #0
 800157c:	623b      	str	r3, [r7, #32]
		filter_config.FilterScale = CAN_FILTERSCALE_32BIT;
 800157e:	2301      	movs	r3, #1
 8001580:	627b      	str	r3, [r7, #36]	@ 0x24
		filter_config.SlaveStartFilterBank = 27;
 8001582:	231b      	movs	r3, #27
 8001584:	62fb      	str	r3, [r7, #44]	@ 0x2c
	    filter_bank++;
 8001586:	78bb      	ldrb	r3, [r7, #2]
 8001588:	3301      	adds	r3, #1
 800158a:	70bb      	strb	r3, [r7, #2]

		if (HAL_CAN_ConfigFilter(hcan, &filter_config) != HAL_OK) {
 800158c:	f107 0308 	add.w	r3, r7, #8
 8001590:	4619      	mov	r1, r3
 8001592:	6878      	ldr	r0, [r7, #4]
 8001594:	f001 fdbe 	bl	8003114 <HAL_CAN_ConfigFilter>
	for (uint8_t i = 0; i < 2; i++) {
 8001598:	f897 3037 	ldrb.w	r3, [r7, #55]	@ 0x37
 800159c:	3301      	adds	r3, #1
 800159e:	f887 3037 	strb.w	r3, [r7, #55]	@ 0x37
 80015a2:	f897 3037 	ldrb.w	r3, [r7, #55]	@ 0x37
 80015a6:	2b01      	cmp	r3, #1
 80015a8:	d9d1      	bls.n	800154e <FEB_CAN_RMS_Filter_Config+0x1e>
			//Code Error - shutdown
		}
	}

	return filter_bank;
 80015aa:	78bb      	ldrb	r3, [r7, #2]
}
 80015ac:	4618      	mov	r0, r3
 80015ae:	3738      	adds	r7, #56	@ 0x38
 80015b0:	46bd      	mov	sp, r7
 80015b2:	bd80      	pop	{r7, pc}
 80015b4:	08008588 	.word	0x08008588

080015b8 <FEB_CAN_RMS_Store_Msg>:
		// Code Error - Shutdown
	}
}


void FEB_CAN_RMS_Store_Msg(CAN_RxHeaderTypeDef* pHeader, uint8_t *RxData) {
 80015b8:	b480      	push	{r7}
 80015ba:	b083      	sub	sp, #12
 80015bc:	af00      	add	r7, sp, #0
 80015be:	6078      	str	r0, [r7, #4]
 80015c0:	6039      	str	r1, [r7, #0]
	switch (pHeader -> StdId){
 80015c2:	687b      	ldr	r3, [r7, #4]
 80015c4:	681b      	ldr	r3, [r3, #0]
 80015c6:	2ba5      	cmp	r3, #165	@ 0xa5
 80015c8:	d007      	beq.n	80015da <FEB_CAN_RMS_Store_Msg+0x22>
 80015ca:	2ba7      	cmp	r3, #167	@ 0xa7
 80015cc:	d10c      	bne.n	80015e8 <FEB_CAN_RMS_Store_Msg+0x30>
		case FEB_CAN_ID_RMS_VOLTAGE:
			memcpy(&(RMS_MESSAGE.HV_Bus_Voltage), RxData, 2);
 80015ce:	683b      	ldr	r3, [r7, #0]
 80015d0:	881b      	ldrh	r3, [r3, #0]
 80015d2:	b29a      	uxth	r2, r3
 80015d4:	4b07      	ldr	r3, [pc, #28]	@ (80015f4 <FEB_CAN_RMS_Store_Msg+0x3c>)
 80015d6:	801a      	strh	r2, [r3, #0]
			break;
 80015d8:	e006      	b.n	80015e8 <FEB_CAN_RMS_Store_Msg+0x30>
		case FEB_CAN_ID_RMS_MOTOR:
			memcpy(&(RMS_MESSAGE.Motor_Speed), RxData+2, 2);
 80015da:	683b      	ldr	r3, [r7, #0]
 80015dc:	3302      	adds	r3, #2
 80015de:	881b      	ldrh	r3, [r3, #0]
 80015e0:	b29a      	uxth	r2, r3
 80015e2:	4b04      	ldr	r3, [pc, #16]	@ (80015f4 <FEB_CAN_RMS_Store_Msg+0x3c>)
 80015e4:	805a      	strh	r2, [r3, #2]
			break;
 80015e6:	bf00      	nop
	}
}
 80015e8:	bf00      	nop
 80015ea:	370c      	adds	r7, #12
 80015ec:	46bd      	mov	sp, r7
 80015ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80015f2:	4770      	bx	lr
 80015f4:	20000248 	.word	0x20000248

080015f8 <FEB_Read_ADC1>:
bool currHigh = false;


// **************************************** Functions ****************************************

uint16_t FEB_Read_ADC1(uint32_t channel){
 80015f8:	b580      	push	{r7, lr}
 80015fa:	b086      	sub	sp, #24
 80015fc:	af00      	add	r7, sp, #0
 80015fe:	6078      	str	r0, [r7, #4]
	ADC_ChannelConfTypeDef sConfig={0};
 8001600:	f107 0308 	add.w	r3, r7, #8
 8001604:	2200      	movs	r2, #0
 8001606:	601a      	str	r2, [r3, #0]
 8001608:	605a      	str	r2, [r3, #4]
 800160a:	609a      	str	r2, [r3, #8]
 800160c:	60da      	str	r2, [r3, #12]
	sConfig.Channel = channel;
 800160e:	687b      	ldr	r3, [r7, #4]
 8001610:	60bb      	str	r3, [r7, #8]
	sConfig.Rank = 1;
 8001612:	2301      	movs	r3, #1
 8001614:	60fb      	str	r3, [r7, #12]
	sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8001616:	2307      	movs	r3, #7
 8001618:	613b      	str	r3, [r7, #16]

	if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800161a:	f107 0308 	add.w	r3, r7, #8
 800161e:	4619      	mov	r1, r3
 8001620:	480b      	ldr	r0, [pc, #44]	@ (8001650 <FEB_Read_ADC1+0x58>)
 8001622:	f001 f983 	bl	800292c <HAL_ADC_ConfigChannel>
 8001626:	4603      	mov	r3, r0
 8001628:	2b00      	cmp	r3, #0
 800162a:	d001      	beq.n	8001630 <FEB_Read_ADC1+0x38>
	{
	   Error_Handler();
 800162c:	f000 fc7e 	bl	8001f2c <Error_Handler>
	}

	HAL_ADC_Start(&hadc1);
 8001630:	4807      	ldr	r0, [pc, #28]	@ (8001650 <FEB_Read_ADC1+0x58>)
 8001632:	f001 f811 	bl	8002658 <HAL_ADC_Start>
	HAL_ADC_PollForConversion(&hadc1, 100);
 8001636:	2164      	movs	r1, #100	@ 0x64
 8001638:	4805      	ldr	r0, [pc, #20]	@ (8001650 <FEB_Read_ADC1+0x58>)
 800163a:	f001 f8df 	bl	80027fc <HAL_ADC_PollForConversion>
	return (uint16_t)HAL_ADC_GetValue(&hadc1);
 800163e:	4804      	ldr	r0, [pc, #16]	@ (8001650 <FEB_Read_ADC1+0x58>)
 8001640:	f001 f967 	bl	8002912 <HAL_ADC_GetValue>
 8001644:	4603      	mov	r3, r0
 8001646:	b29b      	uxth	r3, r3

}
 8001648:	4618      	mov	r0, r3
 800164a:	3718      	adds	r7, #24
 800164c:	46bd      	mov	sp, r7
 800164e:	bd80      	pop	{r7, pc}
 8001650:	2000025c 	.word	0x2000025c

08001654 <FEB_HECS_update>:

void FEB_HECS_update(){
 8001654:	b5b0      	push	{r4, r5, r7, lr}
 8001656:	b0a8      	sub	sp, #160	@ 0xa0
 8001658:	af04      	add	r7, sp, #16
	uint16_t current_HECS = FEB_Read_ADC1(HECS_SIGNAL);
 800165a:	200e      	movs	r0, #14
 800165c:	f7ff ffcc 	bl	80015f8 <FEB_Read_ADC1>
 8001660:	4603      	mov	r3, r0
 8001662:	f8a7 308e 	strh.w	r3, [r7, #142]	@ 0x8e
	uint16_t current_ACC1 = FEB_Read_ADC1(ACC_PEDAL_1);
 8001666:	2001      	movs	r0, #1
 8001668:	f7ff ffc6 	bl	80015f8 <FEB_Read_ADC1>
 800166c:	4603      	mov	r3, r0
 800166e:	f8a7 308c 	strh.w	r3, [r7, #140]	@ 0x8c
	uint16_t current_BRAKE1 = FEB_Read_ADC1(BRAKE_PRESS_1);
 8001672:	200d      	movs	r0, #13
 8001674:	f7ff ffc0 	bl	80015f8 <FEB_Read_ADC1>
 8001678:	4603      	mov	r3, r0
 800167a:	f8a7 308a 	strh.w	r3, [r7, #138]	@ 0x8a
	uint16_t current_ACC2 = FEB_Read_ADC1(ACC_PEDAL_2);
 800167e:	2000      	movs	r0, #0
 8001680:	f7ff ffba 	bl	80015f8 <FEB_Read_ADC1>
 8001684:	4603      	mov	r3, r0
 8001686:	f8a7 3088 	strh.w	r3, [r7, #136]	@ 0x88
	uint16_t current_BRAKE2 = FEB_Read_ADC1(BRAKE_PRESS_2);
 800168a:	200c      	movs	r0, #12
 800168c:	f7ff ffb4 	bl	80015f8 <FEB_Read_ADC1>
 8001690:	4603      	mov	r3, r0
 8001692:	f8a7 3086 	strh.w	r3, [r7, #134]	@ 0x86

	char buf[128];
	uint8_t buf_len;
	buf_len = sprintf(buf, "HECS Current:%d, %d, %d, %d, %d\n\r", current_HECS,current_ACC1,current_BRAKE1,current_ACC2,current_BRAKE2);
 8001696:	f8b7 408e 	ldrh.w	r4, [r7, #142]	@ 0x8e
 800169a:	f8b7 508c 	ldrh.w	r5, [r7, #140]	@ 0x8c
 800169e:	f8b7 308a 	ldrh.w	r3, [r7, #138]	@ 0x8a
 80016a2:	f8b7 2088 	ldrh.w	r2, [r7, #136]	@ 0x88
 80016a6:	f8b7 1086 	ldrh.w	r1, [r7, #134]	@ 0x86
 80016aa:	1d38      	adds	r0, r7, #4
 80016ac:	9102      	str	r1, [sp, #8]
 80016ae:	9201      	str	r2, [sp, #4]
 80016b0:	9300      	str	r3, [sp, #0]
 80016b2:	462b      	mov	r3, r5
 80016b4:	4622      	mov	r2, r4
 80016b6:	4911      	ldr	r1, [pc, #68]	@ (80016fc <FEB_HECS_update+0xa8>)
 80016b8:	f004 fe36 	bl	8006328 <siprintf>
 80016bc:	4603      	mov	r3, r0
 80016be:	f887 3085 	strb.w	r3, [r7, #133]	@ 0x85
	HAL_UART_Transmit(&huart2, buf, strlen(buf), HAL_MAX_DELAY);
 80016c2:	1d3b      	adds	r3, r7, #4
 80016c4:	4618      	mov	r0, r3
 80016c6:	f7fe fdf3 	bl	80002b0 <strlen>
 80016ca:	4603      	mov	r3, r0
 80016cc:	b29a      	uxth	r2, r3
 80016ce:	1d39      	adds	r1, r7, #4
 80016d0:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80016d4:	480a      	ldr	r0, [pc, #40]	@ (8001700 <FEB_HECS_update+0xac>)
 80016d6:	f003 fd49 	bl	800516c <HAL_UART_Transmit>

	if (current_HECS >= HECS_CURRENT){ //checks if current is above value (to be determined)
 80016da:	f8b7 308e 	ldrh.w	r3, [r7, #142]	@ 0x8e
 80016de:	f5b3 6f3d 	cmp.w	r3, #3024	@ 0xbd0
 80016e2:	d903      	bls.n	80016ec <FEB_HECS_update+0x98>
		currHigh = true;
 80016e4:	4b07      	ldr	r3, [pc, #28]	@ (8001704 <FEB_HECS_update+0xb0>)
 80016e6:	2201      	movs	r2, #1
 80016e8:	701a      	strb	r2, [r3, #0]
	}else{
		currHigh = false;
	}
	//FEB_HECS_indicate();
}
 80016ea:	e002      	b.n	80016f2 <FEB_HECS_update+0x9e>
		currHigh = false;
 80016ec:	4b05      	ldr	r3, [pc, #20]	@ (8001704 <FEB_HECS_update+0xb0>)
 80016ee:	2200      	movs	r2, #0
 80016f0:	701a      	strb	r2, [r3, #0]
}
 80016f2:	bf00      	nop
 80016f4:	3790      	adds	r7, #144	@ 0x90
 80016f6:	46bd      	mov	sp, r7
 80016f8:	bdb0      	pop	{r4, r5, r7, pc}
 80016fa:	bf00      	nop
 80016fc:	0800858c 	.word	0x0800858c
 8001700:	20000320 	.word	0x20000320
 8001704:	2000024c 	.word	0x2000024c

08001708 <FEB_Main_Setup>:
char buf[128];
uint8_t buf_len; //stolen from Main_Setup (SN2)

// ********************************** Functions **********************************

void FEB_Main_Setup(void){
 8001708:	b580      	push	{r7, lr}
 800170a:	af00      	add	r7, sp, #0
	HAL_ADCEx_InjectedStart(&hadc1); //@lovehate - where does this go
 800170c:	4804      	ldr	r0, [pc, #16]	@ (8001720 <FEB_Main_Setup+0x18>)
 800170e:	f001 fb3b 	bl	8002d88 <HAL_ADCEx_InjectedStart>
//	FEB_Timer_Init();
//	FEB_TPS2482_Setup();
	FEB_CAN_Init(); //FEB_CAN_Init() // The transceiver must be connected otherwise you get sent into an infinite loop
 8001712:	f7ff fc31 	bl	8000f78 <FEB_CAN_Init>
	FEB_CAN_RMS_Setup();
 8001716:	f7ff fd71 	bl	80011fc <FEB_CAN_RMS_Setup>
}
 800171a:	bf00      	nop
 800171c:	bd80      	pop	{r7, pc}
 800171e:	bf00      	nop
 8001720:	2000025c 	.word	0x2000025c

08001724 <FEB_Main_While>:

void FEB_Main_While(void){
 8001724:	b580      	push	{r7, lr}
 8001726:	b082      	sub	sp, #8
 8001728:	af00      	add	r7, sp, #0
//	FEB_CAN_ICS_Transmit();
//
	FEB_SM_ST_t bms_state = FEB_CAN_BMS_getState();
 800172a:	f7ff fcef 	bl	800110c <FEB_CAN_BMS_getState>
 800172e:	4603      	mov	r3, r0
 8001730:	71fb      	strb	r3, [r7, #7]


	if (FEB_Ready_To_Drive() && (bms_state == FEB_SM_ST_DRIVE || bms_state == FEB_SM_ST_DRIVE_REGEN)) {
 8001732:	f7ff fd57 	bl	80011e4 <FEB_Ready_To_Drive>
 8001736:	4603      	mov	r3, r0
 8001738:	2b00      	cmp	r3, #0
 800173a:	d00a      	beq.n	8001752 <FEB_Main_While+0x2e>
 800173c:	79fb      	ldrb	r3, [r7, #7]
 800173e:	2b06      	cmp	r3, #6
 8001740:	d002      	beq.n	8001748 <FEB_Main_While+0x24>
 8001742:	79fb      	ldrb	r3, [r7, #7]
 8001744:	2b07      	cmp	r3, #7
 8001746:	d104      	bne.n	8001752 <FEB_Main_While+0x2e>
		FEB_Normalized_updateAcc();
 8001748:	f000 f84c 	bl	80017e4 <FEB_Normalized_updateAcc>
		FEB_CAN_RMS_Process();
 800174c:	f7ff fd66 	bl	800121c <FEB_CAN_RMS_Process>
 8001750:	e003      	b.n	800175a <FEB_Main_While+0x36>
	} else {
		FEB_Normalized_setAcc0();
 8001752:	f000 f839 	bl	80017c8 <FEB_Normalized_setAcc0>
		FEB_CAN_RMS_Disable();
 8001756:	f7ff fd71 	bl	800123c <FEB_CAN_RMS_Disable>
	}
	FEB_HECS_update();
 800175a:	f7ff ff7b 	bl	8001654 <FEB_HECS_update>

	FEB_CAN_RMS_Torque();
 800175e:	f7ff fe6d 	bl	800143c <FEB_CAN_RMS_Torque>
	FEB_Normalized_CAN_sendBrake();
 8001762:	f000 f993 	bl	8001a8c <FEB_Normalized_CAN_sendBrake>

	HAL_Delay(10);
 8001766:	200a      	movs	r0, #10
 8001768:	f000 ff0e 	bl	8002588 <HAL_Delay>
}
 800176c:	bf00      	nop
 800176e:	3708      	adds	r7, #8
 8001770:	46bd      	mov	sp, r7
 8001772:	bd80      	pop	{r7, pc}

08001774 <FEB_Read_ADC>:
float normalized_brake;
bool isImpl = false;

// **************************************** Functions ****************************************

uint16_t FEB_Read_ADC(uint32_t channel){
 8001774:	b580      	push	{r7, lr}
 8001776:	b086      	sub	sp, #24
 8001778:	af00      	add	r7, sp, #0
 800177a:	6078      	str	r0, [r7, #4]
	ADC_ChannelConfTypeDef sConfig={0};
 800177c:	f107 0308 	add.w	r3, r7, #8
 8001780:	2200      	movs	r2, #0
 8001782:	601a      	str	r2, [r3, #0]
 8001784:	605a      	str	r2, [r3, #4]
 8001786:	609a      	str	r2, [r3, #8]
 8001788:	60da      	str	r2, [r3, #12]
	sConfig.Channel = channel;
 800178a:	687b      	ldr	r3, [r7, #4]
 800178c:	60bb      	str	r3, [r7, #8]
	sConfig.Rank = 1;
 800178e:	2301      	movs	r3, #1
 8001790:	60fb      	str	r3, [r7, #12]
	sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8001792:	2307      	movs	r3, #7
 8001794:	613b      	str	r3, [r7, #16]

	if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001796:	f107 0308 	add.w	r3, r7, #8
 800179a:	4619      	mov	r1, r3
 800179c:	4809      	ldr	r0, [pc, #36]	@ (80017c4 <FEB_Read_ADC+0x50>)
 800179e:	f001 f8c5 	bl	800292c <HAL_ADC_ConfigChannel>
	{
//	   Error_Handler();
	}

	HAL_ADC_Start(&hadc1);
 80017a2:	4808      	ldr	r0, [pc, #32]	@ (80017c4 <FEB_Read_ADC+0x50>)
 80017a4:	f000 ff58 	bl	8002658 <HAL_ADC_Start>
	HAL_ADC_PollForConversion(&hadc1, 100);
 80017a8:	2164      	movs	r1, #100	@ 0x64
 80017aa:	4806      	ldr	r0, [pc, #24]	@ (80017c4 <FEB_Read_ADC+0x50>)
 80017ac:	f001 f826 	bl	80027fc <HAL_ADC_PollForConversion>
	return (uint16_t)HAL_ADC_GetValue(&hadc1);
 80017b0:	4804      	ldr	r0, [pc, #16]	@ (80017c4 <FEB_Read_ADC+0x50>)
 80017b2:	f001 f8ae 	bl	8002912 <HAL_ADC_GetValue>
 80017b6:	4603      	mov	r3, r0
 80017b8:	b29b      	uxth	r3, r3

}
 80017ba:	4618      	mov	r0, r3
 80017bc:	3718      	adds	r7, #24
 80017be:	46bd      	mov	sp, r7
 80017c0:	bd80      	pop	{r7, pc}
 80017c2:	bf00      	nop
 80017c4:	2000025c 	.word	0x2000025c

080017c8 <FEB_Normalized_setAcc0>:

float FEB_Normalized_getAcc(){
	return normalized_acc;
}

void FEB_Normalized_setAcc0(){
 80017c8:	b480      	push	{r7}
 80017ca:	af00      	add	r7, sp, #0
	normalized_acc = 0.0;
 80017cc:	4b04      	ldr	r3, [pc, #16]	@ (80017e0 <FEB_Normalized_setAcc0+0x18>)
 80017ce:	f04f 0200 	mov.w	r2, #0
 80017d2:	601a      	str	r2, [r3, #0]
}
 80017d4:	bf00      	nop
 80017d6:	46bd      	mov	sp, r7
 80017d8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017dc:	4770      	bx	lr
 80017de:	bf00      	nop
 80017e0:	20000250 	.word	0x20000250

080017e4 <FEB_Normalized_updateAcc>:
	char buf1[128];
	sprintf(buf1, "[SENSOR] Brake Position: %d.%d%%\n", brake_pedal_position_int1, brake_pedal_position_int2);
	HAL_UART_Transmit(&huart2,(uint8_t *)buf1, strlen(buf1), HAL_MAX_DELAY);
}

void FEB_Normalized_updateAcc(){
 80017e4:	b580      	push	{r7, lr}
 80017e6:	b0a2      	sub	sp, #136	@ 0x88
 80017e8:	af00      	add	r7, sp, #0
	normalized_acc = FEB_Normalized_Acc_Pedals();
 80017ea:	f000 f829 	bl	8001840 <FEB_Normalized_Acc_Pedals>
 80017ee:	eef0 7a40 	vmov.f32	s15, s0
 80017f2:	4b0f      	ldr	r3, [pc, #60]	@ (8001830 <FEB_Normalized_updateAcc+0x4c>)
 80017f4:	edc3 7a00 	vstr	s15, [r3]

	char buf[128];
	uint8_t buf_len;
	buf_len = sprintf(buf, "normalized_acc: %f\n", normalized_acc);
 80017f8:	4b0d      	ldr	r3, [pc, #52]	@ (8001830 <FEB_Normalized_updateAcc+0x4c>)
 80017fa:	681b      	ldr	r3, [r3, #0]
 80017fc:	4618      	mov	r0, r3
 80017fe:	f7fe fec3 	bl	8000588 <__aeabi_f2d>
 8001802:	4602      	mov	r2, r0
 8001804:	460b      	mov	r3, r1
 8001806:	1d38      	adds	r0, r7, #4
 8001808:	490a      	ldr	r1, [pc, #40]	@ (8001834 <FEB_Normalized_updateAcc+0x50>)
 800180a:	f004 fd8d 	bl	8006328 <siprintf>
 800180e:	4603      	mov	r3, r0
 8001810:	f887 3087 	strb.w	r3, [r7, #135]	@ 0x87
	HAL_UART_Transmit(&huart2,(uint8_t *)buf, buf_len, HAL_MAX_DELAY);
 8001814:	f897 3087 	ldrb.w	r3, [r7, #135]	@ 0x87
 8001818:	b29a      	uxth	r2, r3
 800181a:	1d39      	adds	r1, r7, #4
 800181c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8001820:	4805      	ldr	r0, [pc, #20]	@ (8001838 <FEB_Normalized_updateAcc+0x54>)
 8001822:	f003 fca3 	bl	800516c <HAL_UART_Transmit>

}
 8001826:	bf00      	nop
 8001828:	3788      	adds	r7, #136	@ 0x88
 800182a:	46bd      	mov	sp, r7
 800182c:	bd80      	pop	{r7, pc}
 800182e:	bf00      	nop
 8001830:	20000250 	.word	0x20000250
 8001834:	080086a8 	.word	0x080086a8
 8001838:	20000320 	.word	0x20000320
 800183c:	00000000 	.word	0x00000000

08001840 <FEB_Normalized_Acc_Pedals>:

float FEB_Normalized_Acc_Pedals() {
 8001840:	b580      	push	{r7, lr}
 8001842:	b0a6      	sub	sp, #152	@ 0x98
 8001844:	af00      	add	r7, sp, #0
	// raw ADC readings of the two acc pedal sensors
	uint16_t acc_pedal_1 = FEB_Read_ADC(ACC_PEDAL_1);
 8001846:	2001      	movs	r0, #1
 8001848:	f7ff ff94 	bl	8001774 <FEB_Read_ADC>
 800184c:	4603      	mov	r3, r0
 800184e:	f8a7 3096 	strh.w	r3, [r7, #150]	@ 0x96
	uint16_t acc_pedal_2 = FEB_Read_ADC(ACC_PEDAL_2);
 8001852:	2000      	movs	r0, #0
 8001854:	f7ff ff8e 	bl	8001774 <FEB_Read_ADC>
 8001858:	4603      	mov	r3, r0
 800185a:	f8a7 3094 	strh.w	r3, [r7, #148]	@ 0x94
	char buf[128];
	uint8_t buf_len;
	buf_len = sprintf(buf, "acc1:%d acc2:%d\n", acc_pedal_1, acc_pedal_2);
 800185e:	f8b7 2096 	ldrh.w	r2, [r7, #150]	@ 0x96
 8001862:	f8b7 3094 	ldrh.w	r3, [r7, #148]	@ 0x94
 8001866:	1d38      	adds	r0, r7, #4
 8001868:	497b      	ldr	r1, [pc, #492]	@ (8001a58 <FEB_Normalized_Acc_Pedals+0x218>)
 800186a:	f004 fd5d 	bl	8006328 <siprintf>
 800186e:	4603      	mov	r3, r0
 8001870:	f887 3093 	strb.w	r3, [r7, #147]	@ 0x93
//	HAL_UART_Transmit(&huart2,(uint8_t *)buf, buf_len, HAL_MAX_DELAY);


	// check implausibility for shorting. TODO: check if this fulfills the short circuiting rules.
	if (acc_pedal_1 < ACC_PEDAL_1_END - 20 || acc_pedal_1 > ACC_PEDAL_1_START + 20
 8001874:	f8b7 3096 	ldrh.w	r3, [r7, #150]	@ 0x96
 8001878:	f240 5233 	movw	r2, #1331	@ 0x533
 800187c:	4293      	cmp	r3, r2
 800187e:	d910      	bls.n	80018a2 <FEB_Normalized_Acc_Pedals+0x62>
 8001880:	f8b7 3096 	ldrh.w	r3, [r7, #150]	@ 0x96
 8001884:	f240 6201 	movw	r2, #1537	@ 0x601
 8001888:	4293      	cmp	r3, r2
 800188a:	d80a      	bhi.n	80018a2 <FEB_Normalized_Acc_Pedals+0x62>
			|| acc_pedal_2 < ACC_PEDAL_2_START - 50 || acc_pedal_2 > ACC_PEDAL_2_END + 50) {
 800188c:	f8b7 3094 	ldrh.w	r3, [r7, #148]	@ 0x94
 8001890:	f240 3201 	movw	r2, #769	@ 0x301
 8001894:	4293      	cmp	r3, r2
 8001896:	d904      	bls.n	80018a2 <FEB_Normalized_Acc_Pedals+0x62>
 8001898:	f8b7 3094 	ldrh.w	r3, [r7, #148]	@ 0x94
 800189c:	f5b3 6fe8 	cmp.w	r3, #1856	@ 0x740
 80018a0:	d905      	bls.n	80018ae <FEB_Normalized_Acc_Pedals+0x6e>
		isImpl = true;
 80018a2:	4b6e      	ldr	r3, [pc, #440]	@ (8001a5c <FEB_Normalized_Acc_Pedals+0x21c>)
 80018a4:	2201      	movs	r2, #1
 80018a6:	701a      	strb	r2, [r3, #0]
		return 0.0;
 80018a8:	f04f 0300 	mov.w	r3, #0
 80018ac:	e0b7      	b.n	8001a1e <FEB_Normalized_Acc_Pedals+0x1de>
	}

	//convert to % travel
	// sensor 1 has positive slope
	float ped1_normalized = (acc_pedal_1 - ACC_PEDAL_1_START)/ (ACC_PEDAL_1_END - ACC_PEDAL_1_START);
 80018ae:	f8b7 3096 	ldrh.w	r3, [r7, #150]	@ 0x96
 80018b2:	4618      	mov	r0, r3
 80018b4:	f7fe fe56 	bl	8000564 <__aeabi_i2d>
 80018b8:	a35d      	add	r3, pc, #372	@ (adr r3, 8001a30 <FEB_Normalized_Acc_Pedals+0x1f0>)
 80018ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 80018be:	f7fe fd03 	bl	80002c8 <__aeabi_dsub>
 80018c2:	4602      	mov	r2, r0
 80018c4:	460b      	mov	r3, r1
 80018c6:	4610      	mov	r0, r2
 80018c8:	4619      	mov	r1, r3
 80018ca:	a35b      	add	r3, pc, #364	@ (adr r3, 8001a38 <FEB_Normalized_Acc_Pedals+0x1f8>)
 80018cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80018d0:	f7fe ffdc 	bl	800088c <__aeabi_ddiv>
 80018d4:	4602      	mov	r2, r0
 80018d6:	460b      	mov	r3, r1
 80018d8:	4610      	mov	r0, r2
 80018da:	4619      	mov	r1, r3
 80018dc:	f7ff f984 	bl	8000be8 <__aeabi_d2f>
 80018e0:	4603      	mov	r3, r0
 80018e2:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
	// sensor 2 has negative slope
	float ped2_normalized = (acc_pedal_2 - ACC_PEDAL_2_START) / (ACC_PEDAL_2_END - ACC_PEDAL_2_START);
 80018e6:	f8b7 3094 	ldrh.w	r3, [r7, #148]	@ 0x94
 80018ea:	4618      	mov	r0, r3
 80018ec:	f7fe fe3a 	bl	8000564 <__aeabi_i2d>
 80018f0:	f04f 0200 	mov.w	r2, #0
 80018f4:	4b5a      	ldr	r3, [pc, #360]	@ (8001a60 <FEB_Normalized_Acc_Pedals+0x220>)
 80018f6:	f7fe fce7 	bl	80002c8 <__aeabi_dsub>
 80018fa:	4602      	mov	r2, r0
 80018fc:	460b      	mov	r3, r1
 80018fe:	4610      	mov	r0, r2
 8001900:	4619      	mov	r1, r3
 8001902:	f04f 0200 	mov.w	r2, #0
 8001906:	4b57      	ldr	r3, [pc, #348]	@ (8001a64 <FEB_Normalized_Acc_Pedals+0x224>)
 8001908:	f7fe ffc0 	bl	800088c <__aeabi_ddiv>
 800190c:	4602      	mov	r2, r0
 800190e:	460b      	mov	r3, r1
 8001910:	4610      	mov	r0, r2
 8001912:	4619      	mov	r1, r3
 8001914:	f7ff f968 	bl	8000be8 <__aeabi_d2f>
 8001918:	4603      	mov	r3, r0
 800191a:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88

	// sensor measurements mismatch by more than 10%
	if(abs(ped1_normalized - ped2_normalized) > 0.1 ){
 800191e:	ed97 7a23 	vldr	s14, [r7, #140]	@ 0x8c
 8001922:	edd7 7a22 	vldr	s15, [r7, #136]	@ 0x88
 8001926:	ee77 7a67 	vsub.f32	s15, s14, s15
 800192a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800192e:	ee17 3a90 	vmov	r3, s15
 8001932:	2b00      	cmp	r3, #0
 8001934:	bfb8      	it	lt
 8001936:	425b      	neglt	r3, r3
 8001938:	2b00      	cmp	r3, #0
 800193a:	dd05      	ble.n	8001948 <FEB_Normalized_Acc_Pedals+0x108>
		isImpl = true;
 800193c:	4b47      	ldr	r3, [pc, #284]	@ (8001a5c <FEB_Normalized_Acc_Pedals+0x21c>)
 800193e:	2201      	movs	r2, #1
 8001940:	701a      	strb	r2, [r3, #0]
		return 0.0;
 8001942:	f04f 0300 	mov.w	r3, #0
 8001946:	e06a      	b.n	8001a1e <FEB_Normalized_Acc_Pedals+0x1de>
	}

	float final_normalized = 0.5*(ped1_normalized + ped2_normalized);
 8001948:	ed97 7a23 	vldr	s14, [r7, #140]	@ 0x8c
 800194c:	edd7 7a22 	vldr	s15, [r7, #136]	@ 0x88
 8001950:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001954:	eeb6 7a00 	vmov.f32	s14, #96	@ 0x3f000000  0.5
 8001958:	ee67 7a87 	vmul.f32	s15, s15, s14
 800195c:	edc7 7a21 	vstr	s15, [r7, #132]	@ 0x84


//	 Implausiblity check if both pedals are stepped
	if (normalized_brake > 0.2 && normalized_acc > 0.1) {
 8001960:	4b41      	ldr	r3, [pc, #260]	@ (8001a68 <FEB_Normalized_Acc_Pedals+0x228>)
 8001962:	681b      	ldr	r3, [r3, #0]
 8001964:	4618      	mov	r0, r3
 8001966:	f7fe fe0f 	bl	8000588 <__aeabi_f2d>
 800196a:	a335      	add	r3, pc, #212	@ (adr r3, 8001a40 <FEB_Normalized_Acc_Pedals+0x200>)
 800196c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001970:	f7ff f8f2 	bl	8000b58 <__aeabi_dcmpgt>
 8001974:	4603      	mov	r3, r0
 8001976:	2b00      	cmp	r3, #0
 8001978:	d00f      	beq.n	800199a <FEB_Normalized_Acc_Pedals+0x15a>
 800197a:	4b3c      	ldr	r3, [pc, #240]	@ (8001a6c <FEB_Normalized_Acc_Pedals+0x22c>)
 800197c:	681b      	ldr	r3, [r3, #0]
 800197e:	4618      	mov	r0, r3
 8001980:	f7fe fe02 	bl	8000588 <__aeabi_f2d>
 8001984:	a330      	add	r3, pc, #192	@ (adr r3, 8001a48 <FEB_Normalized_Acc_Pedals+0x208>)
 8001986:	e9d3 2300 	ldrd	r2, r3, [r3]
 800198a:	f7ff f8e5 	bl	8000b58 <__aeabi_dcmpgt>
 800198e:	4603      	mov	r3, r0
 8001990:	2b00      	cmp	r3, #0
 8001992:	d002      	beq.n	800199a <FEB_Normalized_Acc_Pedals+0x15a>
		isImpl = true;
 8001994:	4b31      	ldr	r3, [pc, #196]	@ (8001a5c <FEB_Normalized_Acc_Pedals+0x21c>)
 8001996:	2201      	movs	r2, #1
 8001998:	701a      	strb	r2, [r3, #0]
	}

	// recover from implausibility if acc pedal is not 5% less
	if (final_normalized < 0.05 && isImpl) {
 800199a:	f8d7 0084 	ldr.w	r0, [r7, #132]	@ 0x84
 800199e:	f7fe fdf3 	bl	8000588 <__aeabi_f2d>
 80019a2:	a32b      	add	r3, pc, #172	@ (adr r3, 8001a50 <FEB_Normalized_Acc_Pedals+0x210>)
 80019a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80019a8:	f7ff f8b8 	bl	8000b1c <__aeabi_dcmplt>
 80019ac:	4603      	mov	r3, r0
 80019ae:	2b00      	cmp	r3, #0
 80019b0:	d006      	beq.n	80019c0 <FEB_Normalized_Acc_Pedals+0x180>
 80019b2:	4b2a      	ldr	r3, [pc, #168]	@ (8001a5c <FEB_Normalized_Acc_Pedals+0x21c>)
 80019b4:	781b      	ldrb	r3, [r3, #0]
 80019b6:	2b00      	cmp	r3, #0
 80019b8:	d002      	beq.n	80019c0 <FEB_Normalized_Acc_Pedals+0x180>
		isImpl = false;
 80019ba:	4b28      	ldr	r3, [pc, #160]	@ (8001a5c <FEB_Normalized_Acc_Pedals+0x21c>)
 80019bc:	2200      	movs	r2, #0
 80019be:	701a      	strb	r2, [r3, #0]
	}

	if (!isImpl) {
 80019c0:	4b26      	ldr	r3, [pc, #152]	@ (8001a5c <FEB_Normalized_Acc_Pedals+0x21c>)
 80019c2:	781b      	ldrb	r3, [r3, #0]
 80019c4:	f083 0301 	eor.w	r3, r3, #1
 80019c8:	b2db      	uxtb	r3, r3
 80019ca:	2b00      	cmp	r3, #0
 80019cc:	d025      	beq.n	8001a1a <FEB_Normalized_Acc_Pedals+0x1da>
		final_normalized = final_normalized > 1 ? 1 : final_normalized;
 80019ce:	edd7 7a21 	vldr	s15, [r7, #132]	@ 0x84
 80019d2:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80019d6:	eef4 7ac7 	vcmpe.f32	s15, s14
 80019da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80019de:	dd02      	ble.n	80019e6 <FEB_Normalized_Acc_Pedals+0x1a6>
 80019e0:	f04f 537e 	mov.w	r3, #1065353216	@ 0x3f800000
 80019e4:	e001      	b.n	80019ea <FEB_Normalized_Acc_Pedals+0x1aa>
 80019e6:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 80019ea:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
		final_normalized = final_normalized < 0.05 ? 0 : final_normalized;
 80019ee:	f8d7 0084 	ldr.w	r0, [r7, #132]	@ 0x84
 80019f2:	f7fe fdc9 	bl	8000588 <__aeabi_f2d>
 80019f6:	a316      	add	r3, pc, #88	@ (adr r3, 8001a50 <FEB_Normalized_Acc_Pedals+0x210>)
 80019f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80019fc:	f7ff f88e 	bl	8000b1c <__aeabi_dcmplt>
 8001a00:	4603      	mov	r3, r0
 8001a02:	2b00      	cmp	r3, #0
 8001a04:	d002      	beq.n	8001a0c <FEB_Normalized_Acc_Pedals+0x1cc>
 8001a06:	f04f 0300 	mov.w	r3, #0
 8001a0a:	e001      	b.n	8001a10 <FEB_Normalized_Acc_Pedals+0x1d0>
 8001a0c:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8001a10:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
		return final_normalized;
 8001a14:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8001a18:	e001      	b.n	8001a1e <FEB_Normalized_Acc_Pedals+0x1de>
	} else {
		return 0.0;
 8001a1a:	f04f 0300 	mov.w	r3, #0
	}
}
 8001a1e:	ee07 3a90 	vmov	s15, r3
 8001a22:	eeb0 0a67 	vmov.f32	s0, s15
 8001a26:	3798      	adds	r7, #152	@ 0x98
 8001a28:	46bd      	mov	sp, r7
 8001a2a:	bd80      	pop	{r7, pc}
 8001a2c:	f3af 8000 	nop.w
 8001a30:	00000000 	.word	0x00000000
 8001a34:	4097b400 	.word	0x4097b400
 8001a38:	00000000 	.word	0x00000000
 8001a3c:	c064a000 	.word	0xc064a000
 8001a40:	9999999a 	.word	0x9999999a
 8001a44:	3fc99999 	.word	0x3fc99999
 8001a48:	9999999a 	.word	0x9999999a
 8001a4c:	3fb99999 	.word	0x3fb99999
 8001a50:	9999999a 	.word	0x9999999a
 8001a54:	3fa99999 	.word	0x3fa99999
 8001a58:	080086bc 	.word	0x080086bc
 8001a5c:	20000258 	.word	0x20000258
 8001a60:	4089a000 	.word	0x4089a000
 8001a64:	408ed000 	.word	0x408ed000
 8001a68:	20000254 	.word	0x20000254
 8001a6c:	20000250 	.word	0x20000250

08001a70 <FEB_Normalized_getBrake>:

float FEB_Normalized_getBrake() {
 8001a70:	b480      	push	{r7}
 8001a72:	af00      	add	r7, sp, #0
	return normalized_brake;
 8001a74:	4b04      	ldr	r3, [pc, #16]	@ (8001a88 <FEB_Normalized_getBrake+0x18>)
 8001a76:	681b      	ldr	r3, [r3, #0]
 8001a78:	ee07 3a90 	vmov	s15, r3
}
 8001a7c:	eeb0 0a67 	vmov.f32	s0, s15
 8001a80:	46bd      	mov	sp, r7
 8001a82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a86:	4770      	bx	lr
 8001a88:	20000254 	.word	0x20000254

08001a8c <FEB_Normalized_CAN_sendBrake>:
	HAL_UART_Transmit(&huart2,(uint8_t *)buf, buf_len, HAL_MAX_DELAY);

	return final_normalized;
}

void FEB_Normalized_CAN_sendBrake() {
 8001a8c:	b580      	push	{r7, lr}
 8001a8e:	b0a4      	sub	sp, #144	@ 0x90
 8001a90:	af00      	add	r7, sp, #0
	// Initialize transmission header
	FEB_CAN_Tx_Header.DLC = 2;
 8001a92:	4b27      	ldr	r3, [pc, #156]	@ (8001b30 <FEB_Normalized_CAN_sendBrake+0xa4>)
 8001a94:	2202      	movs	r2, #2
 8001a96:	611a      	str	r2, [r3, #16]
	FEB_CAN_Tx_Header.StdId = FEB_CAN_NORMALIZED_BRAKE_FRAME_ID;
 8001a98:	4b25      	ldr	r3, [pc, #148]	@ (8001b30 <FEB_Normalized_CAN_sendBrake+0xa4>)
 8001a9a:	2205      	movs	r2, #5
 8001a9c:	601a      	str	r2, [r3, #0]
	FEB_CAN_Tx_Header.IDE = CAN_ID_STD;
 8001a9e:	4b24      	ldr	r3, [pc, #144]	@ (8001b30 <FEB_Normalized_CAN_sendBrake+0xa4>)
 8001aa0:	2200      	movs	r2, #0
 8001aa2:	609a      	str	r2, [r3, #8]
	FEB_CAN_Tx_Header.RTR = CAN_RTR_DATA;
 8001aa4:	4b22      	ldr	r3, [pc, #136]	@ (8001b30 <FEB_Normalized_CAN_sendBrake+0xa4>)
 8001aa6:	2200      	movs	r2, #0
 8001aa8:	60da      	str	r2, [r3, #12]
	FEB_CAN_Tx_Header.TransmitGlobalTime = DISABLE;
 8001aaa:	4b21      	ldr	r3, [pc, #132]	@ (8001b30 <FEB_Normalized_CAN_sendBrake+0xa4>)
 8001aac:	2200      	movs	r2, #0
 8001aae:	751a      	strb	r2, [r3, #20]

	// Copy data to Tx buffer. This might be incorrect. It's possible you have to do some bit shifting
//	memcpy(FEB_CAN_Tx_Data, &normalized_brake, sizeof(float));
	uint8_t converted_brake_val = (uint8_t)(normalized_brake * 100);
 8001ab0:	4b20      	ldr	r3, [pc, #128]	@ (8001b34 <FEB_Normalized_CAN_sendBrake+0xa8>)
 8001ab2:	edd3 7a00 	vldr	s15, [r3]
 8001ab6:	ed9f 7a20 	vldr	s14, [pc, #128]	@ 8001b38 <FEB_Normalized_CAN_sendBrake+0xac>
 8001aba:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001abe:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8001ac2:	edc7 7a01 	vstr	s15, [r7, #4]
 8001ac6:	793b      	ldrb	r3, [r7, #4]
 8001ac8:	f887 308f 	strb.w	r3, [r7, #143]	@ 0x8f

	FEB_CAN_Tx_Data[0] = converted_brake_val;
 8001acc:	4a1b      	ldr	r2, [pc, #108]	@ (8001b3c <FEB_Normalized_CAN_sendBrake+0xb0>)
 8001ace:	f897 308f 	ldrb.w	r3, [r7, #143]	@ 0x8f
 8001ad2:	7013      	strb	r3, [r2, #0]

	//Debug to see the position of the Brake position sensor


	// Delay until mailbox available
	while (HAL_CAN_GetTxMailboxesFreeLevel(&hcan1) == 0) {}
 8001ad4:	bf00      	nop
 8001ad6:	481a      	ldr	r0, [pc, #104]	@ (8001b40 <FEB_Normalized_CAN_sendBrake+0xb4>)
 8001ad8:	f001 fd10 	bl	80034fc <HAL_CAN_GetTxMailboxesFreeLevel>
 8001adc:	4603      	mov	r3, r0
 8001ade:	2b00      	cmp	r3, #0
 8001ae0:	d0f9      	beq.n	8001ad6 <FEB_Normalized_CAN_sendBrake+0x4a>
//
	// Add Tx data to mailbox
	if (HAL_CAN_AddTxMessage(&hcan1, &FEB_CAN_Tx_Header, FEB_CAN_Tx_Data, &FEB_CAN_Tx_Mailbox) != HAL_OK) {
 8001ae2:	4b18      	ldr	r3, [pc, #96]	@ (8001b44 <FEB_Normalized_CAN_sendBrake+0xb8>)
 8001ae4:	4a15      	ldr	r2, [pc, #84]	@ (8001b3c <FEB_Normalized_CAN_sendBrake+0xb0>)
 8001ae6:	4912      	ldr	r1, [pc, #72]	@ (8001b30 <FEB_Normalized_CAN_sendBrake+0xa4>)
 8001ae8:	4815      	ldr	r0, [pc, #84]	@ (8001b40 <FEB_Normalized_CAN_sendBrake+0xb4>)
 8001aea:	f001 fc37 	bl	800335c <HAL_CAN_AddTxMessage>
 8001aee:	4603      	mov	r3, r0
 8001af0:	2b00      	cmp	r3, #0
 8001af2:	d018      	beq.n	8001b26 <FEB_Normalized_CAN_sendBrake+0x9a>
		//error - shutdown
		char buf[128];
		uint8_t buf_len;
		buf_len = sprintf(buf, "CAN MESSAGE FAIL TO SEND: %f\n", normalized_brake);
 8001af4:	4b0f      	ldr	r3, [pc, #60]	@ (8001b34 <FEB_Normalized_CAN_sendBrake+0xa8>)
 8001af6:	681b      	ldr	r3, [r3, #0]
 8001af8:	4618      	mov	r0, r3
 8001afa:	f7fe fd45 	bl	8000588 <__aeabi_f2d>
 8001afe:	4602      	mov	r2, r0
 8001b00:	460b      	mov	r3, r1
 8001b02:	f107 000c 	add.w	r0, r7, #12
 8001b06:	4910      	ldr	r1, [pc, #64]	@ (8001b48 <FEB_Normalized_CAN_sendBrake+0xbc>)
 8001b08:	f004 fc0e 	bl	8006328 <siprintf>
 8001b0c:	4603      	mov	r3, r0
 8001b0e:	f887 308e 	strb.w	r3, [r7, #142]	@ 0x8e
		HAL_UART_Transmit(&huart2,(uint8_t *)buf, buf_len, HAL_MAX_DELAY);
 8001b12:	f897 308e 	ldrb.w	r3, [r7, #142]	@ 0x8e
 8001b16:	b29a      	uxth	r2, r3
 8001b18:	f107 010c 	add.w	r1, r7, #12
 8001b1c:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8001b20:	480a      	ldr	r0, [pc, #40]	@ (8001b4c <FEB_Normalized_CAN_sendBrake+0xc0>)
 8001b22:	f003 fb23 	bl	800516c <HAL_UART_Transmit>
	}

}
 8001b26:	bf00      	nop
 8001b28:	3790      	adds	r7, #144	@ 0x90
 8001b2a:	46bd      	mov	sp, r7
 8001b2c:	bd80      	pop	{r7, pc}
 8001b2e:	bf00      	nop
 8001b30:	200001f0 	.word	0x200001f0
 8001b34:	20000254 	.word	0x20000254
 8001b38:	42c80000 	.word	0x42c80000
 8001b3c:	20000224 	.word	0x20000224
 8001b40:	200002a4 	.word	0x200002a4
 8001b44:	20000234 	.word	0x20000234
 8001b48:	080086e0 	.word	0x080086e0
 8001b4c:	20000320 	.word	0x20000320

08001b50 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001b50:	b580      	push	{r7, lr}
 8001b52:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001b54:	f000 fca6 	bl	80024a4 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001b58:	f000 f810 	bl	8001b7c <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001b5c:	f000 f960 	bl	8001e20 <MX_GPIO_Init>
  MX_USART2_UART_Init();
 8001b60:	f000 f934 	bl	8001dcc <MX_USART2_UART_Init>
  MX_CAN1_Init();
 8001b64:	f000 f8ce 	bl	8001d04 <MX_CAN1_Init>
  MX_I2C1_Init();
 8001b68:	f000 f902 	bl	8001d70 <MX_I2C1_Init>
  MX_ADC1_Init();
 8001b6c:	f000 f878 	bl	8001c60 <MX_ADC1_Init>
  /* USER CODE BEGIN 2 */
  FEB_Main_Setup();
 8001b70:	f7ff fdca 	bl	8001708 <FEB_Main_Setup>
  {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */

	  FEB_Main_While();
 8001b74:	f7ff fdd6 	bl	8001724 <FEB_Main_While>
 8001b78:	e7fc      	b.n	8001b74 <main+0x24>
	...

08001b7c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001b7c:	b580      	push	{r7, lr}
 8001b7e:	b094      	sub	sp, #80	@ 0x50
 8001b80:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001b82:	f107 031c 	add.w	r3, r7, #28
 8001b86:	2234      	movs	r2, #52	@ 0x34
 8001b88:	2100      	movs	r1, #0
 8001b8a:	4618      	mov	r0, r3
 8001b8c:	f004 fcae 	bl	80064ec <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001b90:	f107 0308 	add.w	r3, r7, #8
 8001b94:	2200      	movs	r2, #0
 8001b96:	601a      	str	r2, [r3, #0]
 8001b98:	605a      	str	r2, [r3, #4]
 8001b9a:	609a      	str	r2, [r3, #8]
 8001b9c:	60da      	str	r2, [r3, #12]
 8001b9e:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8001ba0:	2300      	movs	r3, #0
 8001ba2:	607b      	str	r3, [r7, #4]
 8001ba4:	4b2c      	ldr	r3, [pc, #176]	@ (8001c58 <SystemClock_Config+0xdc>)
 8001ba6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001ba8:	4a2b      	ldr	r2, [pc, #172]	@ (8001c58 <SystemClock_Config+0xdc>)
 8001baa:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001bae:	6413      	str	r3, [r2, #64]	@ 0x40
 8001bb0:	4b29      	ldr	r3, [pc, #164]	@ (8001c58 <SystemClock_Config+0xdc>)
 8001bb2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001bb4:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001bb8:	607b      	str	r3, [r7, #4]
 8001bba:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001bbc:	2300      	movs	r3, #0
 8001bbe:	603b      	str	r3, [r7, #0]
 8001bc0:	4b26      	ldr	r3, [pc, #152]	@ (8001c5c <SystemClock_Config+0xe0>)
 8001bc2:	681b      	ldr	r3, [r3, #0]
 8001bc4:	4a25      	ldr	r2, [pc, #148]	@ (8001c5c <SystemClock_Config+0xe0>)
 8001bc6:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8001bca:	6013      	str	r3, [r2, #0]
 8001bcc:	4b23      	ldr	r3, [pc, #140]	@ (8001c5c <SystemClock_Config+0xe0>)
 8001bce:	681b      	ldr	r3, [r3, #0]
 8001bd0:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8001bd4:	603b      	str	r3, [r7, #0]
 8001bd6:	683b      	ldr	r3, [r7, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8001bd8:	2301      	movs	r3, #1
 8001bda:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001bdc:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 8001be0:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001be2:	2302      	movs	r3, #2
 8001be4:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001be6:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 8001bea:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLM = 4;
 8001bec:	2304      	movs	r3, #4
 8001bee:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLN = 180;
 8001bf0:	23b4      	movs	r3, #180	@ 0xb4
 8001bf2:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001bf4:	2302      	movs	r3, #2
 8001bf6:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLQ = 2;
 8001bf8:	2302      	movs	r3, #2
 8001bfa:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 8001bfc:	2302      	movs	r3, #2
 8001bfe:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001c00:	f107 031c 	add.w	r3, r7, #28
 8001c04:	4618      	mov	r0, r3
 8001c06:	f002 ffc3 	bl	8004b90 <HAL_RCC_OscConfig>
 8001c0a:	4603      	mov	r3, r0
 8001c0c:	2b00      	cmp	r3, #0
 8001c0e:	d001      	beq.n	8001c14 <SystemClock_Config+0x98>
  {
    Error_Handler();
 8001c10:	f000 f98c 	bl	8001f2c <Error_Handler>
  }

  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8001c14:	f002 fc22 	bl	800445c <HAL_PWREx_EnableOverDrive>
 8001c18:	4603      	mov	r3, r0
 8001c1a:	2b00      	cmp	r3, #0
 8001c1c:	d001      	beq.n	8001c22 <SystemClock_Config+0xa6>
  {
    Error_Handler();
 8001c1e:	f000 f985 	bl	8001f2c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001c22:	230f      	movs	r3, #15
 8001c24:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001c26:	2302      	movs	r3, #2
 8001c28:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001c2a:	2300      	movs	r3, #0
 8001c2c:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001c2e:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 8001c32:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001c34:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001c38:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001c3a:	f107 0308 	add.w	r3, r7, #8
 8001c3e:	2105      	movs	r1, #5
 8001c40:	4618      	mov	r0, r3
 8001c42:	f002 fc5b 	bl	80044fc <HAL_RCC_ClockConfig>
 8001c46:	4603      	mov	r3, r0
 8001c48:	2b00      	cmp	r3, #0
 8001c4a:	d001      	beq.n	8001c50 <SystemClock_Config+0xd4>
  {
    Error_Handler();
 8001c4c:	f000 f96e 	bl	8001f2c <Error_Handler>
  }
}
 8001c50:	bf00      	nop
 8001c52:	3750      	adds	r7, #80	@ 0x50
 8001c54:	46bd      	mov	sp, r7
 8001c56:	bd80      	pop	{r7, pc}
 8001c58:	40023800 	.word	0x40023800
 8001c5c:	40007000 	.word	0x40007000

08001c60 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8001c60:	b580      	push	{r7, lr}
 8001c62:	b084      	sub	sp, #16
 8001c64:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8001c66:	463b      	mov	r3, r7
 8001c68:	2200      	movs	r2, #0
 8001c6a:	601a      	str	r2, [r3, #0]
 8001c6c:	605a      	str	r2, [r3, #4]
 8001c6e:	609a      	str	r2, [r3, #8]
 8001c70:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 8001c72:	4b21      	ldr	r3, [pc, #132]	@ (8001cf8 <MX_ADC1_Init+0x98>)
 8001c74:	4a21      	ldr	r2, [pc, #132]	@ (8001cfc <MX_ADC1_Init+0x9c>)
 8001c76:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001c78:	4b1f      	ldr	r3, [pc, #124]	@ (8001cf8 <MX_ADC1_Init+0x98>)
 8001c7a:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 8001c7e:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8001c80:	4b1d      	ldr	r3, [pc, #116]	@ (8001cf8 <MX_ADC1_Init+0x98>)
 8001c82:	2200      	movs	r2, #0
 8001c84:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 8001c86:	4b1c      	ldr	r3, [pc, #112]	@ (8001cf8 <MX_ADC1_Init+0x98>)
 8001c88:	2200      	movs	r2, #0
 8001c8a:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8001c8c:	4b1a      	ldr	r3, [pc, #104]	@ (8001cf8 <MX_ADC1_Init+0x98>)
 8001c8e:	2200      	movs	r2, #0
 8001c90:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8001c92:	4b19      	ldr	r3, [pc, #100]	@ (8001cf8 <MX_ADC1_Init+0x98>)
 8001c94:	2200      	movs	r2, #0
 8001c96:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8001c9a:	4b17      	ldr	r3, [pc, #92]	@ (8001cf8 <MX_ADC1_Init+0x98>)
 8001c9c:	2200      	movs	r2, #0
 8001c9e:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001ca0:	4b15      	ldr	r3, [pc, #84]	@ (8001cf8 <MX_ADC1_Init+0x98>)
 8001ca2:	4a17      	ldr	r2, [pc, #92]	@ (8001d00 <MX_ADC1_Init+0xa0>)
 8001ca4:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001ca6:	4b14      	ldr	r3, [pc, #80]	@ (8001cf8 <MX_ADC1_Init+0x98>)
 8001ca8:	2200      	movs	r2, #0
 8001caa:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 1;
 8001cac:	4b12      	ldr	r3, [pc, #72]	@ (8001cf8 <MX_ADC1_Init+0x98>)
 8001cae:	2201      	movs	r2, #1
 8001cb0:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8001cb2:	4b11      	ldr	r3, [pc, #68]	@ (8001cf8 <MX_ADC1_Init+0x98>)
 8001cb4:	2200      	movs	r2, #0
 8001cb6:	f883 2030 	strb.w	r2, [r3, #48]	@ 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8001cba:	4b0f      	ldr	r3, [pc, #60]	@ (8001cf8 <MX_ADC1_Init+0x98>)
 8001cbc:	2201      	movs	r2, #1
 8001cbe:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001cc0:	480d      	ldr	r0, [pc, #52]	@ (8001cf8 <MX_ADC1_Init+0x98>)
 8001cc2:	f000 fc85 	bl	80025d0 <HAL_ADC_Init>
 8001cc6:	4603      	mov	r3, r0
 8001cc8:	2b00      	cmp	r3, #0
 8001cca:	d001      	beq.n	8001cd0 <MX_ADC1_Init+0x70>
  {
    Error_Handler();
 8001ccc:	f000 f92e 	bl	8001f2c <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_1;
 8001cd0:	2301      	movs	r3, #1
 8001cd2:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 8001cd4:	2301      	movs	r3, #1
 8001cd6:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8001cd8:	2300      	movs	r3, #0
 8001cda:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001cdc:	463b      	mov	r3, r7
 8001cde:	4619      	mov	r1, r3
 8001ce0:	4805      	ldr	r0, [pc, #20]	@ (8001cf8 <MX_ADC1_Init+0x98>)
 8001ce2:	f000 fe23 	bl	800292c <HAL_ADC_ConfigChannel>
 8001ce6:	4603      	mov	r3, r0
 8001ce8:	2b00      	cmp	r3, #0
 8001cea:	d001      	beq.n	8001cf0 <MX_ADC1_Init+0x90>
  {
    Error_Handler();
 8001cec:	f000 f91e 	bl	8001f2c <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8001cf0:	bf00      	nop
 8001cf2:	3710      	adds	r7, #16
 8001cf4:	46bd      	mov	sp, r7
 8001cf6:	bd80      	pop	{r7, pc}
 8001cf8:	2000025c 	.word	0x2000025c
 8001cfc:	40012000 	.word	0x40012000
 8001d00:	0f000001 	.word	0x0f000001

08001d04 <MX_CAN1_Init>:
  * @brief CAN1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_CAN1_Init(void)
{
 8001d04:	b580      	push	{r7, lr}
 8001d06:	af00      	add	r7, sp, #0
  /* USER CODE END CAN1_Init 0 */

  /* USER CODE BEGIN CAN1_Init 1 */

  /* USER CODE END CAN1_Init 1 */
  hcan1.Instance = CAN1;
 8001d08:	4b17      	ldr	r3, [pc, #92]	@ (8001d68 <MX_CAN1_Init+0x64>)
 8001d0a:	4a18      	ldr	r2, [pc, #96]	@ (8001d6c <MX_CAN1_Init+0x68>)
 8001d0c:	601a      	str	r2, [r3, #0]
  hcan1.Init.Prescaler = 18;
 8001d0e:	4b16      	ldr	r3, [pc, #88]	@ (8001d68 <MX_CAN1_Init+0x64>)
 8001d10:	2212      	movs	r2, #18
 8001d12:	605a      	str	r2, [r3, #4]
  hcan1.Init.Mode = CAN_MODE_NORMAL;
 8001d14:	4b14      	ldr	r3, [pc, #80]	@ (8001d68 <MX_CAN1_Init+0x64>)
 8001d16:	2200      	movs	r2, #0
 8001d18:	609a      	str	r2, [r3, #8]
  hcan1.Init.SyncJumpWidth = CAN_SJW_1TQ;
 8001d1a:	4b13      	ldr	r3, [pc, #76]	@ (8001d68 <MX_CAN1_Init+0x64>)
 8001d1c:	2200      	movs	r2, #0
 8001d1e:	60da      	str	r2, [r3, #12]
  hcan1.Init.TimeSeg1 = CAN_BS1_3TQ;
 8001d20:	4b11      	ldr	r3, [pc, #68]	@ (8001d68 <MX_CAN1_Init+0x64>)
 8001d22:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 8001d26:	611a      	str	r2, [r3, #16]
  hcan1.Init.TimeSeg2 = CAN_BS2_1TQ;
 8001d28:	4b0f      	ldr	r3, [pc, #60]	@ (8001d68 <MX_CAN1_Init+0x64>)
 8001d2a:	2200      	movs	r2, #0
 8001d2c:	615a      	str	r2, [r3, #20]
  hcan1.Init.TimeTriggeredMode = DISABLE;
 8001d2e:	4b0e      	ldr	r3, [pc, #56]	@ (8001d68 <MX_CAN1_Init+0x64>)
 8001d30:	2200      	movs	r2, #0
 8001d32:	761a      	strb	r2, [r3, #24]
  hcan1.Init.AutoBusOff = DISABLE;
 8001d34:	4b0c      	ldr	r3, [pc, #48]	@ (8001d68 <MX_CAN1_Init+0x64>)
 8001d36:	2200      	movs	r2, #0
 8001d38:	765a      	strb	r2, [r3, #25]
  hcan1.Init.AutoWakeUp = DISABLE;
 8001d3a:	4b0b      	ldr	r3, [pc, #44]	@ (8001d68 <MX_CAN1_Init+0x64>)
 8001d3c:	2200      	movs	r2, #0
 8001d3e:	769a      	strb	r2, [r3, #26]
  hcan1.Init.AutoRetransmission = DISABLE;
 8001d40:	4b09      	ldr	r3, [pc, #36]	@ (8001d68 <MX_CAN1_Init+0x64>)
 8001d42:	2200      	movs	r2, #0
 8001d44:	76da      	strb	r2, [r3, #27]
  hcan1.Init.ReceiveFifoLocked = DISABLE;
 8001d46:	4b08      	ldr	r3, [pc, #32]	@ (8001d68 <MX_CAN1_Init+0x64>)
 8001d48:	2200      	movs	r2, #0
 8001d4a:	771a      	strb	r2, [r3, #28]
  hcan1.Init.TransmitFifoPriority = DISABLE;
 8001d4c:	4b06      	ldr	r3, [pc, #24]	@ (8001d68 <MX_CAN1_Init+0x64>)
 8001d4e:	2200      	movs	r2, #0
 8001d50:	775a      	strb	r2, [r3, #29]
  if (HAL_CAN_Init(&hcan1) != HAL_OK)
 8001d52:	4805      	ldr	r0, [pc, #20]	@ (8001d68 <MX_CAN1_Init+0x64>)
 8001d54:	f001 f8e2 	bl	8002f1c <HAL_CAN_Init>
 8001d58:	4603      	mov	r3, r0
 8001d5a:	2b00      	cmp	r3, #0
 8001d5c:	d001      	beq.n	8001d62 <MX_CAN1_Init+0x5e>
  {
    Error_Handler();
 8001d5e:	f000 f8e5 	bl	8001f2c <Error_Handler>
  }
  /* USER CODE BEGIN CAN1_Init 2 */

  /* USER CODE END CAN1_Init 2 */

}
 8001d62:	bf00      	nop
 8001d64:	bd80      	pop	{r7, pc}
 8001d66:	bf00      	nop
 8001d68:	200002a4 	.word	0x200002a4
 8001d6c:	40006400 	.word	0x40006400

08001d70 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8001d70:	b580      	push	{r7, lr}
 8001d72:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8001d74:	4b12      	ldr	r3, [pc, #72]	@ (8001dc0 <MX_I2C1_Init+0x50>)
 8001d76:	4a13      	ldr	r2, [pc, #76]	@ (8001dc4 <MX_I2C1_Init+0x54>)
 8001d78:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 8001d7a:	4b11      	ldr	r3, [pc, #68]	@ (8001dc0 <MX_I2C1_Init+0x50>)
 8001d7c:	4a12      	ldr	r2, [pc, #72]	@ (8001dc8 <MX_I2C1_Init+0x58>)
 8001d7e:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8001d80:	4b0f      	ldr	r3, [pc, #60]	@ (8001dc0 <MX_I2C1_Init+0x50>)
 8001d82:	2200      	movs	r2, #0
 8001d84:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 8001d86:	4b0e      	ldr	r3, [pc, #56]	@ (8001dc0 <MX_I2C1_Init+0x50>)
 8001d88:	2200      	movs	r2, #0
 8001d8a:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001d8c:	4b0c      	ldr	r3, [pc, #48]	@ (8001dc0 <MX_I2C1_Init+0x50>)
 8001d8e:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8001d92:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001d94:	4b0a      	ldr	r3, [pc, #40]	@ (8001dc0 <MX_I2C1_Init+0x50>)
 8001d96:	2200      	movs	r2, #0
 8001d98:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 8001d9a:	4b09      	ldr	r3, [pc, #36]	@ (8001dc0 <MX_I2C1_Init+0x50>)
 8001d9c:	2200      	movs	r2, #0
 8001d9e:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001da0:	4b07      	ldr	r3, [pc, #28]	@ (8001dc0 <MX_I2C1_Init+0x50>)
 8001da2:	2200      	movs	r2, #0
 8001da4:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8001da6:	4b06      	ldr	r3, [pc, #24]	@ (8001dc0 <MX_I2C1_Init+0x50>)
 8001da8:	2200      	movs	r2, #0
 8001daa:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8001dac:	4804      	ldr	r0, [pc, #16]	@ (8001dc0 <MX_I2C1_Init+0x50>)
 8001dae:	f002 fa11 	bl	80041d4 <HAL_I2C_Init>
 8001db2:	4603      	mov	r3, r0
 8001db4:	2b00      	cmp	r3, #0
 8001db6:	d001      	beq.n	8001dbc <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 8001db8:	f000 f8b8 	bl	8001f2c <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8001dbc:	bf00      	nop
 8001dbe:	bd80      	pop	{r7, pc}
 8001dc0:	200002cc 	.word	0x200002cc
 8001dc4:	40005400 	.word	0x40005400
 8001dc8:	000186a0 	.word	0x000186a0

08001dcc <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8001dcc:	b580      	push	{r7, lr}
 8001dce:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8001dd0:	4b11      	ldr	r3, [pc, #68]	@ (8001e18 <MX_USART2_UART_Init+0x4c>)
 8001dd2:	4a12      	ldr	r2, [pc, #72]	@ (8001e1c <MX_USART2_UART_Init+0x50>)
 8001dd4:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 8001dd6:	4b10      	ldr	r3, [pc, #64]	@ (8001e18 <MX_USART2_UART_Init+0x4c>)
 8001dd8:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8001ddc:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8001dde:	4b0e      	ldr	r3, [pc, #56]	@ (8001e18 <MX_USART2_UART_Init+0x4c>)
 8001de0:	2200      	movs	r2, #0
 8001de2:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8001de4:	4b0c      	ldr	r3, [pc, #48]	@ (8001e18 <MX_USART2_UART_Init+0x4c>)
 8001de6:	2200      	movs	r2, #0
 8001de8:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8001dea:	4b0b      	ldr	r3, [pc, #44]	@ (8001e18 <MX_USART2_UART_Init+0x4c>)
 8001dec:	2200      	movs	r2, #0
 8001dee:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8001df0:	4b09      	ldr	r3, [pc, #36]	@ (8001e18 <MX_USART2_UART_Init+0x4c>)
 8001df2:	220c      	movs	r2, #12
 8001df4:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001df6:	4b08      	ldr	r3, [pc, #32]	@ (8001e18 <MX_USART2_UART_Init+0x4c>)
 8001df8:	2200      	movs	r2, #0
 8001dfa:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8001dfc:	4b06      	ldr	r3, [pc, #24]	@ (8001e18 <MX_USART2_UART_Init+0x4c>)
 8001dfe:	2200      	movs	r2, #0
 8001e00:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8001e02:	4805      	ldr	r0, [pc, #20]	@ (8001e18 <MX_USART2_UART_Init+0x4c>)
 8001e04:	f003 f962 	bl	80050cc <HAL_UART_Init>
 8001e08:	4603      	mov	r3, r0
 8001e0a:	2b00      	cmp	r3, #0
 8001e0c:	d001      	beq.n	8001e12 <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8001e0e:	f000 f88d 	bl	8001f2c <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8001e12:	bf00      	nop
 8001e14:	bd80      	pop	{r7, pc}
 8001e16:	bf00      	nop
 8001e18:	20000320 	.word	0x20000320
 8001e1c:	40004400 	.word	0x40004400

08001e20 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001e20:	b580      	push	{r7, lr}
 8001e22:	b08a      	sub	sp, #40	@ 0x28
 8001e24:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e26:	f107 0314 	add.w	r3, r7, #20
 8001e2a:	2200      	movs	r2, #0
 8001e2c:	601a      	str	r2, [r3, #0]
 8001e2e:	605a      	str	r2, [r3, #4]
 8001e30:	609a      	str	r2, [r3, #8]
 8001e32:	60da      	str	r2, [r3, #12]
 8001e34:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001e36:	2300      	movs	r3, #0
 8001e38:	613b      	str	r3, [r7, #16]
 8001e3a:	4b39      	ldr	r3, [pc, #228]	@ (8001f20 <MX_GPIO_Init+0x100>)
 8001e3c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001e3e:	4a38      	ldr	r2, [pc, #224]	@ (8001f20 <MX_GPIO_Init+0x100>)
 8001e40:	f043 0304 	orr.w	r3, r3, #4
 8001e44:	6313      	str	r3, [r2, #48]	@ 0x30
 8001e46:	4b36      	ldr	r3, [pc, #216]	@ (8001f20 <MX_GPIO_Init+0x100>)
 8001e48:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001e4a:	f003 0304 	and.w	r3, r3, #4
 8001e4e:	613b      	str	r3, [r7, #16]
 8001e50:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001e52:	2300      	movs	r3, #0
 8001e54:	60fb      	str	r3, [r7, #12]
 8001e56:	4b32      	ldr	r3, [pc, #200]	@ (8001f20 <MX_GPIO_Init+0x100>)
 8001e58:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001e5a:	4a31      	ldr	r2, [pc, #196]	@ (8001f20 <MX_GPIO_Init+0x100>)
 8001e5c:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001e60:	6313      	str	r3, [r2, #48]	@ 0x30
 8001e62:	4b2f      	ldr	r3, [pc, #188]	@ (8001f20 <MX_GPIO_Init+0x100>)
 8001e64:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001e66:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001e6a:	60fb      	str	r3, [r7, #12]
 8001e6c:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001e6e:	2300      	movs	r3, #0
 8001e70:	60bb      	str	r3, [r7, #8]
 8001e72:	4b2b      	ldr	r3, [pc, #172]	@ (8001f20 <MX_GPIO_Init+0x100>)
 8001e74:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001e76:	4a2a      	ldr	r2, [pc, #168]	@ (8001f20 <MX_GPIO_Init+0x100>)
 8001e78:	f043 0301 	orr.w	r3, r3, #1
 8001e7c:	6313      	str	r3, [r2, #48]	@ 0x30
 8001e7e:	4b28      	ldr	r3, [pc, #160]	@ (8001f20 <MX_GPIO_Init+0x100>)
 8001e80:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001e82:	f003 0301 	and.w	r3, r3, #1
 8001e86:	60bb      	str	r3, [r7, #8]
 8001e88:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001e8a:	2300      	movs	r3, #0
 8001e8c:	607b      	str	r3, [r7, #4]
 8001e8e:	4b24      	ldr	r3, [pc, #144]	@ (8001f20 <MX_GPIO_Init+0x100>)
 8001e90:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001e92:	4a23      	ldr	r2, [pc, #140]	@ (8001f20 <MX_GPIO_Init+0x100>)
 8001e94:	f043 0302 	orr.w	r3, r3, #2
 8001e98:	6313      	str	r3, [r2, #48]	@ 0x30
 8001e9a:	4b21      	ldr	r3, [pc, #132]	@ (8001f20 <MX_GPIO_Init+0x100>)
 8001e9c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001e9e:	f003 0302 	and.w	r3, r3, #2
 8001ea2:	607b      	str	r3, [r7, #4]
 8001ea4:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, IVMeter_IND_Pin|RST_Pin, GPIO_PIN_RESET);
 8001ea6:	2200      	movs	r2, #0
 8001ea8:	2103      	movs	r1, #3
 8001eaa:	481e      	ldr	r0, [pc, #120]	@ (8001f24 <MX_GPIO_Init+0x104>)
 8001eac:	f002 f978 	bl	80041a0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 8001eb0:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8001eb4:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8001eb6:	f44f 1304 	mov.w	r3, #2162688	@ 0x210000
 8001eba:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ebc:	2300      	movs	r3, #0
 8001ebe:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8001ec0:	f107 0314 	add.w	r3, r7, #20
 8001ec4:	4619      	mov	r1, r3
 8001ec6:	4817      	ldr	r0, [pc, #92]	@ (8001f24 <MX_GPIO_Init+0x104>)
 8001ec8:	f001 ffd6 	bl	8003e78 <HAL_GPIO_Init>

  /*Configure GPIO pins : IVMeter_IND_Pin RST_Pin */
  GPIO_InitStruct.Pin = IVMeter_IND_Pin|RST_Pin;
 8001ecc:	2303      	movs	r3, #3
 8001ece:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001ed0:	2301      	movs	r3, #1
 8001ed2:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ed4:	2300      	movs	r3, #0
 8001ed6:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001ed8:	2300      	movs	r3, #0
 8001eda:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001edc:	f107 0314 	add.w	r3, r7, #20
 8001ee0:	4619      	mov	r1, r3
 8001ee2:	4810      	ldr	r0, [pc, #64]	@ (8001f24 <MX_GPIO_Init+0x104>)
 8001ee4:	f001 ffc8 	bl	8003e78 <HAL_GPIO_Init>

  /*Configure GPIO pins : IVL_Down_Pin IVTS_HALF_Pin SHUTDOWN_Pin PTS_HALF_Pin */
  GPIO_InitStruct.Pin = IVL_Down_Pin|IVTS_HALF_Pin|SHUTDOWN_Pin|PTS_HALF_Pin;
 8001ee8:	23f0      	movs	r3, #240	@ 0xf0
 8001eea:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001eec:	2300      	movs	r3, #0
 8001eee:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ef0:	2300      	movs	r3, #0
 8001ef2:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ef4:	f107 0314 	add.w	r3, r7, #20
 8001ef8:	4619      	mov	r1, r3
 8001efa:	480b      	ldr	r0, [pc, #44]	@ (8001f28 <MX_GPIO_Init+0x108>)
 8001efc:	f001 ffbc 	bl	8003e78 <HAL_GPIO_Init>

  /*Configure GPIO pin : BTS_HALF_Pin */
  GPIO_InitStruct.Pin = BTS_HALF_Pin;
 8001f00:	2320      	movs	r3, #32
 8001f02:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001f04:	2300      	movs	r3, #0
 8001f06:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001f08:	2300      	movs	r3, #0
 8001f0a:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(BTS_HALF_GPIO_Port, &GPIO_InitStruct);
 8001f0c:	f107 0314 	add.w	r3, r7, #20
 8001f10:	4619      	mov	r1, r3
 8001f12:	4804      	ldr	r0, [pc, #16]	@ (8001f24 <MX_GPIO_Init+0x104>)
 8001f14:	f001 ffb0 	bl	8003e78 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8001f18:	bf00      	nop
 8001f1a:	3728      	adds	r7, #40	@ 0x28
 8001f1c:	46bd      	mov	sp, r7
 8001f1e:	bd80      	pop	{r7, pc}
 8001f20:	40023800 	.word	0x40023800
 8001f24:	40020800 	.word	0x40020800
 8001f28:	40020000 	.word	0x40020000

08001f2c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001f2c:	b480      	push	{r7}
 8001f2e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001f30:	b672      	cpsid	i
}
 8001f32:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001f34:	bf00      	nop
 8001f36:	e7fd      	b.n	8001f34 <Error_Handler+0x8>

08001f38 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001f38:	b580      	push	{r7, lr}
 8001f3a:	b082      	sub	sp, #8
 8001f3c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001f3e:	2300      	movs	r3, #0
 8001f40:	607b      	str	r3, [r7, #4]
 8001f42:	4b10      	ldr	r3, [pc, #64]	@ (8001f84 <HAL_MspInit+0x4c>)
 8001f44:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001f46:	4a0f      	ldr	r2, [pc, #60]	@ (8001f84 <HAL_MspInit+0x4c>)
 8001f48:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001f4c:	6453      	str	r3, [r2, #68]	@ 0x44
 8001f4e:	4b0d      	ldr	r3, [pc, #52]	@ (8001f84 <HAL_MspInit+0x4c>)
 8001f50:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001f52:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001f56:	607b      	str	r3, [r7, #4]
 8001f58:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001f5a:	2300      	movs	r3, #0
 8001f5c:	603b      	str	r3, [r7, #0]
 8001f5e:	4b09      	ldr	r3, [pc, #36]	@ (8001f84 <HAL_MspInit+0x4c>)
 8001f60:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001f62:	4a08      	ldr	r2, [pc, #32]	@ (8001f84 <HAL_MspInit+0x4c>)
 8001f64:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001f68:	6413      	str	r3, [r2, #64]	@ 0x40
 8001f6a:	4b06      	ldr	r3, [pc, #24]	@ (8001f84 <HAL_MspInit+0x4c>)
 8001f6c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001f6e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001f72:	603b      	str	r3, [r7, #0]
 8001f74:	683b      	ldr	r3, [r7, #0]

  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_0);
 8001f76:	2007      	movs	r0, #7
 8001f78:	f001 ff3c 	bl	8003df4 <HAL_NVIC_SetPriorityGrouping>
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001f7c:	bf00      	nop
 8001f7e:	3708      	adds	r7, #8
 8001f80:	46bd      	mov	sp, r7
 8001f82:	bd80      	pop	{r7, pc}
 8001f84:	40023800 	.word	0x40023800

08001f88 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8001f88:	b580      	push	{r7, lr}
 8001f8a:	b08a      	sub	sp, #40	@ 0x28
 8001f8c:	af00      	add	r7, sp, #0
 8001f8e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001f90:	f107 0314 	add.w	r3, r7, #20
 8001f94:	2200      	movs	r2, #0
 8001f96:	601a      	str	r2, [r3, #0]
 8001f98:	605a      	str	r2, [r3, #4]
 8001f9a:	609a      	str	r2, [r3, #8]
 8001f9c:	60da      	str	r2, [r3, #12]
 8001f9e:	611a      	str	r2, [r3, #16]
  if(hadc->Instance==ADC1)
 8001fa0:	687b      	ldr	r3, [r7, #4]
 8001fa2:	681b      	ldr	r3, [r3, #0]
 8001fa4:	4a24      	ldr	r2, [pc, #144]	@ (8002038 <HAL_ADC_MspInit+0xb0>)
 8001fa6:	4293      	cmp	r3, r2
 8001fa8:	d141      	bne.n	800202e <HAL_ADC_MspInit+0xa6>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 8001faa:	2300      	movs	r3, #0
 8001fac:	613b      	str	r3, [r7, #16]
 8001fae:	4b23      	ldr	r3, [pc, #140]	@ (800203c <HAL_ADC_MspInit+0xb4>)
 8001fb0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001fb2:	4a22      	ldr	r2, [pc, #136]	@ (800203c <HAL_ADC_MspInit+0xb4>)
 8001fb4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8001fb8:	6453      	str	r3, [r2, #68]	@ 0x44
 8001fba:	4b20      	ldr	r3, [pc, #128]	@ (800203c <HAL_ADC_MspInit+0xb4>)
 8001fbc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001fbe:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8001fc2:	613b      	str	r3, [r7, #16]
 8001fc4:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001fc6:	2300      	movs	r3, #0
 8001fc8:	60fb      	str	r3, [r7, #12]
 8001fca:	4b1c      	ldr	r3, [pc, #112]	@ (800203c <HAL_ADC_MspInit+0xb4>)
 8001fcc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001fce:	4a1b      	ldr	r2, [pc, #108]	@ (800203c <HAL_ADC_MspInit+0xb4>)
 8001fd0:	f043 0304 	orr.w	r3, r3, #4
 8001fd4:	6313      	str	r3, [r2, #48]	@ 0x30
 8001fd6:	4b19      	ldr	r3, [pc, #100]	@ (800203c <HAL_ADC_MspInit+0xb4>)
 8001fd8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001fda:	f003 0304 	and.w	r3, r3, #4
 8001fde:	60fb      	str	r3, [r7, #12]
 8001fe0:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001fe2:	2300      	movs	r3, #0
 8001fe4:	60bb      	str	r3, [r7, #8]
 8001fe6:	4b15      	ldr	r3, [pc, #84]	@ (800203c <HAL_ADC_MspInit+0xb4>)
 8001fe8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001fea:	4a14      	ldr	r2, [pc, #80]	@ (800203c <HAL_ADC_MspInit+0xb4>)
 8001fec:	f043 0301 	orr.w	r3, r3, #1
 8001ff0:	6313      	str	r3, [r2, #48]	@ 0x30
 8001ff2:	4b12      	ldr	r3, [pc, #72]	@ (800203c <HAL_ADC_MspInit+0xb4>)
 8001ff4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001ff6:	f003 0301 	and.w	r3, r3, #1
 8001ffa:	60bb      	str	r3, [r7, #8]
 8001ffc:	68bb      	ldr	r3, [r7, #8]
    PC3     ------> ADC1_IN13
    PA0-WKUP     ------> ADC1_IN0
    PA1     ------> ADC1_IN1
    PC4     ------> ADC1_IN14
    */
    GPIO_InitStruct.Pin = brake1_Pin|brake2_Pin|brakeIn_Pin;
 8001ffe:	231c      	movs	r3, #28
 8002000:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8002002:	2303      	movs	r3, #3
 8002004:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002006:	2300      	movs	r3, #0
 8002008:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800200a:	f107 0314 	add.w	r3, r7, #20
 800200e:	4619      	mov	r1, r3
 8002010:	480b      	ldr	r0, [pc, #44]	@ (8002040 <HAL_ADC_MspInit+0xb8>)
 8002012:	f001 ff31 	bl	8003e78 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = acc1_Pin|acc2_Pin;
 8002016:	2303      	movs	r3, #3
 8002018:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 800201a:	2303      	movs	r3, #3
 800201c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800201e:	2300      	movs	r3, #0
 8002020:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002022:	f107 0314 	add.w	r3, r7, #20
 8002026:	4619      	mov	r1, r3
 8002028:	4806      	ldr	r0, [pc, #24]	@ (8002044 <HAL_ADC_MspInit+0xbc>)
 800202a:	f001 ff25 	bl	8003e78 <HAL_GPIO_Init>

  /* USER CODE END ADC1_MspInit 1 */

  }

}
 800202e:	bf00      	nop
 8002030:	3728      	adds	r7, #40	@ 0x28
 8002032:	46bd      	mov	sp, r7
 8002034:	bd80      	pop	{r7, pc}
 8002036:	bf00      	nop
 8002038:	40012000 	.word	0x40012000
 800203c:	40023800 	.word	0x40023800
 8002040:	40020800 	.word	0x40020800
 8002044:	40020000 	.word	0x40020000

08002048 <HAL_CAN_MspInit>:
* This function configures the hardware resources used in this example
* @param hcan: CAN handle pointer
* @retval None
*/
void HAL_CAN_MspInit(CAN_HandleTypeDef* hcan)
{
 8002048:	b580      	push	{r7, lr}
 800204a:	b08a      	sub	sp, #40	@ 0x28
 800204c:	af00      	add	r7, sp, #0
 800204e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002050:	f107 0314 	add.w	r3, r7, #20
 8002054:	2200      	movs	r2, #0
 8002056:	601a      	str	r2, [r3, #0]
 8002058:	605a      	str	r2, [r3, #4]
 800205a:	609a      	str	r2, [r3, #8]
 800205c:	60da      	str	r2, [r3, #12]
 800205e:	611a      	str	r2, [r3, #16]
  if(hcan->Instance==CAN1)
 8002060:	687b      	ldr	r3, [r7, #4]
 8002062:	681b      	ldr	r3, [r3, #0]
 8002064:	4a21      	ldr	r2, [pc, #132]	@ (80020ec <HAL_CAN_MspInit+0xa4>)
 8002066:	4293      	cmp	r3, r2
 8002068:	d13c      	bne.n	80020e4 <HAL_CAN_MspInit+0x9c>
  {
  /* USER CODE BEGIN CAN1_MspInit 0 */

  /* USER CODE END CAN1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CAN1_CLK_ENABLE();
 800206a:	2300      	movs	r3, #0
 800206c:	613b      	str	r3, [r7, #16]
 800206e:	4b20      	ldr	r3, [pc, #128]	@ (80020f0 <HAL_CAN_MspInit+0xa8>)
 8002070:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002072:	4a1f      	ldr	r2, [pc, #124]	@ (80020f0 <HAL_CAN_MspInit+0xa8>)
 8002074:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8002078:	6413      	str	r3, [r2, #64]	@ 0x40
 800207a:	4b1d      	ldr	r3, [pc, #116]	@ (80020f0 <HAL_CAN_MspInit+0xa8>)
 800207c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800207e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8002082:	613b      	str	r3, [r7, #16]
 8002084:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002086:	2300      	movs	r3, #0
 8002088:	60fb      	str	r3, [r7, #12]
 800208a:	4b19      	ldr	r3, [pc, #100]	@ (80020f0 <HAL_CAN_MspInit+0xa8>)
 800208c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800208e:	4a18      	ldr	r2, [pc, #96]	@ (80020f0 <HAL_CAN_MspInit+0xa8>)
 8002090:	f043 0301 	orr.w	r3, r3, #1
 8002094:	6313      	str	r3, [r2, #48]	@ 0x30
 8002096:	4b16      	ldr	r3, [pc, #88]	@ (80020f0 <HAL_CAN_MspInit+0xa8>)
 8002098:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800209a:	f003 0301 	and.w	r3, r3, #1
 800209e:	60fb      	str	r3, [r7, #12]
 80020a0:	68fb      	ldr	r3, [r7, #12]
    /**CAN1 GPIO Configuration
    PA11     ------> CAN1_RX
    PA12     ------> CAN1_TX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_11|GPIO_PIN_12;
 80020a2:	f44f 53c0 	mov.w	r3, #6144	@ 0x1800
 80020a6:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80020a8:	2302      	movs	r3, #2
 80020aa:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80020ac:	2300      	movs	r3, #0
 80020ae:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80020b0:	2303      	movs	r3, #3
 80020b2:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF9_CAN1;
 80020b4:	2309      	movs	r3, #9
 80020b6:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80020b8:	f107 0314 	add.w	r3, r7, #20
 80020bc:	4619      	mov	r1, r3
 80020be:	480d      	ldr	r0, [pc, #52]	@ (80020f4 <HAL_CAN_MspInit+0xac>)
 80020c0:	f001 feda 	bl	8003e78 <HAL_GPIO_Init>

    /* CAN1 interrupt Init */
    HAL_NVIC_SetPriority(CAN1_RX0_IRQn, 0, 0);
 80020c4:	2200      	movs	r2, #0
 80020c6:	2100      	movs	r1, #0
 80020c8:	2014      	movs	r0, #20
 80020ca:	f001 fe9e 	bl	8003e0a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(CAN1_RX0_IRQn);
 80020ce:	2014      	movs	r0, #20
 80020d0:	f001 feb7 	bl	8003e42 <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(CAN1_RX1_IRQn, 0, 0);
 80020d4:	2200      	movs	r2, #0
 80020d6:	2100      	movs	r1, #0
 80020d8:	2015      	movs	r0, #21
 80020da:	f001 fe96 	bl	8003e0a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(CAN1_RX1_IRQn);
 80020de:	2015      	movs	r0, #21
 80020e0:	f001 feaf 	bl	8003e42 <HAL_NVIC_EnableIRQ>

  /* USER CODE END CAN1_MspInit 1 */

  }

}
 80020e4:	bf00      	nop
 80020e6:	3728      	adds	r7, #40	@ 0x28
 80020e8:	46bd      	mov	sp, r7
 80020ea:	bd80      	pop	{r7, pc}
 80020ec:	40006400 	.word	0x40006400
 80020f0:	40023800 	.word	0x40023800
 80020f4:	40020000 	.word	0x40020000

080020f8 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80020f8:	b580      	push	{r7, lr}
 80020fa:	b08a      	sub	sp, #40	@ 0x28
 80020fc:	af00      	add	r7, sp, #0
 80020fe:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002100:	f107 0314 	add.w	r3, r7, #20
 8002104:	2200      	movs	r2, #0
 8002106:	601a      	str	r2, [r3, #0]
 8002108:	605a      	str	r2, [r3, #4]
 800210a:	609a      	str	r2, [r3, #8]
 800210c:	60da      	str	r2, [r3, #12]
 800210e:	611a      	str	r2, [r3, #16]
  if(hi2c->Instance==I2C1)
 8002110:	687b      	ldr	r3, [r7, #4]
 8002112:	681b      	ldr	r3, [r3, #0]
 8002114:	4a19      	ldr	r2, [pc, #100]	@ (800217c <HAL_I2C_MspInit+0x84>)
 8002116:	4293      	cmp	r3, r2
 8002118:	d12b      	bne.n	8002172 <HAL_I2C_MspInit+0x7a>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 800211a:	2300      	movs	r3, #0
 800211c:	613b      	str	r3, [r7, #16]
 800211e:	4b18      	ldr	r3, [pc, #96]	@ (8002180 <HAL_I2C_MspInit+0x88>)
 8002120:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002122:	4a17      	ldr	r2, [pc, #92]	@ (8002180 <HAL_I2C_MspInit+0x88>)
 8002124:	f043 0302 	orr.w	r3, r3, #2
 8002128:	6313      	str	r3, [r2, #48]	@ 0x30
 800212a:	4b15      	ldr	r3, [pc, #84]	@ (8002180 <HAL_I2C_MspInit+0x88>)
 800212c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800212e:	f003 0302 	and.w	r3, r3, #2
 8002132:	613b      	str	r3, [r7, #16]
 8002134:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002136:	23c0      	movs	r3, #192	@ 0xc0
 8002138:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800213a:	2312      	movs	r3, #18
 800213c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800213e:	2300      	movs	r3, #0
 8002140:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002142:	2303      	movs	r3, #3
 8002144:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8002146:	2304      	movs	r3, #4
 8002148:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800214a:	f107 0314 	add.w	r3, r7, #20
 800214e:	4619      	mov	r1, r3
 8002150:	480c      	ldr	r0, [pc, #48]	@ (8002184 <HAL_I2C_MspInit+0x8c>)
 8002152:	f001 fe91 	bl	8003e78 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8002156:	2300      	movs	r3, #0
 8002158:	60fb      	str	r3, [r7, #12]
 800215a:	4b09      	ldr	r3, [pc, #36]	@ (8002180 <HAL_I2C_MspInit+0x88>)
 800215c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800215e:	4a08      	ldr	r2, [pc, #32]	@ (8002180 <HAL_I2C_MspInit+0x88>)
 8002160:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8002164:	6413      	str	r3, [r2, #64]	@ 0x40
 8002166:	4b06      	ldr	r3, [pc, #24]	@ (8002180 <HAL_I2C_MspInit+0x88>)
 8002168:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800216a:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800216e:	60fb      	str	r3, [r7, #12]
 8002170:	68fb      	ldr	r3, [r7, #12]

  /* USER CODE END I2C1_MspInit 1 */

  }

}
 8002172:	bf00      	nop
 8002174:	3728      	adds	r7, #40	@ 0x28
 8002176:	46bd      	mov	sp, r7
 8002178:	bd80      	pop	{r7, pc}
 800217a:	bf00      	nop
 800217c:	40005400 	.word	0x40005400
 8002180:	40023800 	.word	0x40023800
 8002184:	40020400 	.word	0x40020400

08002188 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8002188:	b580      	push	{r7, lr}
 800218a:	b08a      	sub	sp, #40	@ 0x28
 800218c:	af00      	add	r7, sp, #0
 800218e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002190:	f107 0314 	add.w	r3, r7, #20
 8002194:	2200      	movs	r2, #0
 8002196:	601a      	str	r2, [r3, #0]
 8002198:	605a      	str	r2, [r3, #4]
 800219a:	609a      	str	r2, [r3, #8]
 800219c:	60da      	str	r2, [r3, #12]
 800219e:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART2)
 80021a0:	687b      	ldr	r3, [r7, #4]
 80021a2:	681b      	ldr	r3, [r3, #0]
 80021a4:	4a19      	ldr	r2, [pc, #100]	@ (800220c <HAL_UART_MspInit+0x84>)
 80021a6:	4293      	cmp	r3, r2
 80021a8:	d12b      	bne.n	8002202 <HAL_UART_MspInit+0x7a>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 80021aa:	2300      	movs	r3, #0
 80021ac:	613b      	str	r3, [r7, #16]
 80021ae:	4b18      	ldr	r3, [pc, #96]	@ (8002210 <HAL_UART_MspInit+0x88>)
 80021b0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80021b2:	4a17      	ldr	r2, [pc, #92]	@ (8002210 <HAL_UART_MspInit+0x88>)
 80021b4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80021b8:	6413      	str	r3, [r2, #64]	@ 0x40
 80021ba:	4b15      	ldr	r3, [pc, #84]	@ (8002210 <HAL_UART_MspInit+0x88>)
 80021bc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80021be:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80021c2:	613b      	str	r3, [r7, #16]
 80021c4:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80021c6:	2300      	movs	r3, #0
 80021c8:	60fb      	str	r3, [r7, #12]
 80021ca:	4b11      	ldr	r3, [pc, #68]	@ (8002210 <HAL_UART_MspInit+0x88>)
 80021cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80021ce:	4a10      	ldr	r2, [pc, #64]	@ (8002210 <HAL_UART_MspInit+0x88>)
 80021d0:	f043 0301 	orr.w	r3, r3, #1
 80021d4:	6313      	str	r3, [r2, #48]	@ 0x30
 80021d6:	4b0e      	ldr	r3, [pc, #56]	@ (8002210 <HAL_UART_MspInit+0x88>)
 80021d8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80021da:	f003 0301 	and.w	r3, r3, #1
 80021de:	60fb      	str	r3, [r7, #12]
 80021e0:	68fb      	ldr	r3, [r7, #12]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
 80021e2:	230c      	movs	r3, #12
 80021e4:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80021e6:	2302      	movs	r3, #2
 80021e8:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80021ea:	2300      	movs	r3, #0
 80021ec:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80021ee:	2303      	movs	r3, #3
 80021f0:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 80021f2:	2307      	movs	r3, #7
 80021f4:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80021f6:	f107 0314 	add.w	r3, r7, #20
 80021fa:	4619      	mov	r1, r3
 80021fc:	4805      	ldr	r0, [pc, #20]	@ (8002214 <HAL_UART_MspInit+0x8c>)
 80021fe:	f001 fe3b 	bl	8003e78 <HAL_GPIO_Init>

  /* USER CODE END USART2_MspInit 1 */

  }

}
 8002202:	bf00      	nop
 8002204:	3728      	adds	r7, #40	@ 0x28
 8002206:	46bd      	mov	sp, r7
 8002208:	bd80      	pop	{r7, pc}
 800220a:	bf00      	nop
 800220c:	40004400 	.word	0x40004400
 8002210:	40023800 	.word	0x40023800
 8002214:	40020000 	.word	0x40020000

08002218 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002218:	b480      	push	{r7}
 800221a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 800221c:	bf00      	nop
 800221e:	e7fd      	b.n	800221c <NMI_Handler+0x4>

08002220 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8002220:	b480      	push	{r7}
 8002222:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002224:	bf00      	nop
 8002226:	e7fd      	b.n	8002224 <HardFault_Handler+0x4>

08002228 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002228:	b480      	push	{r7}
 800222a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800222c:	bf00      	nop
 800222e:	e7fd      	b.n	800222c <MemManage_Handler+0x4>

08002230 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8002230:	b480      	push	{r7}
 8002232:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002234:	bf00      	nop
 8002236:	e7fd      	b.n	8002234 <BusFault_Handler+0x4>

08002238 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8002238:	b480      	push	{r7}
 800223a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800223c:	bf00      	nop
 800223e:	e7fd      	b.n	800223c <UsageFault_Handler+0x4>

08002240 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002240:	b480      	push	{r7}
 8002242:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8002244:	bf00      	nop
 8002246:	46bd      	mov	sp, r7
 8002248:	f85d 7b04 	ldr.w	r7, [sp], #4
 800224c:	4770      	bx	lr

0800224e <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800224e:	b480      	push	{r7}
 8002250:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8002252:	bf00      	nop
 8002254:	46bd      	mov	sp, r7
 8002256:	f85d 7b04 	ldr.w	r7, [sp], #4
 800225a:	4770      	bx	lr

0800225c <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 800225c:	b480      	push	{r7}
 800225e:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8002260:	bf00      	nop
 8002262:	46bd      	mov	sp, r7
 8002264:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002268:	4770      	bx	lr

0800226a <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 800226a:	b580      	push	{r7, lr}
 800226c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800226e:	f000 f96b 	bl	8002548 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8002272:	bf00      	nop
 8002274:	bd80      	pop	{r7, pc}
	...

08002278 <CAN1_RX0_IRQHandler>:

/**
  * @brief This function handles CAN1 RX0 interrupt.
  */
void CAN1_RX0_IRQHandler(void)
{
 8002278:	b580      	push	{r7, lr}
 800227a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN CAN1_RX0_IRQn 0 */

  /* USER CODE END CAN1_RX0_IRQn 0 */
  HAL_CAN_IRQHandler(&hcan1);
 800227c:	4802      	ldr	r0, [pc, #8]	@ (8002288 <CAN1_RX0_IRQHandler+0x10>)
 800227e:	f001 faba 	bl	80037f6 <HAL_CAN_IRQHandler>
  /* USER CODE BEGIN CAN1_RX0_IRQn 1 */

  /* USER CODE END CAN1_RX0_IRQn 1 */
}
 8002282:	bf00      	nop
 8002284:	bd80      	pop	{r7, pc}
 8002286:	bf00      	nop
 8002288:	200002a4 	.word	0x200002a4

0800228c <CAN1_RX1_IRQHandler>:

/**
  * @brief This function handles CAN1 RX1 interrupt.
  */
void CAN1_RX1_IRQHandler(void)
{
 800228c:	b580      	push	{r7, lr}
 800228e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN CAN1_RX1_IRQn 0 */

  /* USER CODE END CAN1_RX1_IRQn 0 */
  HAL_CAN_IRQHandler(&hcan1);
 8002290:	4802      	ldr	r0, [pc, #8]	@ (800229c <CAN1_RX1_IRQHandler+0x10>)
 8002292:	f001 fab0 	bl	80037f6 <HAL_CAN_IRQHandler>
  /* USER CODE BEGIN CAN1_RX1_IRQn 1 */

  /* USER CODE END CAN1_RX1_IRQn 1 */
}
 8002296:	bf00      	nop
 8002298:	bd80      	pop	{r7, pc}
 800229a:	bf00      	nop
 800229c:	200002a4 	.word	0x200002a4

080022a0 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80022a0:	b480      	push	{r7}
 80022a2:	af00      	add	r7, sp, #0
  return 1;
 80022a4:	2301      	movs	r3, #1
}
 80022a6:	4618      	mov	r0, r3
 80022a8:	46bd      	mov	sp, r7
 80022aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022ae:	4770      	bx	lr

080022b0 <_kill>:

int _kill(int pid, int sig)
{
 80022b0:	b580      	push	{r7, lr}
 80022b2:	b082      	sub	sp, #8
 80022b4:	af00      	add	r7, sp, #0
 80022b6:	6078      	str	r0, [r7, #4]
 80022b8:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 80022ba:	f004 f933 	bl	8006524 <__errno>
 80022be:	4603      	mov	r3, r0
 80022c0:	2216      	movs	r2, #22
 80022c2:	601a      	str	r2, [r3, #0]
  return -1;
 80022c4:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 80022c8:	4618      	mov	r0, r3
 80022ca:	3708      	adds	r7, #8
 80022cc:	46bd      	mov	sp, r7
 80022ce:	bd80      	pop	{r7, pc}

080022d0 <_exit>:

void _exit (int status)
{
 80022d0:	b580      	push	{r7, lr}
 80022d2:	b082      	sub	sp, #8
 80022d4:	af00      	add	r7, sp, #0
 80022d6:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 80022d8:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 80022dc:	6878      	ldr	r0, [r7, #4]
 80022de:	f7ff ffe7 	bl	80022b0 <_kill>
  while (1) {}    /* Make sure we hang here */
 80022e2:	bf00      	nop
 80022e4:	e7fd      	b.n	80022e2 <_exit+0x12>

080022e6 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80022e6:	b580      	push	{r7, lr}
 80022e8:	b086      	sub	sp, #24
 80022ea:	af00      	add	r7, sp, #0
 80022ec:	60f8      	str	r0, [r7, #12]
 80022ee:	60b9      	str	r1, [r7, #8]
 80022f0:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80022f2:	2300      	movs	r3, #0
 80022f4:	617b      	str	r3, [r7, #20]
 80022f6:	e00a      	b.n	800230e <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80022f8:	f3af 8000 	nop.w
 80022fc:	4601      	mov	r1, r0
 80022fe:	68bb      	ldr	r3, [r7, #8]
 8002300:	1c5a      	adds	r2, r3, #1
 8002302:	60ba      	str	r2, [r7, #8]
 8002304:	b2ca      	uxtb	r2, r1
 8002306:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002308:	697b      	ldr	r3, [r7, #20]
 800230a:	3301      	adds	r3, #1
 800230c:	617b      	str	r3, [r7, #20]
 800230e:	697a      	ldr	r2, [r7, #20]
 8002310:	687b      	ldr	r3, [r7, #4]
 8002312:	429a      	cmp	r2, r3
 8002314:	dbf0      	blt.n	80022f8 <_read+0x12>
  }

  return len;
 8002316:	687b      	ldr	r3, [r7, #4]
}
 8002318:	4618      	mov	r0, r3
 800231a:	3718      	adds	r7, #24
 800231c:	46bd      	mov	sp, r7
 800231e:	bd80      	pop	{r7, pc}

08002320 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002320:	b580      	push	{r7, lr}
 8002322:	b086      	sub	sp, #24
 8002324:	af00      	add	r7, sp, #0
 8002326:	60f8      	str	r0, [r7, #12]
 8002328:	60b9      	str	r1, [r7, #8]
 800232a:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800232c:	2300      	movs	r3, #0
 800232e:	617b      	str	r3, [r7, #20]
 8002330:	e009      	b.n	8002346 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8002332:	68bb      	ldr	r3, [r7, #8]
 8002334:	1c5a      	adds	r2, r3, #1
 8002336:	60ba      	str	r2, [r7, #8]
 8002338:	781b      	ldrb	r3, [r3, #0]
 800233a:	4618      	mov	r0, r3
 800233c:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002340:	697b      	ldr	r3, [r7, #20]
 8002342:	3301      	adds	r3, #1
 8002344:	617b      	str	r3, [r7, #20]
 8002346:	697a      	ldr	r2, [r7, #20]
 8002348:	687b      	ldr	r3, [r7, #4]
 800234a:	429a      	cmp	r2, r3
 800234c:	dbf1      	blt.n	8002332 <_write+0x12>
  }
  return len;
 800234e:	687b      	ldr	r3, [r7, #4]
}
 8002350:	4618      	mov	r0, r3
 8002352:	3718      	adds	r7, #24
 8002354:	46bd      	mov	sp, r7
 8002356:	bd80      	pop	{r7, pc}

08002358 <_close>:

int _close(int file)
{
 8002358:	b480      	push	{r7}
 800235a:	b083      	sub	sp, #12
 800235c:	af00      	add	r7, sp, #0
 800235e:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8002360:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 8002364:	4618      	mov	r0, r3
 8002366:	370c      	adds	r7, #12
 8002368:	46bd      	mov	sp, r7
 800236a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800236e:	4770      	bx	lr

08002370 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8002370:	b480      	push	{r7}
 8002372:	b083      	sub	sp, #12
 8002374:	af00      	add	r7, sp, #0
 8002376:	6078      	str	r0, [r7, #4]
 8002378:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 800237a:	683b      	ldr	r3, [r7, #0]
 800237c:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8002380:	605a      	str	r2, [r3, #4]
  return 0;
 8002382:	2300      	movs	r3, #0
}
 8002384:	4618      	mov	r0, r3
 8002386:	370c      	adds	r7, #12
 8002388:	46bd      	mov	sp, r7
 800238a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800238e:	4770      	bx	lr

08002390 <_isatty>:

int _isatty(int file)
{
 8002390:	b480      	push	{r7}
 8002392:	b083      	sub	sp, #12
 8002394:	af00      	add	r7, sp, #0
 8002396:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8002398:	2301      	movs	r3, #1
}
 800239a:	4618      	mov	r0, r3
 800239c:	370c      	adds	r7, #12
 800239e:	46bd      	mov	sp, r7
 80023a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023a4:	4770      	bx	lr

080023a6 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80023a6:	b480      	push	{r7}
 80023a8:	b085      	sub	sp, #20
 80023aa:	af00      	add	r7, sp, #0
 80023ac:	60f8      	str	r0, [r7, #12]
 80023ae:	60b9      	str	r1, [r7, #8]
 80023b0:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80023b2:	2300      	movs	r3, #0
}
 80023b4:	4618      	mov	r0, r3
 80023b6:	3714      	adds	r7, #20
 80023b8:	46bd      	mov	sp, r7
 80023ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023be:	4770      	bx	lr

080023c0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80023c0:	b580      	push	{r7, lr}
 80023c2:	b086      	sub	sp, #24
 80023c4:	af00      	add	r7, sp, #0
 80023c6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80023c8:	4a14      	ldr	r2, [pc, #80]	@ (800241c <_sbrk+0x5c>)
 80023ca:	4b15      	ldr	r3, [pc, #84]	@ (8002420 <_sbrk+0x60>)
 80023cc:	1ad3      	subs	r3, r2, r3
 80023ce:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80023d0:	697b      	ldr	r3, [r7, #20]
 80023d2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80023d4:	4b13      	ldr	r3, [pc, #76]	@ (8002424 <_sbrk+0x64>)
 80023d6:	681b      	ldr	r3, [r3, #0]
 80023d8:	2b00      	cmp	r3, #0
 80023da:	d102      	bne.n	80023e2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80023dc:	4b11      	ldr	r3, [pc, #68]	@ (8002424 <_sbrk+0x64>)
 80023de:	4a12      	ldr	r2, [pc, #72]	@ (8002428 <_sbrk+0x68>)
 80023e0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80023e2:	4b10      	ldr	r3, [pc, #64]	@ (8002424 <_sbrk+0x64>)
 80023e4:	681a      	ldr	r2, [r3, #0]
 80023e6:	687b      	ldr	r3, [r7, #4]
 80023e8:	4413      	add	r3, r2
 80023ea:	693a      	ldr	r2, [r7, #16]
 80023ec:	429a      	cmp	r2, r3
 80023ee:	d207      	bcs.n	8002400 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80023f0:	f004 f898 	bl	8006524 <__errno>
 80023f4:	4603      	mov	r3, r0
 80023f6:	220c      	movs	r2, #12
 80023f8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80023fa:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 80023fe:	e009      	b.n	8002414 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002400:	4b08      	ldr	r3, [pc, #32]	@ (8002424 <_sbrk+0x64>)
 8002402:	681b      	ldr	r3, [r3, #0]
 8002404:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8002406:	4b07      	ldr	r3, [pc, #28]	@ (8002424 <_sbrk+0x64>)
 8002408:	681a      	ldr	r2, [r3, #0]
 800240a:	687b      	ldr	r3, [r7, #4]
 800240c:	4413      	add	r3, r2
 800240e:	4a05      	ldr	r2, [pc, #20]	@ (8002424 <_sbrk+0x64>)
 8002410:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8002412:	68fb      	ldr	r3, [r7, #12]
}
 8002414:	4618      	mov	r0, r3
 8002416:	3718      	adds	r7, #24
 8002418:	46bd      	mov	sp, r7
 800241a:	bd80      	pop	{r7, pc}
 800241c:	20020000 	.word	0x20020000
 8002420:	00000400 	.word	0x00000400
 8002424:	20000368 	.word	0x20000368
 8002428:	200004c0 	.word	0x200004c0

0800242c <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 800242c:	b480      	push	{r7}
 800242e:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8002430:	4b06      	ldr	r3, [pc, #24]	@ (800244c <SystemInit+0x20>)
 8002432:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8002436:	4a05      	ldr	r2, [pc, #20]	@ (800244c <SystemInit+0x20>)
 8002438:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 800243c:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8002440:	bf00      	nop
 8002442:	46bd      	mov	sp, r7
 8002444:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002448:	4770      	bx	lr
 800244a:	bf00      	nop
 800244c:	e000ed00 	.word	0xe000ed00

08002450 <Reset_Handler>:
 8002450:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8002488 <LoopFillZerobss+0xe>
 8002454:	f7ff ffea 	bl	800242c <SystemInit>
 8002458:	480c      	ldr	r0, [pc, #48]	@ (800248c <LoopFillZerobss+0x12>)
 800245a:	490d      	ldr	r1, [pc, #52]	@ (8002490 <LoopFillZerobss+0x16>)
 800245c:	4a0d      	ldr	r2, [pc, #52]	@ (8002494 <LoopFillZerobss+0x1a>)
 800245e:	2300      	movs	r3, #0
 8002460:	e002      	b.n	8002468 <LoopCopyDataInit>

08002462 <CopyDataInit>:
 8002462:	58d4      	ldr	r4, [r2, r3]
 8002464:	50c4      	str	r4, [r0, r3]
 8002466:	3304      	adds	r3, #4

08002468 <LoopCopyDataInit>:
 8002468:	18c4      	adds	r4, r0, r3
 800246a:	428c      	cmp	r4, r1
 800246c:	d3f9      	bcc.n	8002462 <CopyDataInit>
 800246e:	4a0a      	ldr	r2, [pc, #40]	@ (8002498 <LoopFillZerobss+0x1e>)
 8002470:	4c0a      	ldr	r4, [pc, #40]	@ (800249c <LoopFillZerobss+0x22>)
 8002472:	2300      	movs	r3, #0
 8002474:	e001      	b.n	800247a <LoopFillZerobss>

08002476 <FillZerobss>:
 8002476:	6013      	str	r3, [r2, #0]
 8002478:	3204      	adds	r2, #4

0800247a <LoopFillZerobss>:
 800247a:	42a2      	cmp	r2, r4
 800247c:	d3fb      	bcc.n	8002476 <FillZerobss>
 800247e:	f004 f857 	bl	8006530 <__libc_init_array>
 8002482:	f7ff fb65 	bl	8001b50 <main>
 8002486:	4770      	bx	lr
 8002488:	20020000 	.word	0x20020000
 800248c:	20000000 	.word	0x20000000
 8002490:	200001d4 	.word	0x200001d4
 8002494:	08008a98 	.word	0x08008a98
 8002498:	200001d4 	.word	0x200001d4
 800249c:	200004bc 	.word	0x200004bc

080024a0 <ADC_IRQHandler>:
 80024a0:	e7fe      	b.n	80024a0 <ADC_IRQHandler>
	...

080024a4 <HAL_Init>:
 80024a4:	b580      	push	{r7, lr}
 80024a6:	af00      	add	r7, sp, #0
 80024a8:	4b0e      	ldr	r3, [pc, #56]	@ (80024e4 <HAL_Init+0x40>)
 80024aa:	681b      	ldr	r3, [r3, #0]
 80024ac:	4a0d      	ldr	r2, [pc, #52]	@ (80024e4 <HAL_Init+0x40>)
 80024ae:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80024b2:	6013      	str	r3, [r2, #0]
 80024b4:	4b0b      	ldr	r3, [pc, #44]	@ (80024e4 <HAL_Init+0x40>)
 80024b6:	681b      	ldr	r3, [r3, #0]
 80024b8:	4a0a      	ldr	r2, [pc, #40]	@ (80024e4 <HAL_Init+0x40>)
 80024ba:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80024be:	6013      	str	r3, [r2, #0]
 80024c0:	4b08      	ldr	r3, [pc, #32]	@ (80024e4 <HAL_Init+0x40>)
 80024c2:	681b      	ldr	r3, [r3, #0]
 80024c4:	4a07      	ldr	r2, [pc, #28]	@ (80024e4 <HAL_Init+0x40>)
 80024c6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80024ca:	6013      	str	r3, [r2, #0]
 80024cc:	2003      	movs	r0, #3
 80024ce:	f001 fc91 	bl	8003df4 <HAL_NVIC_SetPriorityGrouping>
 80024d2:	2000      	movs	r0, #0
 80024d4:	f000 f808 	bl	80024e8 <HAL_InitTick>
 80024d8:	f7ff fd2e 	bl	8001f38 <HAL_MspInit>
 80024dc:	2300      	movs	r3, #0
 80024de:	4618      	mov	r0, r3
 80024e0:	bd80      	pop	{r7, pc}
 80024e2:	bf00      	nop
 80024e4:	40023c00 	.word	0x40023c00

080024e8 <HAL_InitTick>:
 80024e8:	b580      	push	{r7, lr}
 80024ea:	b082      	sub	sp, #8
 80024ec:	af00      	add	r7, sp, #0
 80024ee:	6078      	str	r0, [r7, #4]
 80024f0:	4b12      	ldr	r3, [pc, #72]	@ (800253c <HAL_InitTick+0x54>)
 80024f2:	681a      	ldr	r2, [r3, #0]
 80024f4:	4b12      	ldr	r3, [pc, #72]	@ (8002540 <HAL_InitTick+0x58>)
 80024f6:	781b      	ldrb	r3, [r3, #0]
 80024f8:	4619      	mov	r1, r3
 80024fa:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80024fe:	fbb3 f3f1 	udiv	r3, r3, r1
 8002502:	fbb2 f3f3 	udiv	r3, r2, r3
 8002506:	4618      	mov	r0, r3
 8002508:	f001 fca9 	bl	8003e5e <HAL_SYSTICK_Config>
 800250c:	4603      	mov	r3, r0
 800250e:	2b00      	cmp	r3, #0
 8002510:	d001      	beq.n	8002516 <HAL_InitTick+0x2e>
 8002512:	2301      	movs	r3, #1
 8002514:	e00e      	b.n	8002534 <HAL_InitTick+0x4c>
 8002516:	687b      	ldr	r3, [r7, #4]
 8002518:	2b0f      	cmp	r3, #15
 800251a:	d80a      	bhi.n	8002532 <HAL_InitTick+0x4a>
 800251c:	2200      	movs	r2, #0
 800251e:	6879      	ldr	r1, [r7, #4]
 8002520:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8002524:	f001 fc71 	bl	8003e0a <HAL_NVIC_SetPriority>
 8002528:	4a06      	ldr	r2, [pc, #24]	@ (8002544 <HAL_InitTick+0x5c>)
 800252a:	687b      	ldr	r3, [r7, #4]
 800252c:	6013      	str	r3, [r2, #0]
 800252e:	2300      	movs	r3, #0
 8002530:	e000      	b.n	8002534 <HAL_InitTick+0x4c>
 8002532:	2301      	movs	r3, #1
 8002534:	4618      	mov	r0, r3
 8002536:	3708      	adds	r7, #8
 8002538:	46bd      	mov	sp, r7
 800253a:	bd80      	pop	{r7, pc}
 800253c:	20000000 	.word	0x20000000
 8002540:	20000008 	.word	0x20000008
 8002544:	20000004 	.word	0x20000004

08002548 <HAL_IncTick>:
 8002548:	b480      	push	{r7}
 800254a:	af00      	add	r7, sp, #0
 800254c:	4b06      	ldr	r3, [pc, #24]	@ (8002568 <HAL_IncTick+0x20>)
 800254e:	781b      	ldrb	r3, [r3, #0]
 8002550:	461a      	mov	r2, r3
 8002552:	4b06      	ldr	r3, [pc, #24]	@ (800256c <HAL_IncTick+0x24>)
 8002554:	681b      	ldr	r3, [r3, #0]
 8002556:	4413      	add	r3, r2
 8002558:	4a04      	ldr	r2, [pc, #16]	@ (800256c <HAL_IncTick+0x24>)
 800255a:	6013      	str	r3, [r2, #0]
 800255c:	bf00      	nop
 800255e:	46bd      	mov	sp, r7
 8002560:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002564:	4770      	bx	lr
 8002566:	bf00      	nop
 8002568:	20000008 	.word	0x20000008
 800256c:	2000036c 	.word	0x2000036c

08002570 <HAL_GetTick>:
 8002570:	b480      	push	{r7}
 8002572:	af00      	add	r7, sp, #0
 8002574:	4b03      	ldr	r3, [pc, #12]	@ (8002584 <HAL_GetTick+0x14>)
 8002576:	681b      	ldr	r3, [r3, #0]
 8002578:	4618      	mov	r0, r3
 800257a:	46bd      	mov	sp, r7
 800257c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002580:	4770      	bx	lr
 8002582:	bf00      	nop
 8002584:	2000036c 	.word	0x2000036c

08002588 <HAL_Delay>:
 8002588:	b580      	push	{r7, lr}
 800258a:	b084      	sub	sp, #16
 800258c:	af00      	add	r7, sp, #0
 800258e:	6078      	str	r0, [r7, #4]
 8002590:	f7ff ffee 	bl	8002570 <HAL_GetTick>
 8002594:	60b8      	str	r0, [r7, #8]
 8002596:	687b      	ldr	r3, [r7, #4]
 8002598:	60fb      	str	r3, [r7, #12]
 800259a:	68fb      	ldr	r3, [r7, #12]
 800259c:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 80025a0:	d005      	beq.n	80025ae <HAL_Delay+0x26>
 80025a2:	4b0a      	ldr	r3, [pc, #40]	@ (80025cc <HAL_Delay+0x44>)
 80025a4:	781b      	ldrb	r3, [r3, #0]
 80025a6:	461a      	mov	r2, r3
 80025a8:	68fb      	ldr	r3, [r7, #12]
 80025aa:	4413      	add	r3, r2
 80025ac:	60fb      	str	r3, [r7, #12]
 80025ae:	bf00      	nop
 80025b0:	f7ff ffde 	bl	8002570 <HAL_GetTick>
 80025b4:	4602      	mov	r2, r0
 80025b6:	68bb      	ldr	r3, [r7, #8]
 80025b8:	1ad3      	subs	r3, r2, r3
 80025ba:	68fa      	ldr	r2, [r7, #12]
 80025bc:	429a      	cmp	r2, r3
 80025be:	d8f7      	bhi.n	80025b0 <HAL_Delay+0x28>
 80025c0:	bf00      	nop
 80025c2:	bf00      	nop
 80025c4:	3710      	adds	r7, #16
 80025c6:	46bd      	mov	sp, r7
 80025c8:	bd80      	pop	{r7, pc}
 80025ca:	bf00      	nop
 80025cc:	20000008 	.word	0x20000008

080025d0 <HAL_ADC_Init>:
 80025d0:	b580      	push	{r7, lr}
 80025d2:	b084      	sub	sp, #16
 80025d4:	af00      	add	r7, sp, #0
 80025d6:	6078      	str	r0, [r7, #4]
 80025d8:	2300      	movs	r3, #0
 80025da:	73fb      	strb	r3, [r7, #15]
 80025dc:	687b      	ldr	r3, [r7, #4]
 80025de:	2b00      	cmp	r3, #0
 80025e0:	d101      	bne.n	80025e6 <HAL_ADC_Init+0x16>
 80025e2:	2301      	movs	r3, #1
 80025e4:	e033      	b.n	800264e <HAL_ADC_Init+0x7e>
 80025e6:	687b      	ldr	r3, [r7, #4]
 80025e8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80025ea:	2b00      	cmp	r3, #0
 80025ec:	d109      	bne.n	8002602 <HAL_ADC_Init+0x32>
 80025ee:	6878      	ldr	r0, [r7, #4]
 80025f0:	f7ff fcca 	bl	8001f88 <HAL_ADC_MspInit>
 80025f4:	687b      	ldr	r3, [r7, #4]
 80025f6:	2200      	movs	r2, #0
 80025f8:	645a      	str	r2, [r3, #68]	@ 0x44
 80025fa:	687b      	ldr	r3, [r7, #4]
 80025fc:	2200      	movs	r2, #0
 80025fe:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002602:	687b      	ldr	r3, [r7, #4]
 8002604:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002606:	f003 0310 	and.w	r3, r3, #16
 800260a:	2b00      	cmp	r3, #0
 800260c:	d118      	bne.n	8002640 <HAL_ADC_Init+0x70>
 800260e:	687b      	ldr	r3, [r7, #4]
 8002610:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002612:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8002616:	f023 0302 	bic.w	r3, r3, #2
 800261a:	f043 0202 	orr.w	r2, r3, #2
 800261e:	687b      	ldr	r3, [r7, #4]
 8002620:	641a      	str	r2, [r3, #64]	@ 0x40
 8002622:	6878      	ldr	r0, [r7, #4]
 8002624:	f000 fab4 	bl	8002b90 <ADC_Init>
 8002628:	687b      	ldr	r3, [r7, #4]
 800262a:	2200      	movs	r2, #0
 800262c:	645a      	str	r2, [r3, #68]	@ 0x44
 800262e:	687b      	ldr	r3, [r7, #4]
 8002630:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002632:	f023 0303 	bic.w	r3, r3, #3
 8002636:	f043 0201 	orr.w	r2, r3, #1
 800263a:	687b      	ldr	r3, [r7, #4]
 800263c:	641a      	str	r2, [r3, #64]	@ 0x40
 800263e:	e001      	b.n	8002644 <HAL_ADC_Init+0x74>
 8002640:	2301      	movs	r3, #1
 8002642:	73fb      	strb	r3, [r7, #15]
 8002644:	687b      	ldr	r3, [r7, #4]
 8002646:	2200      	movs	r2, #0
 8002648:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800264c:	7bfb      	ldrb	r3, [r7, #15]
 800264e:	4618      	mov	r0, r3
 8002650:	3710      	adds	r7, #16
 8002652:	46bd      	mov	sp, r7
 8002654:	bd80      	pop	{r7, pc}
	...

08002658 <HAL_ADC_Start>:
 8002658:	b480      	push	{r7}
 800265a:	b085      	sub	sp, #20
 800265c:	af00      	add	r7, sp, #0
 800265e:	6078      	str	r0, [r7, #4]
 8002660:	2300      	movs	r3, #0
 8002662:	60bb      	str	r3, [r7, #8]
 8002664:	687b      	ldr	r3, [r7, #4]
 8002666:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800266a:	2b01      	cmp	r3, #1
 800266c:	d101      	bne.n	8002672 <HAL_ADC_Start+0x1a>
 800266e:	2302      	movs	r3, #2
 8002670:	e0b2      	b.n	80027d8 <HAL_ADC_Start+0x180>
 8002672:	687b      	ldr	r3, [r7, #4]
 8002674:	2201      	movs	r2, #1
 8002676:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800267a:	687b      	ldr	r3, [r7, #4]
 800267c:	681b      	ldr	r3, [r3, #0]
 800267e:	689b      	ldr	r3, [r3, #8]
 8002680:	f003 0301 	and.w	r3, r3, #1
 8002684:	2b01      	cmp	r3, #1
 8002686:	d018      	beq.n	80026ba <HAL_ADC_Start+0x62>
 8002688:	687b      	ldr	r3, [r7, #4]
 800268a:	681b      	ldr	r3, [r3, #0]
 800268c:	689a      	ldr	r2, [r3, #8]
 800268e:	687b      	ldr	r3, [r7, #4]
 8002690:	681b      	ldr	r3, [r3, #0]
 8002692:	f042 0201 	orr.w	r2, r2, #1
 8002696:	609a      	str	r2, [r3, #8]
 8002698:	4b52      	ldr	r3, [pc, #328]	@ (80027e4 <HAL_ADC_Start+0x18c>)
 800269a:	681b      	ldr	r3, [r3, #0]
 800269c:	4a52      	ldr	r2, [pc, #328]	@ (80027e8 <HAL_ADC_Start+0x190>)
 800269e:	fba2 2303 	umull	r2, r3, r2, r3
 80026a2:	0c9a      	lsrs	r2, r3, #18
 80026a4:	4613      	mov	r3, r2
 80026a6:	005b      	lsls	r3, r3, #1
 80026a8:	4413      	add	r3, r2
 80026aa:	60bb      	str	r3, [r7, #8]
 80026ac:	e002      	b.n	80026b4 <HAL_ADC_Start+0x5c>
 80026ae:	68bb      	ldr	r3, [r7, #8]
 80026b0:	3b01      	subs	r3, #1
 80026b2:	60bb      	str	r3, [r7, #8]
 80026b4:	68bb      	ldr	r3, [r7, #8]
 80026b6:	2b00      	cmp	r3, #0
 80026b8:	d1f9      	bne.n	80026ae <HAL_ADC_Start+0x56>
 80026ba:	687b      	ldr	r3, [r7, #4]
 80026bc:	681b      	ldr	r3, [r3, #0]
 80026be:	689b      	ldr	r3, [r3, #8]
 80026c0:	f003 0301 	and.w	r3, r3, #1
 80026c4:	2b01      	cmp	r3, #1
 80026c6:	d17a      	bne.n	80027be <HAL_ADC_Start+0x166>
 80026c8:	687b      	ldr	r3, [r7, #4]
 80026ca:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80026cc:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
 80026d0:	f023 0301 	bic.w	r3, r3, #1
 80026d4:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 80026d8:	687b      	ldr	r3, [r7, #4]
 80026da:	641a      	str	r2, [r3, #64]	@ 0x40
 80026dc:	687b      	ldr	r3, [r7, #4]
 80026de:	681b      	ldr	r3, [r3, #0]
 80026e0:	685b      	ldr	r3, [r3, #4]
 80026e2:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80026e6:	2b00      	cmp	r3, #0
 80026e8:	d007      	beq.n	80026fa <HAL_ADC_Start+0xa2>
 80026ea:	687b      	ldr	r3, [r7, #4]
 80026ec:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80026ee:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 80026f2:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 80026f6:	687b      	ldr	r3, [r7, #4]
 80026f8:	641a      	str	r2, [r3, #64]	@ 0x40
 80026fa:	687b      	ldr	r3, [r7, #4]
 80026fc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80026fe:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002702:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8002706:	d106      	bne.n	8002716 <HAL_ADC_Start+0xbe>
 8002708:	687b      	ldr	r3, [r7, #4]
 800270a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800270c:	f023 0206 	bic.w	r2, r3, #6
 8002710:	687b      	ldr	r3, [r7, #4]
 8002712:	645a      	str	r2, [r3, #68]	@ 0x44
 8002714:	e002      	b.n	800271c <HAL_ADC_Start+0xc4>
 8002716:	687b      	ldr	r3, [r7, #4]
 8002718:	2200      	movs	r2, #0
 800271a:	645a      	str	r2, [r3, #68]	@ 0x44
 800271c:	687b      	ldr	r3, [r7, #4]
 800271e:	2200      	movs	r2, #0
 8002720:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002724:	4b31      	ldr	r3, [pc, #196]	@ (80027ec <HAL_ADC_Start+0x194>)
 8002726:	60fb      	str	r3, [r7, #12]
 8002728:	687b      	ldr	r3, [r7, #4]
 800272a:	681b      	ldr	r3, [r3, #0]
 800272c:	f06f 0222 	mvn.w	r2, #34	@ 0x22
 8002730:	601a      	str	r2, [r3, #0]
 8002732:	68fb      	ldr	r3, [r7, #12]
 8002734:	685b      	ldr	r3, [r3, #4]
 8002736:	f003 031f 	and.w	r3, r3, #31
 800273a:	2b00      	cmp	r3, #0
 800273c:	d12a      	bne.n	8002794 <HAL_ADC_Start+0x13c>
 800273e:	687b      	ldr	r3, [r7, #4]
 8002740:	681b      	ldr	r3, [r3, #0]
 8002742:	4a2b      	ldr	r2, [pc, #172]	@ (80027f0 <HAL_ADC_Start+0x198>)
 8002744:	4293      	cmp	r3, r2
 8002746:	d015      	beq.n	8002774 <HAL_ADC_Start+0x11c>
 8002748:	687b      	ldr	r3, [r7, #4]
 800274a:	681b      	ldr	r3, [r3, #0]
 800274c:	4a29      	ldr	r2, [pc, #164]	@ (80027f4 <HAL_ADC_Start+0x19c>)
 800274e:	4293      	cmp	r3, r2
 8002750:	d105      	bne.n	800275e <HAL_ADC_Start+0x106>
 8002752:	4b26      	ldr	r3, [pc, #152]	@ (80027ec <HAL_ADC_Start+0x194>)
 8002754:	685b      	ldr	r3, [r3, #4]
 8002756:	f003 031f 	and.w	r3, r3, #31
 800275a:	2b00      	cmp	r3, #0
 800275c:	d00a      	beq.n	8002774 <HAL_ADC_Start+0x11c>
 800275e:	687b      	ldr	r3, [r7, #4]
 8002760:	681b      	ldr	r3, [r3, #0]
 8002762:	4a25      	ldr	r2, [pc, #148]	@ (80027f8 <HAL_ADC_Start+0x1a0>)
 8002764:	4293      	cmp	r3, r2
 8002766:	d136      	bne.n	80027d6 <HAL_ADC_Start+0x17e>
 8002768:	4b20      	ldr	r3, [pc, #128]	@ (80027ec <HAL_ADC_Start+0x194>)
 800276a:	685b      	ldr	r3, [r3, #4]
 800276c:	f003 0310 	and.w	r3, r3, #16
 8002770:	2b00      	cmp	r3, #0
 8002772:	d130      	bne.n	80027d6 <HAL_ADC_Start+0x17e>
 8002774:	687b      	ldr	r3, [r7, #4]
 8002776:	681b      	ldr	r3, [r3, #0]
 8002778:	689b      	ldr	r3, [r3, #8]
 800277a:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 800277e:	2b00      	cmp	r3, #0
 8002780:	d129      	bne.n	80027d6 <HAL_ADC_Start+0x17e>
 8002782:	687b      	ldr	r3, [r7, #4]
 8002784:	681b      	ldr	r3, [r3, #0]
 8002786:	689a      	ldr	r2, [r3, #8]
 8002788:	687b      	ldr	r3, [r7, #4]
 800278a:	681b      	ldr	r3, [r3, #0]
 800278c:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8002790:	609a      	str	r2, [r3, #8]
 8002792:	e020      	b.n	80027d6 <HAL_ADC_Start+0x17e>
 8002794:	687b      	ldr	r3, [r7, #4]
 8002796:	681b      	ldr	r3, [r3, #0]
 8002798:	4a15      	ldr	r2, [pc, #84]	@ (80027f0 <HAL_ADC_Start+0x198>)
 800279a:	4293      	cmp	r3, r2
 800279c:	d11b      	bne.n	80027d6 <HAL_ADC_Start+0x17e>
 800279e:	687b      	ldr	r3, [r7, #4]
 80027a0:	681b      	ldr	r3, [r3, #0]
 80027a2:	689b      	ldr	r3, [r3, #8]
 80027a4:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 80027a8:	2b00      	cmp	r3, #0
 80027aa:	d114      	bne.n	80027d6 <HAL_ADC_Start+0x17e>
 80027ac:	687b      	ldr	r3, [r7, #4]
 80027ae:	681b      	ldr	r3, [r3, #0]
 80027b0:	689a      	ldr	r2, [r3, #8]
 80027b2:	687b      	ldr	r3, [r7, #4]
 80027b4:	681b      	ldr	r3, [r3, #0]
 80027b6:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 80027ba:	609a      	str	r2, [r3, #8]
 80027bc:	e00b      	b.n	80027d6 <HAL_ADC_Start+0x17e>
 80027be:	687b      	ldr	r3, [r7, #4]
 80027c0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80027c2:	f043 0210 	orr.w	r2, r3, #16
 80027c6:	687b      	ldr	r3, [r7, #4]
 80027c8:	641a      	str	r2, [r3, #64]	@ 0x40
 80027ca:	687b      	ldr	r3, [r7, #4]
 80027cc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80027ce:	f043 0201 	orr.w	r2, r3, #1
 80027d2:	687b      	ldr	r3, [r7, #4]
 80027d4:	645a      	str	r2, [r3, #68]	@ 0x44
 80027d6:	2300      	movs	r3, #0
 80027d8:	4618      	mov	r0, r3
 80027da:	3714      	adds	r7, #20
 80027dc:	46bd      	mov	sp, r7
 80027de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80027e2:	4770      	bx	lr
 80027e4:	20000000 	.word	0x20000000
 80027e8:	431bde83 	.word	0x431bde83
 80027ec:	40012300 	.word	0x40012300
 80027f0:	40012000 	.word	0x40012000
 80027f4:	40012100 	.word	0x40012100
 80027f8:	40012200 	.word	0x40012200

080027fc <HAL_ADC_PollForConversion>:
 80027fc:	b580      	push	{r7, lr}
 80027fe:	b084      	sub	sp, #16
 8002800:	af00      	add	r7, sp, #0
 8002802:	6078      	str	r0, [r7, #4]
 8002804:	6039      	str	r1, [r7, #0]
 8002806:	2300      	movs	r3, #0
 8002808:	60fb      	str	r3, [r7, #12]
 800280a:	687b      	ldr	r3, [r7, #4]
 800280c:	681b      	ldr	r3, [r3, #0]
 800280e:	689b      	ldr	r3, [r3, #8]
 8002810:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002814:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8002818:	d113      	bne.n	8002842 <HAL_ADC_PollForConversion+0x46>
 800281a:	687b      	ldr	r3, [r7, #4]
 800281c:	681b      	ldr	r3, [r3, #0]
 800281e:	689b      	ldr	r3, [r3, #8]
 8002820:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002824:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8002828:	d10b      	bne.n	8002842 <HAL_ADC_PollForConversion+0x46>
 800282a:	687b      	ldr	r3, [r7, #4]
 800282c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800282e:	f043 0220 	orr.w	r2, r3, #32
 8002832:	687b      	ldr	r3, [r7, #4]
 8002834:	641a      	str	r2, [r3, #64]	@ 0x40
 8002836:	687b      	ldr	r3, [r7, #4]
 8002838:	2200      	movs	r2, #0
 800283a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800283e:	2301      	movs	r3, #1
 8002840:	e063      	b.n	800290a <HAL_ADC_PollForConversion+0x10e>
 8002842:	f7ff fe95 	bl	8002570 <HAL_GetTick>
 8002846:	60f8      	str	r0, [r7, #12]
 8002848:	e021      	b.n	800288e <HAL_ADC_PollForConversion+0x92>
 800284a:	683b      	ldr	r3, [r7, #0]
 800284c:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 8002850:	d01d      	beq.n	800288e <HAL_ADC_PollForConversion+0x92>
 8002852:	683b      	ldr	r3, [r7, #0]
 8002854:	2b00      	cmp	r3, #0
 8002856:	d007      	beq.n	8002868 <HAL_ADC_PollForConversion+0x6c>
 8002858:	f7ff fe8a 	bl	8002570 <HAL_GetTick>
 800285c:	4602      	mov	r2, r0
 800285e:	68fb      	ldr	r3, [r7, #12]
 8002860:	1ad3      	subs	r3, r2, r3
 8002862:	683a      	ldr	r2, [r7, #0]
 8002864:	429a      	cmp	r2, r3
 8002866:	d212      	bcs.n	800288e <HAL_ADC_PollForConversion+0x92>
 8002868:	687b      	ldr	r3, [r7, #4]
 800286a:	681b      	ldr	r3, [r3, #0]
 800286c:	681b      	ldr	r3, [r3, #0]
 800286e:	f003 0302 	and.w	r3, r3, #2
 8002872:	2b02      	cmp	r3, #2
 8002874:	d00b      	beq.n	800288e <HAL_ADC_PollForConversion+0x92>
 8002876:	687b      	ldr	r3, [r7, #4]
 8002878:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800287a:	f043 0204 	orr.w	r2, r3, #4
 800287e:	687b      	ldr	r3, [r7, #4]
 8002880:	641a      	str	r2, [r3, #64]	@ 0x40
 8002882:	687b      	ldr	r3, [r7, #4]
 8002884:	2200      	movs	r2, #0
 8002886:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800288a:	2303      	movs	r3, #3
 800288c:	e03d      	b.n	800290a <HAL_ADC_PollForConversion+0x10e>
 800288e:	687b      	ldr	r3, [r7, #4]
 8002890:	681b      	ldr	r3, [r3, #0]
 8002892:	681b      	ldr	r3, [r3, #0]
 8002894:	f003 0302 	and.w	r3, r3, #2
 8002898:	2b02      	cmp	r3, #2
 800289a:	d1d6      	bne.n	800284a <HAL_ADC_PollForConversion+0x4e>
 800289c:	687b      	ldr	r3, [r7, #4]
 800289e:	681b      	ldr	r3, [r3, #0]
 80028a0:	f06f 0212 	mvn.w	r2, #18
 80028a4:	601a      	str	r2, [r3, #0]
 80028a6:	687b      	ldr	r3, [r7, #4]
 80028a8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80028aa:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 80028ae:	687b      	ldr	r3, [r7, #4]
 80028b0:	641a      	str	r2, [r3, #64]	@ 0x40
 80028b2:	687b      	ldr	r3, [r7, #4]
 80028b4:	681b      	ldr	r3, [r3, #0]
 80028b6:	689b      	ldr	r3, [r3, #8]
 80028b8:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 80028bc:	2b00      	cmp	r3, #0
 80028be:	d123      	bne.n	8002908 <HAL_ADC_PollForConversion+0x10c>
 80028c0:	687b      	ldr	r3, [r7, #4]
 80028c2:	7e1b      	ldrb	r3, [r3, #24]
 80028c4:	2b00      	cmp	r3, #0
 80028c6:	d11f      	bne.n	8002908 <HAL_ADC_PollForConversion+0x10c>
 80028c8:	687b      	ldr	r3, [r7, #4]
 80028ca:	681b      	ldr	r3, [r3, #0]
 80028cc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80028ce:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
 80028d2:	2b00      	cmp	r3, #0
 80028d4:	d006      	beq.n	80028e4 <HAL_ADC_PollForConversion+0xe8>
 80028d6:	687b      	ldr	r3, [r7, #4]
 80028d8:	681b      	ldr	r3, [r3, #0]
 80028da:	689b      	ldr	r3, [r3, #8]
 80028dc:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80028e0:	2b00      	cmp	r3, #0
 80028e2:	d111      	bne.n	8002908 <HAL_ADC_PollForConversion+0x10c>
 80028e4:	687b      	ldr	r3, [r7, #4]
 80028e6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80028e8:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 80028ec:	687b      	ldr	r3, [r7, #4]
 80028ee:	641a      	str	r2, [r3, #64]	@ 0x40
 80028f0:	687b      	ldr	r3, [r7, #4]
 80028f2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80028f4:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80028f8:	2b00      	cmp	r3, #0
 80028fa:	d105      	bne.n	8002908 <HAL_ADC_PollForConversion+0x10c>
 80028fc:	687b      	ldr	r3, [r7, #4]
 80028fe:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002900:	f043 0201 	orr.w	r2, r3, #1
 8002904:	687b      	ldr	r3, [r7, #4]
 8002906:	641a      	str	r2, [r3, #64]	@ 0x40
 8002908:	2300      	movs	r3, #0
 800290a:	4618      	mov	r0, r3
 800290c:	3710      	adds	r7, #16
 800290e:	46bd      	mov	sp, r7
 8002910:	bd80      	pop	{r7, pc}

08002912 <HAL_ADC_GetValue>:
 8002912:	b480      	push	{r7}
 8002914:	b083      	sub	sp, #12
 8002916:	af00      	add	r7, sp, #0
 8002918:	6078      	str	r0, [r7, #4]
 800291a:	687b      	ldr	r3, [r7, #4]
 800291c:	681b      	ldr	r3, [r3, #0]
 800291e:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8002920:	4618      	mov	r0, r3
 8002922:	370c      	adds	r7, #12
 8002924:	46bd      	mov	sp, r7
 8002926:	f85d 7b04 	ldr.w	r7, [sp], #4
 800292a:	4770      	bx	lr

0800292c <HAL_ADC_ConfigChannel>:
 800292c:	b480      	push	{r7}
 800292e:	b085      	sub	sp, #20
 8002930:	af00      	add	r7, sp, #0
 8002932:	6078      	str	r0, [r7, #4]
 8002934:	6039      	str	r1, [r7, #0]
 8002936:	2300      	movs	r3, #0
 8002938:	60bb      	str	r3, [r7, #8]
 800293a:	687b      	ldr	r3, [r7, #4]
 800293c:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002940:	2b01      	cmp	r3, #1
 8002942:	d101      	bne.n	8002948 <HAL_ADC_ConfigChannel+0x1c>
 8002944:	2302      	movs	r3, #2
 8002946:	e113      	b.n	8002b70 <HAL_ADC_ConfigChannel+0x244>
 8002948:	687b      	ldr	r3, [r7, #4]
 800294a:	2201      	movs	r2, #1
 800294c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002950:	683b      	ldr	r3, [r7, #0]
 8002952:	681b      	ldr	r3, [r3, #0]
 8002954:	2b09      	cmp	r3, #9
 8002956:	d925      	bls.n	80029a4 <HAL_ADC_ConfigChannel+0x78>
 8002958:	687b      	ldr	r3, [r7, #4]
 800295a:	681b      	ldr	r3, [r3, #0]
 800295c:	68d9      	ldr	r1, [r3, #12]
 800295e:	683b      	ldr	r3, [r7, #0]
 8002960:	681b      	ldr	r3, [r3, #0]
 8002962:	b29b      	uxth	r3, r3
 8002964:	461a      	mov	r2, r3
 8002966:	4613      	mov	r3, r2
 8002968:	005b      	lsls	r3, r3, #1
 800296a:	4413      	add	r3, r2
 800296c:	3b1e      	subs	r3, #30
 800296e:	2207      	movs	r2, #7
 8002970:	fa02 f303 	lsl.w	r3, r2, r3
 8002974:	43da      	mvns	r2, r3
 8002976:	687b      	ldr	r3, [r7, #4]
 8002978:	681b      	ldr	r3, [r3, #0]
 800297a:	400a      	ands	r2, r1
 800297c:	60da      	str	r2, [r3, #12]
 800297e:	687b      	ldr	r3, [r7, #4]
 8002980:	681b      	ldr	r3, [r3, #0]
 8002982:	68d9      	ldr	r1, [r3, #12]
 8002984:	683b      	ldr	r3, [r7, #0]
 8002986:	689a      	ldr	r2, [r3, #8]
 8002988:	683b      	ldr	r3, [r7, #0]
 800298a:	681b      	ldr	r3, [r3, #0]
 800298c:	b29b      	uxth	r3, r3
 800298e:	4618      	mov	r0, r3
 8002990:	4603      	mov	r3, r0
 8002992:	005b      	lsls	r3, r3, #1
 8002994:	4403      	add	r3, r0
 8002996:	3b1e      	subs	r3, #30
 8002998:	409a      	lsls	r2, r3
 800299a:	687b      	ldr	r3, [r7, #4]
 800299c:	681b      	ldr	r3, [r3, #0]
 800299e:	430a      	orrs	r2, r1
 80029a0:	60da      	str	r2, [r3, #12]
 80029a2:	e022      	b.n	80029ea <HAL_ADC_ConfigChannel+0xbe>
 80029a4:	687b      	ldr	r3, [r7, #4]
 80029a6:	681b      	ldr	r3, [r3, #0]
 80029a8:	6919      	ldr	r1, [r3, #16]
 80029aa:	683b      	ldr	r3, [r7, #0]
 80029ac:	681b      	ldr	r3, [r3, #0]
 80029ae:	b29b      	uxth	r3, r3
 80029b0:	461a      	mov	r2, r3
 80029b2:	4613      	mov	r3, r2
 80029b4:	005b      	lsls	r3, r3, #1
 80029b6:	4413      	add	r3, r2
 80029b8:	2207      	movs	r2, #7
 80029ba:	fa02 f303 	lsl.w	r3, r2, r3
 80029be:	43da      	mvns	r2, r3
 80029c0:	687b      	ldr	r3, [r7, #4]
 80029c2:	681b      	ldr	r3, [r3, #0]
 80029c4:	400a      	ands	r2, r1
 80029c6:	611a      	str	r2, [r3, #16]
 80029c8:	687b      	ldr	r3, [r7, #4]
 80029ca:	681b      	ldr	r3, [r3, #0]
 80029cc:	6919      	ldr	r1, [r3, #16]
 80029ce:	683b      	ldr	r3, [r7, #0]
 80029d0:	689a      	ldr	r2, [r3, #8]
 80029d2:	683b      	ldr	r3, [r7, #0]
 80029d4:	681b      	ldr	r3, [r3, #0]
 80029d6:	b29b      	uxth	r3, r3
 80029d8:	4618      	mov	r0, r3
 80029da:	4603      	mov	r3, r0
 80029dc:	005b      	lsls	r3, r3, #1
 80029de:	4403      	add	r3, r0
 80029e0:	409a      	lsls	r2, r3
 80029e2:	687b      	ldr	r3, [r7, #4]
 80029e4:	681b      	ldr	r3, [r3, #0]
 80029e6:	430a      	orrs	r2, r1
 80029e8:	611a      	str	r2, [r3, #16]
 80029ea:	683b      	ldr	r3, [r7, #0]
 80029ec:	685b      	ldr	r3, [r3, #4]
 80029ee:	2b06      	cmp	r3, #6
 80029f0:	d824      	bhi.n	8002a3c <HAL_ADC_ConfigChannel+0x110>
 80029f2:	687b      	ldr	r3, [r7, #4]
 80029f4:	681b      	ldr	r3, [r3, #0]
 80029f6:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 80029f8:	683b      	ldr	r3, [r7, #0]
 80029fa:	685a      	ldr	r2, [r3, #4]
 80029fc:	4613      	mov	r3, r2
 80029fe:	009b      	lsls	r3, r3, #2
 8002a00:	4413      	add	r3, r2
 8002a02:	3b05      	subs	r3, #5
 8002a04:	221f      	movs	r2, #31
 8002a06:	fa02 f303 	lsl.w	r3, r2, r3
 8002a0a:	43da      	mvns	r2, r3
 8002a0c:	687b      	ldr	r3, [r7, #4]
 8002a0e:	681b      	ldr	r3, [r3, #0]
 8002a10:	400a      	ands	r2, r1
 8002a12:	635a      	str	r2, [r3, #52]	@ 0x34
 8002a14:	687b      	ldr	r3, [r7, #4]
 8002a16:	681b      	ldr	r3, [r3, #0]
 8002a18:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 8002a1a:	683b      	ldr	r3, [r7, #0]
 8002a1c:	681b      	ldr	r3, [r3, #0]
 8002a1e:	b29b      	uxth	r3, r3
 8002a20:	4618      	mov	r0, r3
 8002a22:	683b      	ldr	r3, [r7, #0]
 8002a24:	685a      	ldr	r2, [r3, #4]
 8002a26:	4613      	mov	r3, r2
 8002a28:	009b      	lsls	r3, r3, #2
 8002a2a:	4413      	add	r3, r2
 8002a2c:	3b05      	subs	r3, #5
 8002a2e:	fa00 f203 	lsl.w	r2, r0, r3
 8002a32:	687b      	ldr	r3, [r7, #4]
 8002a34:	681b      	ldr	r3, [r3, #0]
 8002a36:	430a      	orrs	r2, r1
 8002a38:	635a      	str	r2, [r3, #52]	@ 0x34
 8002a3a:	e04c      	b.n	8002ad6 <HAL_ADC_ConfigChannel+0x1aa>
 8002a3c:	683b      	ldr	r3, [r7, #0]
 8002a3e:	685b      	ldr	r3, [r3, #4]
 8002a40:	2b0c      	cmp	r3, #12
 8002a42:	d824      	bhi.n	8002a8e <HAL_ADC_ConfigChannel+0x162>
 8002a44:	687b      	ldr	r3, [r7, #4]
 8002a46:	681b      	ldr	r3, [r3, #0]
 8002a48:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8002a4a:	683b      	ldr	r3, [r7, #0]
 8002a4c:	685a      	ldr	r2, [r3, #4]
 8002a4e:	4613      	mov	r3, r2
 8002a50:	009b      	lsls	r3, r3, #2
 8002a52:	4413      	add	r3, r2
 8002a54:	3b23      	subs	r3, #35	@ 0x23
 8002a56:	221f      	movs	r2, #31
 8002a58:	fa02 f303 	lsl.w	r3, r2, r3
 8002a5c:	43da      	mvns	r2, r3
 8002a5e:	687b      	ldr	r3, [r7, #4]
 8002a60:	681b      	ldr	r3, [r3, #0]
 8002a62:	400a      	ands	r2, r1
 8002a64:	631a      	str	r2, [r3, #48]	@ 0x30
 8002a66:	687b      	ldr	r3, [r7, #4]
 8002a68:	681b      	ldr	r3, [r3, #0]
 8002a6a:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8002a6c:	683b      	ldr	r3, [r7, #0]
 8002a6e:	681b      	ldr	r3, [r3, #0]
 8002a70:	b29b      	uxth	r3, r3
 8002a72:	4618      	mov	r0, r3
 8002a74:	683b      	ldr	r3, [r7, #0]
 8002a76:	685a      	ldr	r2, [r3, #4]
 8002a78:	4613      	mov	r3, r2
 8002a7a:	009b      	lsls	r3, r3, #2
 8002a7c:	4413      	add	r3, r2
 8002a7e:	3b23      	subs	r3, #35	@ 0x23
 8002a80:	fa00 f203 	lsl.w	r2, r0, r3
 8002a84:	687b      	ldr	r3, [r7, #4]
 8002a86:	681b      	ldr	r3, [r3, #0]
 8002a88:	430a      	orrs	r2, r1
 8002a8a:	631a      	str	r2, [r3, #48]	@ 0x30
 8002a8c:	e023      	b.n	8002ad6 <HAL_ADC_ConfigChannel+0x1aa>
 8002a8e:	687b      	ldr	r3, [r7, #4]
 8002a90:	681b      	ldr	r3, [r3, #0]
 8002a92:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8002a94:	683b      	ldr	r3, [r7, #0]
 8002a96:	685a      	ldr	r2, [r3, #4]
 8002a98:	4613      	mov	r3, r2
 8002a9a:	009b      	lsls	r3, r3, #2
 8002a9c:	4413      	add	r3, r2
 8002a9e:	3b41      	subs	r3, #65	@ 0x41
 8002aa0:	221f      	movs	r2, #31
 8002aa2:	fa02 f303 	lsl.w	r3, r2, r3
 8002aa6:	43da      	mvns	r2, r3
 8002aa8:	687b      	ldr	r3, [r7, #4]
 8002aaa:	681b      	ldr	r3, [r3, #0]
 8002aac:	400a      	ands	r2, r1
 8002aae:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002ab0:	687b      	ldr	r3, [r7, #4]
 8002ab2:	681b      	ldr	r3, [r3, #0]
 8002ab4:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8002ab6:	683b      	ldr	r3, [r7, #0]
 8002ab8:	681b      	ldr	r3, [r3, #0]
 8002aba:	b29b      	uxth	r3, r3
 8002abc:	4618      	mov	r0, r3
 8002abe:	683b      	ldr	r3, [r7, #0]
 8002ac0:	685a      	ldr	r2, [r3, #4]
 8002ac2:	4613      	mov	r3, r2
 8002ac4:	009b      	lsls	r3, r3, #2
 8002ac6:	4413      	add	r3, r2
 8002ac8:	3b41      	subs	r3, #65	@ 0x41
 8002aca:	fa00 f203 	lsl.w	r2, r0, r3
 8002ace:	687b      	ldr	r3, [r7, #4]
 8002ad0:	681b      	ldr	r3, [r3, #0]
 8002ad2:	430a      	orrs	r2, r1
 8002ad4:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002ad6:	4b29      	ldr	r3, [pc, #164]	@ (8002b7c <HAL_ADC_ConfigChannel+0x250>)
 8002ad8:	60fb      	str	r3, [r7, #12]
 8002ada:	687b      	ldr	r3, [r7, #4]
 8002adc:	681b      	ldr	r3, [r3, #0]
 8002ade:	4a28      	ldr	r2, [pc, #160]	@ (8002b80 <HAL_ADC_ConfigChannel+0x254>)
 8002ae0:	4293      	cmp	r3, r2
 8002ae2:	d10f      	bne.n	8002b04 <HAL_ADC_ConfigChannel+0x1d8>
 8002ae4:	683b      	ldr	r3, [r7, #0]
 8002ae6:	681b      	ldr	r3, [r3, #0]
 8002ae8:	2b12      	cmp	r3, #18
 8002aea:	d10b      	bne.n	8002b04 <HAL_ADC_ConfigChannel+0x1d8>
 8002aec:	68fb      	ldr	r3, [r7, #12]
 8002aee:	685b      	ldr	r3, [r3, #4]
 8002af0:	f423 0200 	bic.w	r2, r3, #8388608	@ 0x800000
 8002af4:	68fb      	ldr	r3, [r7, #12]
 8002af6:	605a      	str	r2, [r3, #4]
 8002af8:	68fb      	ldr	r3, [r7, #12]
 8002afa:	685b      	ldr	r3, [r3, #4]
 8002afc:	f443 0280 	orr.w	r2, r3, #4194304	@ 0x400000
 8002b00:	68fb      	ldr	r3, [r7, #12]
 8002b02:	605a      	str	r2, [r3, #4]
 8002b04:	687b      	ldr	r3, [r7, #4]
 8002b06:	681b      	ldr	r3, [r3, #0]
 8002b08:	4a1d      	ldr	r2, [pc, #116]	@ (8002b80 <HAL_ADC_ConfigChannel+0x254>)
 8002b0a:	4293      	cmp	r3, r2
 8002b0c:	d12b      	bne.n	8002b66 <HAL_ADC_ConfigChannel+0x23a>
 8002b0e:	683b      	ldr	r3, [r7, #0]
 8002b10:	681b      	ldr	r3, [r3, #0]
 8002b12:	4a1c      	ldr	r2, [pc, #112]	@ (8002b84 <HAL_ADC_ConfigChannel+0x258>)
 8002b14:	4293      	cmp	r3, r2
 8002b16:	d003      	beq.n	8002b20 <HAL_ADC_ConfigChannel+0x1f4>
 8002b18:	683b      	ldr	r3, [r7, #0]
 8002b1a:	681b      	ldr	r3, [r3, #0]
 8002b1c:	2b11      	cmp	r3, #17
 8002b1e:	d122      	bne.n	8002b66 <HAL_ADC_ConfigChannel+0x23a>
 8002b20:	68fb      	ldr	r3, [r7, #12]
 8002b22:	685b      	ldr	r3, [r3, #4]
 8002b24:	f423 0280 	bic.w	r2, r3, #4194304	@ 0x400000
 8002b28:	68fb      	ldr	r3, [r7, #12]
 8002b2a:	605a      	str	r2, [r3, #4]
 8002b2c:	68fb      	ldr	r3, [r7, #12]
 8002b2e:	685b      	ldr	r3, [r3, #4]
 8002b30:	f443 0200 	orr.w	r2, r3, #8388608	@ 0x800000
 8002b34:	68fb      	ldr	r3, [r7, #12]
 8002b36:	605a      	str	r2, [r3, #4]
 8002b38:	683b      	ldr	r3, [r7, #0]
 8002b3a:	681b      	ldr	r3, [r3, #0]
 8002b3c:	4a11      	ldr	r2, [pc, #68]	@ (8002b84 <HAL_ADC_ConfigChannel+0x258>)
 8002b3e:	4293      	cmp	r3, r2
 8002b40:	d111      	bne.n	8002b66 <HAL_ADC_ConfigChannel+0x23a>
 8002b42:	4b11      	ldr	r3, [pc, #68]	@ (8002b88 <HAL_ADC_ConfigChannel+0x25c>)
 8002b44:	681b      	ldr	r3, [r3, #0]
 8002b46:	4a11      	ldr	r2, [pc, #68]	@ (8002b8c <HAL_ADC_ConfigChannel+0x260>)
 8002b48:	fba2 2303 	umull	r2, r3, r2, r3
 8002b4c:	0c9a      	lsrs	r2, r3, #18
 8002b4e:	4613      	mov	r3, r2
 8002b50:	009b      	lsls	r3, r3, #2
 8002b52:	4413      	add	r3, r2
 8002b54:	005b      	lsls	r3, r3, #1
 8002b56:	60bb      	str	r3, [r7, #8]
 8002b58:	e002      	b.n	8002b60 <HAL_ADC_ConfigChannel+0x234>
 8002b5a:	68bb      	ldr	r3, [r7, #8]
 8002b5c:	3b01      	subs	r3, #1
 8002b5e:	60bb      	str	r3, [r7, #8]
 8002b60:	68bb      	ldr	r3, [r7, #8]
 8002b62:	2b00      	cmp	r3, #0
 8002b64:	d1f9      	bne.n	8002b5a <HAL_ADC_ConfigChannel+0x22e>
 8002b66:	687b      	ldr	r3, [r7, #4]
 8002b68:	2200      	movs	r2, #0
 8002b6a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002b6e:	2300      	movs	r3, #0
 8002b70:	4618      	mov	r0, r3
 8002b72:	3714      	adds	r7, #20
 8002b74:	46bd      	mov	sp, r7
 8002b76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b7a:	4770      	bx	lr
 8002b7c:	40012300 	.word	0x40012300
 8002b80:	40012000 	.word	0x40012000
 8002b84:	10000012 	.word	0x10000012
 8002b88:	20000000 	.word	0x20000000
 8002b8c:	431bde83 	.word	0x431bde83

08002b90 <ADC_Init>:
 8002b90:	b480      	push	{r7}
 8002b92:	b085      	sub	sp, #20
 8002b94:	af00      	add	r7, sp, #0
 8002b96:	6078      	str	r0, [r7, #4]
 8002b98:	4b79      	ldr	r3, [pc, #484]	@ (8002d80 <ADC_Init+0x1f0>)
 8002b9a:	60fb      	str	r3, [r7, #12]
 8002b9c:	68fb      	ldr	r3, [r7, #12]
 8002b9e:	685b      	ldr	r3, [r3, #4]
 8002ba0:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 8002ba4:	68fb      	ldr	r3, [r7, #12]
 8002ba6:	605a      	str	r2, [r3, #4]
 8002ba8:	68fb      	ldr	r3, [r7, #12]
 8002baa:	685a      	ldr	r2, [r3, #4]
 8002bac:	687b      	ldr	r3, [r7, #4]
 8002bae:	685b      	ldr	r3, [r3, #4]
 8002bb0:	431a      	orrs	r2, r3
 8002bb2:	68fb      	ldr	r3, [r7, #12]
 8002bb4:	605a      	str	r2, [r3, #4]
 8002bb6:	687b      	ldr	r3, [r7, #4]
 8002bb8:	681b      	ldr	r3, [r3, #0]
 8002bba:	685a      	ldr	r2, [r3, #4]
 8002bbc:	687b      	ldr	r3, [r7, #4]
 8002bbe:	681b      	ldr	r3, [r3, #0]
 8002bc0:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8002bc4:	605a      	str	r2, [r3, #4]
 8002bc6:	687b      	ldr	r3, [r7, #4]
 8002bc8:	681b      	ldr	r3, [r3, #0]
 8002bca:	6859      	ldr	r1, [r3, #4]
 8002bcc:	687b      	ldr	r3, [r7, #4]
 8002bce:	691b      	ldr	r3, [r3, #16]
 8002bd0:	021a      	lsls	r2, r3, #8
 8002bd2:	687b      	ldr	r3, [r7, #4]
 8002bd4:	681b      	ldr	r3, [r3, #0]
 8002bd6:	430a      	orrs	r2, r1
 8002bd8:	605a      	str	r2, [r3, #4]
 8002bda:	687b      	ldr	r3, [r7, #4]
 8002bdc:	681b      	ldr	r3, [r3, #0]
 8002bde:	685a      	ldr	r2, [r3, #4]
 8002be0:	687b      	ldr	r3, [r7, #4]
 8002be2:	681b      	ldr	r3, [r3, #0]
 8002be4:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 8002be8:	605a      	str	r2, [r3, #4]
 8002bea:	687b      	ldr	r3, [r7, #4]
 8002bec:	681b      	ldr	r3, [r3, #0]
 8002bee:	6859      	ldr	r1, [r3, #4]
 8002bf0:	687b      	ldr	r3, [r7, #4]
 8002bf2:	689a      	ldr	r2, [r3, #8]
 8002bf4:	687b      	ldr	r3, [r7, #4]
 8002bf6:	681b      	ldr	r3, [r3, #0]
 8002bf8:	430a      	orrs	r2, r1
 8002bfa:	605a      	str	r2, [r3, #4]
 8002bfc:	687b      	ldr	r3, [r7, #4]
 8002bfe:	681b      	ldr	r3, [r3, #0]
 8002c00:	689a      	ldr	r2, [r3, #8]
 8002c02:	687b      	ldr	r3, [r7, #4]
 8002c04:	681b      	ldr	r3, [r3, #0]
 8002c06:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8002c0a:	609a      	str	r2, [r3, #8]
 8002c0c:	687b      	ldr	r3, [r7, #4]
 8002c0e:	681b      	ldr	r3, [r3, #0]
 8002c10:	6899      	ldr	r1, [r3, #8]
 8002c12:	687b      	ldr	r3, [r7, #4]
 8002c14:	68da      	ldr	r2, [r3, #12]
 8002c16:	687b      	ldr	r3, [r7, #4]
 8002c18:	681b      	ldr	r3, [r3, #0]
 8002c1a:	430a      	orrs	r2, r1
 8002c1c:	609a      	str	r2, [r3, #8]
 8002c1e:	687b      	ldr	r3, [r7, #4]
 8002c20:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8002c22:	4a58      	ldr	r2, [pc, #352]	@ (8002d84 <ADC_Init+0x1f4>)
 8002c24:	4293      	cmp	r3, r2
 8002c26:	d022      	beq.n	8002c6e <ADC_Init+0xde>
 8002c28:	687b      	ldr	r3, [r7, #4]
 8002c2a:	681b      	ldr	r3, [r3, #0]
 8002c2c:	689a      	ldr	r2, [r3, #8]
 8002c2e:	687b      	ldr	r3, [r7, #4]
 8002c30:	681b      	ldr	r3, [r3, #0]
 8002c32:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8002c36:	609a      	str	r2, [r3, #8]
 8002c38:	687b      	ldr	r3, [r7, #4]
 8002c3a:	681b      	ldr	r3, [r3, #0]
 8002c3c:	6899      	ldr	r1, [r3, #8]
 8002c3e:	687b      	ldr	r3, [r7, #4]
 8002c40:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8002c42:	687b      	ldr	r3, [r7, #4]
 8002c44:	681b      	ldr	r3, [r3, #0]
 8002c46:	430a      	orrs	r2, r1
 8002c48:	609a      	str	r2, [r3, #8]
 8002c4a:	687b      	ldr	r3, [r7, #4]
 8002c4c:	681b      	ldr	r3, [r3, #0]
 8002c4e:	689a      	ldr	r2, [r3, #8]
 8002c50:	687b      	ldr	r3, [r7, #4]
 8002c52:	681b      	ldr	r3, [r3, #0]
 8002c54:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8002c58:	609a      	str	r2, [r3, #8]
 8002c5a:	687b      	ldr	r3, [r7, #4]
 8002c5c:	681b      	ldr	r3, [r3, #0]
 8002c5e:	6899      	ldr	r1, [r3, #8]
 8002c60:	687b      	ldr	r3, [r7, #4]
 8002c62:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8002c64:	687b      	ldr	r3, [r7, #4]
 8002c66:	681b      	ldr	r3, [r3, #0]
 8002c68:	430a      	orrs	r2, r1
 8002c6a:	609a      	str	r2, [r3, #8]
 8002c6c:	e00f      	b.n	8002c8e <ADC_Init+0xfe>
 8002c6e:	687b      	ldr	r3, [r7, #4]
 8002c70:	681b      	ldr	r3, [r3, #0]
 8002c72:	689a      	ldr	r2, [r3, #8]
 8002c74:	687b      	ldr	r3, [r7, #4]
 8002c76:	681b      	ldr	r3, [r3, #0]
 8002c78:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8002c7c:	609a      	str	r2, [r3, #8]
 8002c7e:	687b      	ldr	r3, [r7, #4]
 8002c80:	681b      	ldr	r3, [r3, #0]
 8002c82:	689a      	ldr	r2, [r3, #8]
 8002c84:	687b      	ldr	r3, [r7, #4]
 8002c86:	681b      	ldr	r3, [r3, #0]
 8002c88:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8002c8c:	609a      	str	r2, [r3, #8]
 8002c8e:	687b      	ldr	r3, [r7, #4]
 8002c90:	681b      	ldr	r3, [r3, #0]
 8002c92:	689a      	ldr	r2, [r3, #8]
 8002c94:	687b      	ldr	r3, [r7, #4]
 8002c96:	681b      	ldr	r3, [r3, #0]
 8002c98:	f022 0202 	bic.w	r2, r2, #2
 8002c9c:	609a      	str	r2, [r3, #8]
 8002c9e:	687b      	ldr	r3, [r7, #4]
 8002ca0:	681b      	ldr	r3, [r3, #0]
 8002ca2:	6899      	ldr	r1, [r3, #8]
 8002ca4:	687b      	ldr	r3, [r7, #4]
 8002ca6:	7e1b      	ldrb	r3, [r3, #24]
 8002ca8:	005a      	lsls	r2, r3, #1
 8002caa:	687b      	ldr	r3, [r7, #4]
 8002cac:	681b      	ldr	r3, [r3, #0]
 8002cae:	430a      	orrs	r2, r1
 8002cb0:	609a      	str	r2, [r3, #8]
 8002cb2:	687b      	ldr	r3, [r7, #4]
 8002cb4:	f893 3020 	ldrb.w	r3, [r3, #32]
 8002cb8:	2b00      	cmp	r3, #0
 8002cba:	d01b      	beq.n	8002cf4 <ADC_Init+0x164>
 8002cbc:	687b      	ldr	r3, [r7, #4]
 8002cbe:	681b      	ldr	r3, [r3, #0]
 8002cc0:	685a      	ldr	r2, [r3, #4]
 8002cc2:	687b      	ldr	r3, [r7, #4]
 8002cc4:	681b      	ldr	r3, [r3, #0]
 8002cc6:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8002cca:	605a      	str	r2, [r3, #4]
 8002ccc:	687b      	ldr	r3, [r7, #4]
 8002cce:	681b      	ldr	r3, [r3, #0]
 8002cd0:	685a      	ldr	r2, [r3, #4]
 8002cd2:	687b      	ldr	r3, [r7, #4]
 8002cd4:	681b      	ldr	r3, [r3, #0]
 8002cd6:	f422 4260 	bic.w	r2, r2, #57344	@ 0xe000
 8002cda:	605a      	str	r2, [r3, #4]
 8002cdc:	687b      	ldr	r3, [r7, #4]
 8002cde:	681b      	ldr	r3, [r3, #0]
 8002ce0:	6859      	ldr	r1, [r3, #4]
 8002ce2:	687b      	ldr	r3, [r7, #4]
 8002ce4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002ce6:	3b01      	subs	r3, #1
 8002ce8:	035a      	lsls	r2, r3, #13
 8002cea:	687b      	ldr	r3, [r7, #4]
 8002cec:	681b      	ldr	r3, [r3, #0]
 8002cee:	430a      	orrs	r2, r1
 8002cf0:	605a      	str	r2, [r3, #4]
 8002cf2:	e007      	b.n	8002d04 <ADC_Init+0x174>
 8002cf4:	687b      	ldr	r3, [r7, #4]
 8002cf6:	681b      	ldr	r3, [r3, #0]
 8002cf8:	685a      	ldr	r2, [r3, #4]
 8002cfa:	687b      	ldr	r3, [r7, #4]
 8002cfc:	681b      	ldr	r3, [r3, #0]
 8002cfe:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8002d02:	605a      	str	r2, [r3, #4]
 8002d04:	687b      	ldr	r3, [r7, #4]
 8002d06:	681b      	ldr	r3, [r3, #0]
 8002d08:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8002d0a:	687b      	ldr	r3, [r7, #4]
 8002d0c:	681b      	ldr	r3, [r3, #0]
 8002d0e:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 8002d12:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002d14:	687b      	ldr	r3, [r7, #4]
 8002d16:	681b      	ldr	r3, [r3, #0]
 8002d18:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8002d1a:	687b      	ldr	r3, [r7, #4]
 8002d1c:	69db      	ldr	r3, [r3, #28]
 8002d1e:	3b01      	subs	r3, #1
 8002d20:	051a      	lsls	r2, r3, #20
 8002d22:	687b      	ldr	r3, [r7, #4]
 8002d24:	681b      	ldr	r3, [r3, #0]
 8002d26:	430a      	orrs	r2, r1
 8002d28:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002d2a:	687b      	ldr	r3, [r7, #4]
 8002d2c:	681b      	ldr	r3, [r3, #0]
 8002d2e:	689a      	ldr	r2, [r3, #8]
 8002d30:	687b      	ldr	r3, [r7, #4]
 8002d32:	681b      	ldr	r3, [r3, #0]
 8002d34:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 8002d38:	609a      	str	r2, [r3, #8]
 8002d3a:	687b      	ldr	r3, [r7, #4]
 8002d3c:	681b      	ldr	r3, [r3, #0]
 8002d3e:	6899      	ldr	r1, [r3, #8]
 8002d40:	687b      	ldr	r3, [r7, #4]
 8002d42:	f893 3030 	ldrb.w	r3, [r3, #48]	@ 0x30
 8002d46:	025a      	lsls	r2, r3, #9
 8002d48:	687b      	ldr	r3, [r7, #4]
 8002d4a:	681b      	ldr	r3, [r3, #0]
 8002d4c:	430a      	orrs	r2, r1
 8002d4e:	609a      	str	r2, [r3, #8]
 8002d50:	687b      	ldr	r3, [r7, #4]
 8002d52:	681b      	ldr	r3, [r3, #0]
 8002d54:	689a      	ldr	r2, [r3, #8]
 8002d56:	687b      	ldr	r3, [r7, #4]
 8002d58:	681b      	ldr	r3, [r3, #0]
 8002d5a:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8002d5e:	609a      	str	r2, [r3, #8]
 8002d60:	687b      	ldr	r3, [r7, #4]
 8002d62:	681b      	ldr	r3, [r3, #0]
 8002d64:	6899      	ldr	r1, [r3, #8]
 8002d66:	687b      	ldr	r3, [r7, #4]
 8002d68:	695b      	ldr	r3, [r3, #20]
 8002d6a:	029a      	lsls	r2, r3, #10
 8002d6c:	687b      	ldr	r3, [r7, #4]
 8002d6e:	681b      	ldr	r3, [r3, #0]
 8002d70:	430a      	orrs	r2, r1
 8002d72:	609a      	str	r2, [r3, #8]
 8002d74:	bf00      	nop
 8002d76:	3714      	adds	r7, #20
 8002d78:	46bd      	mov	sp, r7
 8002d7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d7e:	4770      	bx	lr
 8002d80:	40012300 	.word	0x40012300
 8002d84:	0f000001 	.word	0x0f000001

08002d88 <HAL_ADCEx_InjectedStart>:
 8002d88:	b480      	push	{r7}
 8002d8a:	b087      	sub	sp, #28
 8002d8c:	af00      	add	r7, sp, #0
 8002d8e:	6078      	str	r0, [r7, #4]
 8002d90:	2300      	movs	r3, #0
 8002d92:	60bb      	str	r3, [r7, #8]
 8002d94:	2300      	movs	r3, #0
 8002d96:	617b      	str	r3, [r7, #20]
 8002d98:	2300      	movs	r3, #0
 8002d9a:	613b      	str	r3, [r7, #16]
 8002d9c:	687b      	ldr	r3, [r7, #4]
 8002d9e:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002da2:	2b01      	cmp	r3, #1
 8002da4:	d101      	bne.n	8002daa <HAL_ADCEx_InjectedStart+0x22>
 8002da6:	2302      	movs	r3, #2
 8002da8:	e0aa      	b.n	8002f00 <HAL_ADCEx_InjectedStart+0x178>
 8002daa:	687b      	ldr	r3, [r7, #4]
 8002dac:	2201      	movs	r2, #1
 8002dae:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002db2:	687b      	ldr	r3, [r7, #4]
 8002db4:	681b      	ldr	r3, [r3, #0]
 8002db6:	689b      	ldr	r3, [r3, #8]
 8002db8:	f003 0301 	and.w	r3, r3, #1
 8002dbc:	2b01      	cmp	r3, #1
 8002dbe:	d018      	beq.n	8002df2 <HAL_ADCEx_InjectedStart+0x6a>
 8002dc0:	687b      	ldr	r3, [r7, #4]
 8002dc2:	681b      	ldr	r3, [r3, #0]
 8002dc4:	689a      	ldr	r2, [r3, #8]
 8002dc6:	687b      	ldr	r3, [r7, #4]
 8002dc8:	681b      	ldr	r3, [r3, #0]
 8002dca:	f042 0201 	orr.w	r2, r2, #1
 8002dce:	609a      	str	r2, [r3, #8]
 8002dd0:	4b4e      	ldr	r3, [pc, #312]	@ (8002f0c <HAL_ADCEx_InjectedStart+0x184>)
 8002dd2:	681b      	ldr	r3, [r3, #0]
 8002dd4:	4a4e      	ldr	r2, [pc, #312]	@ (8002f10 <HAL_ADCEx_InjectedStart+0x188>)
 8002dd6:	fba2 2303 	umull	r2, r3, r2, r3
 8002dda:	0c9a      	lsrs	r2, r3, #18
 8002ddc:	4613      	mov	r3, r2
 8002dde:	005b      	lsls	r3, r3, #1
 8002de0:	4413      	add	r3, r2
 8002de2:	60bb      	str	r3, [r7, #8]
 8002de4:	e002      	b.n	8002dec <HAL_ADCEx_InjectedStart+0x64>
 8002de6:	68bb      	ldr	r3, [r7, #8]
 8002de8:	3b01      	subs	r3, #1
 8002dea:	60bb      	str	r3, [r7, #8]
 8002dec:	68bb      	ldr	r3, [r7, #8]
 8002dee:	2b00      	cmp	r3, #0
 8002df0:	d1f9      	bne.n	8002de6 <HAL_ADCEx_InjectedStart+0x5e>
 8002df2:	687b      	ldr	r3, [r7, #4]
 8002df4:	681b      	ldr	r3, [r3, #0]
 8002df6:	689b      	ldr	r3, [r3, #8]
 8002df8:	f003 0301 	and.w	r3, r3, #1
 8002dfc:	2b01      	cmp	r3, #1
 8002dfe:	d172      	bne.n	8002ee6 <HAL_ADCEx_InjectedStart+0x15e>
 8002e00:	687b      	ldr	r3, [r7, #4]
 8002e02:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002e04:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8002e08:	f023 0301 	bic.w	r3, r3, #1
 8002e0c:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8002e10:	687b      	ldr	r3, [r7, #4]
 8002e12:	641a      	str	r2, [r3, #64]	@ 0x40
 8002e14:	687b      	ldr	r3, [r7, #4]
 8002e16:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002e18:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002e1c:	2b00      	cmp	r3, #0
 8002e1e:	d102      	bne.n	8002e26 <HAL_ADCEx_InjectedStart+0x9e>
 8002e20:	687b      	ldr	r3, [r7, #4]
 8002e22:	2200      	movs	r2, #0
 8002e24:	645a      	str	r2, [r3, #68]	@ 0x44
 8002e26:	687b      	ldr	r3, [r7, #4]
 8002e28:	2200      	movs	r2, #0
 8002e2a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8002e2e:	687b      	ldr	r3, [r7, #4]
 8002e30:	681b      	ldr	r3, [r3, #0]
 8002e32:	f06f 0204 	mvn.w	r2, #4
 8002e36:	601a      	str	r2, [r3, #0]
 8002e38:	4b36      	ldr	r3, [pc, #216]	@ (8002f14 <HAL_ADCEx_InjectedStart+0x18c>)
 8002e3a:	60fb      	str	r3, [r7, #12]
 8002e3c:	68fb      	ldr	r3, [r7, #12]
 8002e3e:	685b      	ldr	r3, [r3, #4]
 8002e40:	f003 031f 	and.w	r3, r3, #31
 8002e44:	2b00      	cmp	r3, #0
 8002e46:	d124      	bne.n	8002e92 <HAL_ADCEx_InjectedStart+0x10a>
 8002e48:	687b      	ldr	r3, [r7, #4]
 8002e4a:	681b      	ldr	r3, [r3, #0]
 8002e4c:	689b      	ldr	r3, [r3, #8]
 8002e4e:	f403 1340 	and.w	r3, r3, #3145728	@ 0x300000
 8002e52:	2b00      	cmp	r3, #0
 8002e54:	bf0c      	ite	eq
 8002e56:	2301      	moveq	r3, #1
 8002e58:	2300      	movne	r3, #0
 8002e5a:	b2db      	uxtb	r3, r3
 8002e5c:	617b      	str	r3, [r7, #20]
 8002e5e:	687b      	ldr	r3, [r7, #4]
 8002e60:	681b      	ldr	r3, [r3, #0]
 8002e62:	685b      	ldr	r3, [r3, #4]
 8002e64:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002e68:	2b00      	cmp	r3, #0
 8002e6a:	bf0c      	ite	eq
 8002e6c:	2301      	moveq	r3, #1
 8002e6e:	2300      	movne	r3, #0
 8002e70:	b2db      	uxtb	r3, r3
 8002e72:	613b      	str	r3, [r7, #16]
 8002e74:	697b      	ldr	r3, [r7, #20]
 8002e76:	2b00      	cmp	r3, #0
 8002e78:	d041      	beq.n	8002efe <HAL_ADCEx_InjectedStart+0x176>
 8002e7a:	693b      	ldr	r3, [r7, #16]
 8002e7c:	2b00      	cmp	r3, #0
 8002e7e:	d03e      	beq.n	8002efe <HAL_ADCEx_InjectedStart+0x176>
 8002e80:	687b      	ldr	r3, [r7, #4]
 8002e82:	681b      	ldr	r3, [r3, #0]
 8002e84:	689a      	ldr	r2, [r3, #8]
 8002e86:	687b      	ldr	r3, [r7, #4]
 8002e88:	681b      	ldr	r3, [r3, #0]
 8002e8a:	f442 0280 	orr.w	r2, r2, #4194304	@ 0x400000
 8002e8e:	609a      	str	r2, [r3, #8]
 8002e90:	e035      	b.n	8002efe <HAL_ADCEx_InjectedStart+0x176>
 8002e92:	687b      	ldr	r3, [r7, #4]
 8002e94:	681b      	ldr	r3, [r3, #0]
 8002e96:	689b      	ldr	r3, [r3, #8]
 8002e98:	f403 1340 	and.w	r3, r3, #3145728	@ 0x300000
 8002e9c:	2b00      	cmp	r3, #0
 8002e9e:	bf0c      	ite	eq
 8002ea0:	2301      	moveq	r3, #1
 8002ea2:	2300      	movne	r3, #0
 8002ea4:	b2db      	uxtb	r3, r3
 8002ea6:	617b      	str	r3, [r7, #20]
 8002ea8:	687b      	ldr	r3, [r7, #4]
 8002eaa:	681b      	ldr	r3, [r3, #0]
 8002eac:	685b      	ldr	r3, [r3, #4]
 8002eae:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002eb2:	2b00      	cmp	r3, #0
 8002eb4:	bf0c      	ite	eq
 8002eb6:	2301      	moveq	r3, #1
 8002eb8:	2300      	movne	r3, #0
 8002eba:	b2db      	uxtb	r3, r3
 8002ebc:	613b      	str	r3, [r7, #16]
 8002ebe:	687b      	ldr	r3, [r7, #4]
 8002ec0:	681b      	ldr	r3, [r3, #0]
 8002ec2:	4a15      	ldr	r2, [pc, #84]	@ (8002f18 <HAL_ADCEx_InjectedStart+0x190>)
 8002ec4:	4293      	cmp	r3, r2
 8002ec6:	d11a      	bne.n	8002efe <HAL_ADCEx_InjectedStart+0x176>
 8002ec8:	697b      	ldr	r3, [r7, #20]
 8002eca:	2b00      	cmp	r3, #0
 8002ecc:	d017      	beq.n	8002efe <HAL_ADCEx_InjectedStart+0x176>
 8002ece:	693b      	ldr	r3, [r7, #16]
 8002ed0:	2b00      	cmp	r3, #0
 8002ed2:	d014      	beq.n	8002efe <HAL_ADCEx_InjectedStart+0x176>
 8002ed4:	687b      	ldr	r3, [r7, #4]
 8002ed6:	681b      	ldr	r3, [r3, #0]
 8002ed8:	689a      	ldr	r2, [r3, #8]
 8002eda:	687b      	ldr	r3, [r7, #4]
 8002edc:	681b      	ldr	r3, [r3, #0]
 8002ede:	f442 0280 	orr.w	r2, r2, #4194304	@ 0x400000
 8002ee2:	609a      	str	r2, [r3, #8]
 8002ee4:	e00b      	b.n	8002efe <HAL_ADCEx_InjectedStart+0x176>
 8002ee6:	687b      	ldr	r3, [r7, #4]
 8002ee8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002eea:	f043 0210 	orr.w	r2, r3, #16
 8002eee:	687b      	ldr	r3, [r7, #4]
 8002ef0:	641a      	str	r2, [r3, #64]	@ 0x40
 8002ef2:	687b      	ldr	r3, [r7, #4]
 8002ef4:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002ef6:	f043 0201 	orr.w	r2, r3, #1
 8002efa:	687b      	ldr	r3, [r7, #4]
 8002efc:	645a      	str	r2, [r3, #68]	@ 0x44
 8002efe:	2300      	movs	r3, #0
 8002f00:	4618      	mov	r0, r3
 8002f02:	371c      	adds	r7, #28
 8002f04:	46bd      	mov	sp, r7
 8002f06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f0a:	4770      	bx	lr
 8002f0c:	20000000 	.word	0x20000000
 8002f10:	431bde83 	.word	0x431bde83
 8002f14:	40012300 	.word	0x40012300
 8002f18:	40012000 	.word	0x40012000

08002f1c <HAL_CAN_Init>:
 8002f1c:	b580      	push	{r7, lr}
 8002f1e:	b084      	sub	sp, #16
 8002f20:	af00      	add	r7, sp, #0
 8002f22:	6078      	str	r0, [r7, #4]
 8002f24:	687b      	ldr	r3, [r7, #4]
 8002f26:	2b00      	cmp	r3, #0
 8002f28:	d101      	bne.n	8002f2e <HAL_CAN_Init+0x12>
 8002f2a:	2301      	movs	r3, #1
 8002f2c:	e0ed      	b.n	800310a <HAL_CAN_Init+0x1ee>
 8002f2e:	687b      	ldr	r3, [r7, #4]
 8002f30:	f893 3020 	ldrb.w	r3, [r3, #32]
 8002f34:	b2db      	uxtb	r3, r3
 8002f36:	2b00      	cmp	r3, #0
 8002f38:	d102      	bne.n	8002f40 <HAL_CAN_Init+0x24>
 8002f3a:	6878      	ldr	r0, [r7, #4]
 8002f3c:	f7ff f884 	bl	8002048 <HAL_CAN_MspInit>
 8002f40:	687b      	ldr	r3, [r7, #4]
 8002f42:	681b      	ldr	r3, [r3, #0]
 8002f44:	681a      	ldr	r2, [r3, #0]
 8002f46:	687b      	ldr	r3, [r7, #4]
 8002f48:	681b      	ldr	r3, [r3, #0]
 8002f4a:	f042 0201 	orr.w	r2, r2, #1
 8002f4e:	601a      	str	r2, [r3, #0]
 8002f50:	f7ff fb0e 	bl	8002570 <HAL_GetTick>
 8002f54:	60f8      	str	r0, [r7, #12]
 8002f56:	e012      	b.n	8002f7e <HAL_CAN_Init+0x62>
 8002f58:	f7ff fb0a 	bl	8002570 <HAL_GetTick>
 8002f5c:	4602      	mov	r2, r0
 8002f5e:	68fb      	ldr	r3, [r7, #12]
 8002f60:	1ad3      	subs	r3, r2, r3
 8002f62:	2b0a      	cmp	r3, #10
 8002f64:	d90b      	bls.n	8002f7e <HAL_CAN_Init+0x62>
 8002f66:	687b      	ldr	r3, [r7, #4]
 8002f68:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002f6a:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 8002f6e:	687b      	ldr	r3, [r7, #4]
 8002f70:	625a      	str	r2, [r3, #36]	@ 0x24
 8002f72:	687b      	ldr	r3, [r7, #4]
 8002f74:	2205      	movs	r2, #5
 8002f76:	f883 2020 	strb.w	r2, [r3, #32]
 8002f7a:	2301      	movs	r3, #1
 8002f7c:	e0c5      	b.n	800310a <HAL_CAN_Init+0x1ee>
 8002f7e:	687b      	ldr	r3, [r7, #4]
 8002f80:	681b      	ldr	r3, [r3, #0]
 8002f82:	685b      	ldr	r3, [r3, #4]
 8002f84:	f003 0301 	and.w	r3, r3, #1
 8002f88:	2b00      	cmp	r3, #0
 8002f8a:	d0e5      	beq.n	8002f58 <HAL_CAN_Init+0x3c>
 8002f8c:	687b      	ldr	r3, [r7, #4]
 8002f8e:	681b      	ldr	r3, [r3, #0]
 8002f90:	681a      	ldr	r2, [r3, #0]
 8002f92:	687b      	ldr	r3, [r7, #4]
 8002f94:	681b      	ldr	r3, [r3, #0]
 8002f96:	f022 0202 	bic.w	r2, r2, #2
 8002f9a:	601a      	str	r2, [r3, #0]
 8002f9c:	f7ff fae8 	bl	8002570 <HAL_GetTick>
 8002fa0:	60f8      	str	r0, [r7, #12]
 8002fa2:	e012      	b.n	8002fca <HAL_CAN_Init+0xae>
 8002fa4:	f7ff fae4 	bl	8002570 <HAL_GetTick>
 8002fa8:	4602      	mov	r2, r0
 8002faa:	68fb      	ldr	r3, [r7, #12]
 8002fac:	1ad3      	subs	r3, r2, r3
 8002fae:	2b0a      	cmp	r3, #10
 8002fb0:	d90b      	bls.n	8002fca <HAL_CAN_Init+0xae>
 8002fb2:	687b      	ldr	r3, [r7, #4]
 8002fb4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8002fb6:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 8002fba:	687b      	ldr	r3, [r7, #4]
 8002fbc:	625a      	str	r2, [r3, #36]	@ 0x24
 8002fbe:	687b      	ldr	r3, [r7, #4]
 8002fc0:	2205      	movs	r2, #5
 8002fc2:	f883 2020 	strb.w	r2, [r3, #32]
 8002fc6:	2301      	movs	r3, #1
 8002fc8:	e09f      	b.n	800310a <HAL_CAN_Init+0x1ee>
 8002fca:	687b      	ldr	r3, [r7, #4]
 8002fcc:	681b      	ldr	r3, [r3, #0]
 8002fce:	685b      	ldr	r3, [r3, #4]
 8002fd0:	f003 0302 	and.w	r3, r3, #2
 8002fd4:	2b00      	cmp	r3, #0
 8002fd6:	d1e5      	bne.n	8002fa4 <HAL_CAN_Init+0x88>
 8002fd8:	687b      	ldr	r3, [r7, #4]
 8002fda:	7e1b      	ldrb	r3, [r3, #24]
 8002fdc:	2b01      	cmp	r3, #1
 8002fde:	d108      	bne.n	8002ff2 <HAL_CAN_Init+0xd6>
 8002fe0:	687b      	ldr	r3, [r7, #4]
 8002fe2:	681b      	ldr	r3, [r3, #0]
 8002fe4:	681a      	ldr	r2, [r3, #0]
 8002fe6:	687b      	ldr	r3, [r7, #4]
 8002fe8:	681b      	ldr	r3, [r3, #0]
 8002fea:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 8002fee:	601a      	str	r2, [r3, #0]
 8002ff0:	e007      	b.n	8003002 <HAL_CAN_Init+0xe6>
 8002ff2:	687b      	ldr	r3, [r7, #4]
 8002ff4:	681b      	ldr	r3, [r3, #0]
 8002ff6:	681a      	ldr	r2, [r3, #0]
 8002ff8:	687b      	ldr	r3, [r7, #4]
 8002ffa:	681b      	ldr	r3, [r3, #0]
 8002ffc:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8003000:	601a      	str	r2, [r3, #0]
 8003002:	687b      	ldr	r3, [r7, #4]
 8003004:	7e5b      	ldrb	r3, [r3, #25]
 8003006:	2b01      	cmp	r3, #1
 8003008:	d108      	bne.n	800301c <HAL_CAN_Init+0x100>
 800300a:	687b      	ldr	r3, [r7, #4]
 800300c:	681b      	ldr	r3, [r3, #0]
 800300e:	681a      	ldr	r2, [r3, #0]
 8003010:	687b      	ldr	r3, [r7, #4]
 8003012:	681b      	ldr	r3, [r3, #0]
 8003014:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8003018:	601a      	str	r2, [r3, #0]
 800301a:	e007      	b.n	800302c <HAL_CAN_Init+0x110>
 800301c:	687b      	ldr	r3, [r7, #4]
 800301e:	681b      	ldr	r3, [r3, #0]
 8003020:	681a      	ldr	r2, [r3, #0]
 8003022:	687b      	ldr	r3, [r7, #4]
 8003024:	681b      	ldr	r3, [r3, #0]
 8003026:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800302a:	601a      	str	r2, [r3, #0]
 800302c:	687b      	ldr	r3, [r7, #4]
 800302e:	7e9b      	ldrb	r3, [r3, #26]
 8003030:	2b01      	cmp	r3, #1
 8003032:	d108      	bne.n	8003046 <HAL_CAN_Init+0x12a>
 8003034:	687b      	ldr	r3, [r7, #4]
 8003036:	681b      	ldr	r3, [r3, #0]
 8003038:	681a      	ldr	r2, [r3, #0]
 800303a:	687b      	ldr	r3, [r7, #4]
 800303c:	681b      	ldr	r3, [r3, #0]
 800303e:	f042 0220 	orr.w	r2, r2, #32
 8003042:	601a      	str	r2, [r3, #0]
 8003044:	e007      	b.n	8003056 <HAL_CAN_Init+0x13a>
 8003046:	687b      	ldr	r3, [r7, #4]
 8003048:	681b      	ldr	r3, [r3, #0]
 800304a:	681a      	ldr	r2, [r3, #0]
 800304c:	687b      	ldr	r3, [r7, #4]
 800304e:	681b      	ldr	r3, [r3, #0]
 8003050:	f022 0220 	bic.w	r2, r2, #32
 8003054:	601a      	str	r2, [r3, #0]
 8003056:	687b      	ldr	r3, [r7, #4]
 8003058:	7edb      	ldrb	r3, [r3, #27]
 800305a:	2b01      	cmp	r3, #1
 800305c:	d108      	bne.n	8003070 <HAL_CAN_Init+0x154>
 800305e:	687b      	ldr	r3, [r7, #4]
 8003060:	681b      	ldr	r3, [r3, #0]
 8003062:	681a      	ldr	r2, [r3, #0]
 8003064:	687b      	ldr	r3, [r7, #4]
 8003066:	681b      	ldr	r3, [r3, #0]
 8003068:	f022 0210 	bic.w	r2, r2, #16
 800306c:	601a      	str	r2, [r3, #0]
 800306e:	e007      	b.n	8003080 <HAL_CAN_Init+0x164>
 8003070:	687b      	ldr	r3, [r7, #4]
 8003072:	681b      	ldr	r3, [r3, #0]
 8003074:	681a      	ldr	r2, [r3, #0]
 8003076:	687b      	ldr	r3, [r7, #4]
 8003078:	681b      	ldr	r3, [r3, #0]
 800307a:	f042 0210 	orr.w	r2, r2, #16
 800307e:	601a      	str	r2, [r3, #0]
 8003080:	687b      	ldr	r3, [r7, #4]
 8003082:	7f1b      	ldrb	r3, [r3, #28]
 8003084:	2b01      	cmp	r3, #1
 8003086:	d108      	bne.n	800309a <HAL_CAN_Init+0x17e>
 8003088:	687b      	ldr	r3, [r7, #4]
 800308a:	681b      	ldr	r3, [r3, #0]
 800308c:	681a      	ldr	r2, [r3, #0]
 800308e:	687b      	ldr	r3, [r7, #4]
 8003090:	681b      	ldr	r3, [r3, #0]
 8003092:	f042 0208 	orr.w	r2, r2, #8
 8003096:	601a      	str	r2, [r3, #0]
 8003098:	e007      	b.n	80030aa <HAL_CAN_Init+0x18e>
 800309a:	687b      	ldr	r3, [r7, #4]
 800309c:	681b      	ldr	r3, [r3, #0]
 800309e:	681a      	ldr	r2, [r3, #0]
 80030a0:	687b      	ldr	r3, [r7, #4]
 80030a2:	681b      	ldr	r3, [r3, #0]
 80030a4:	f022 0208 	bic.w	r2, r2, #8
 80030a8:	601a      	str	r2, [r3, #0]
 80030aa:	687b      	ldr	r3, [r7, #4]
 80030ac:	7f5b      	ldrb	r3, [r3, #29]
 80030ae:	2b01      	cmp	r3, #1
 80030b0:	d108      	bne.n	80030c4 <HAL_CAN_Init+0x1a8>
 80030b2:	687b      	ldr	r3, [r7, #4]
 80030b4:	681b      	ldr	r3, [r3, #0]
 80030b6:	681a      	ldr	r2, [r3, #0]
 80030b8:	687b      	ldr	r3, [r7, #4]
 80030ba:	681b      	ldr	r3, [r3, #0]
 80030bc:	f042 0204 	orr.w	r2, r2, #4
 80030c0:	601a      	str	r2, [r3, #0]
 80030c2:	e007      	b.n	80030d4 <HAL_CAN_Init+0x1b8>
 80030c4:	687b      	ldr	r3, [r7, #4]
 80030c6:	681b      	ldr	r3, [r3, #0]
 80030c8:	681a      	ldr	r2, [r3, #0]
 80030ca:	687b      	ldr	r3, [r7, #4]
 80030cc:	681b      	ldr	r3, [r3, #0]
 80030ce:	f022 0204 	bic.w	r2, r2, #4
 80030d2:	601a      	str	r2, [r3, #0]
 80030d4:	687b      	ldr	r3, [r7, #4]
 80030d6:	689a      	ldr	r2, [r3, #8]
 80030d8:	687b      	ldr	r3, [r7, #4]
 80030da:	68db      	ldr	r3, [r3, #12]
 80030dc:	431a      	orrs	r2, r3
 80030de:	687b      	ldr	r3, [r7, #4]
 80030e0:	691b      	ldr	r3, [r3, #16]
 80030e2:	431a      	orrs	r2, r3
 80030e4:	687b      	ldr	r3, [r7, #4]
 80030e6:	695b      	ldr	r3, [r3, #20]
 80030e8:	ea42 0103 	orr.w	r1, r2, r3
 80030ec:	687b      	ldr	r3, [r7, #4]
 80030ee:	685b      	ldr	r3, [r3, #4]
 80030f0:	1e5a      	subs	r2, r3, #1
 80030f2:	687b      	ldr	r3, [r7, #4]
 80030f4:	681b      	ldr	r3, [r3, #0]
 80030f6:	430a      	orrs	r2, r1
 80030f8:	61da      	str	r2, [r3, #28]
 80030fa:	687b      	ldr	r3, [r7, #4]
 80030fc:	2200      	movs	r2, #0
 80030fe:	625a      	str	r2, [r3, #36]	@ 0x24
 8003100:	687b      	ldr	r3, [r7, #4]
 8003102:	2201      	movs	r2, #1
 8003104:	f883 2020 	strb.w	r2, [r3, #32]
 8003108:	2300      	movs	r3, #0
 800310a:	4618      	mov	r0, r3
 800310c:	3710      	adds	r7, #16
 800310e:	46bd      	mov	sp, r7
 8003110:	bd80      	pop	{r7, pc}
	...

08003114 <HAL_CAN_ConfigFilter>:
 8003114:	b480      	push	{r7}
 8003116:	b087      	sub	sp, #28
 8003118:	af00      	add	r7, sp, #0
 800311a:	6078      	str	r0, [r7, #4]
 800311c:	6039      	str	r1, [r7, #0]
 800311e:	687b      	ldr	r3, [r7, #4]
 8003120:	681b      	ldr	r3, [r3, #0]
 8003122:	617b      	str	r3, [r7, #20]
 8003124:	687b      	ldr	r3, [r7, #4]
 8003126:	f893 3020 	ldrb.w	r3, [r3, #32]
 800312a:	74fb      	strb	r3, [r7, #19]
 800312c:	7cfb      	ldrb	r3, [r7, #19]
 800312e:	2b01      	cmp	r3, #1
 8003130:	d003      	beq.n	800313a <HAL_CAN_ConfigFilter+0x26>
 8003132:	7cfb      	ldrb	r3, [r7, #19]
 8003134:	2b02      	cmp	r3, #2
 8003136:	f040 80be 	bne.w	80032b6 <HAL_CAN_ConfigFilter+0x1a2>
 800313a:	4b65      	ldr	r3, [pc, #404]	@ (80032d0 <HAL_CAN_ConfigFilter+0x1bc>)
 800313c:	617b      	str	r3, [r7, #20]
 800313e:	697b      	ldr	r3, [r7, #20]
 8003140:	f8d3 3200 	ldr.w	r3, [r3, #512]	@ 0x200
 8003144:	f043 0201 	orr.w	r2, r3, #1
 8003148:	697b      	ldr	r3, [r7, #20]
 800314a:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 800314e:	697b      	ldr	r3, [r7, #20]
 8003150:	f8d3 3200 	ldr.w	r3, [r3, #512]	@ 0x200
 8003154:	f423 527c 	bic.w	r2, r3, #16128	@ 0x3f00
 8003158:	697b      	ldr	r3, [r7, #20]
 800315a:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 800315e:	697b      	ldr	r3, [r7, #20]
 8003160:	f8d3 2200 	ldr.w	r2, [r3, #512]	@ 0x200
 8003164:	683b      	ldr	r3, [r7, #0]
 8003166:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003168:	021b      	lsls	r3, r3, #8
 800316a:	431a      	orrs	r2, r3
 800316c:	697b      	ldr	r3, [r7, #20]
 800316e:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 8003172:	683b      	ldr	r3, [r7, #0]
 8003174:	695b      	ldr	r3, [r3, #20]
 8003176:	f003 031f 	and.w	r3, r3, #31
 800317a:	2201      	movs	r2, #1
 800317c:	fa02 f303 	lsl.w	r3, r2, r3
 8003180:	60fb      	str	r3, [r7, #12]
 8003182:	697b      	ldr	r3, [r7, #20]
 8003184:	f8d3 221c 	ldr.w	r2, [r3, #540]	@ 0x21c
 8003188:	68fb      	ldr	r3, [r7, #12]
 800318a:	43db      	mvns	r3, r3
 800318c:	401a      	ands	r2, r3
 800318e:	697b      	ldr	r3, [r7, #20]
 8003190:	f8c3 221c 	str.w	r2, [r3, #540]	@ 0x21c
 8003194:	683b      	ldr	r3, [r7, #0]
 8003196:	69db      	ldr	r3, [r3, #28]
 8003198:	2b00      	cmp	r3, #0
 800319a:	d123      	bne.n	80031e4 <HAL_CAN_ConfigFilter+0xd0>
 800319c:	697b      	ldr	r3, [r7, #20]
 800319e:	f8d3 220c 	ldr.w	r2, [r3, #524]	@ 0x20c
 80031a2:	68fb      	ldr	r3, [r7, #12]
 80031a4:	43db      	mvns	r3, r3
 80031a6:	401a      	ands	r2, r3
 80031a8:	697b      	ldr	r3, [r7, #20]
 80031aa:	f8c3 220c 	str.w	r2, [r3, #524]	@ 0x20c
 80031ae:	683b      	ldr	r3, [r7, #0]
 80031b0:	68db      	ldr	r3, [r3, #12]
 80031b2:	0419      	lsls	r1, r3, #16
 80031b4:	683b      	ldr	r3, [r7, #0]
 80031b6:	685b      	ldr	r3, [r3, #4]
 80031b8:	b29b      	uxth	r3, r3
 80031ba:	683a      	ldr	r2, [r7, #0]
 80031bc:	6952      	ldr	r2, [r2, #20]
 80031be:	4319      	orrs	r1, r3
 80031c0:	697b      	ldr	r3, [r7, #20]
 80031c2:	3248      	adds	r2, #72	@ 0x48
 80031c4:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
 80031c8:	683b      	ldr	r3, [r7, #0]
 80031ca:	689b      	ldr	r3, [r3, #8]
 80031cc:	0419      	lsls	r1, r3, #16
 80031ce:	683b      	ldr	r3, [r7, #0]
 80031d0:	681b      	ldr	r3, [r3, #0]
 80031d2:	b29a      	uxth	r2, r3
 80031d4:	683b      	ldr	r3, [r7, #0]
 80031d6:	695b      	ldr	r3, [r3, #20]
 80031d8:	430a      	orrs	r2, r1
 80031da:	6979      	ldr	r1, [r7, #20]
 80031dc:	3348      	adds	r3, #72	@ 0x48
 80031de:	00db      	lsls	r3, r3, #3
 80031e0:	440b      	add	r3, r1
 80031e2:	605a      	str	r2, [r3, #4]
 80031e4:	683b      	ldr	r3, [r7, #0]
 80031e6:	69db      	ldr	r3, [r3, #28]
 80031e8:	2b01      	cmp	r3, #1
 80031ea:	d122      	bne.n	8003232 <HAL_CAN_ConfigFilter+0x11e>
 80031ec:	697b      	ldr	r3, [r7, #20]
 80031ee:	f8d3 220c 	ldr.w	r2, [r3, #524]	@ 0x20c
 80031f2:	68fb      	ldr	r3, [r7, #12]
 80031f4:	431a      	orrs	r2, r3
 80031f6:	697b      	ldr	r3, [r7, #20]
 80031f8:	f8c3 220c 	str.w	r2, [r3, #524]	@ 0x20c
 80031fc:	683b      	ldr	r3, [r7, #0]
 80031fe:	681b      	ldr	r3, [r3, #0]
 8003200:	0419      	lsls	r1, r3, #16
 8003202:	683b      	ldr	r3, [r7, #0]
 8003204:	685b      	ldr	r3, [r3, #4]
 8003206:	b29b      	uxth	r3, r3
 8003208:	683a      	ldr	r2, [r7, #0]
 800320a:	6952      	ldr	r2, [r2, #20]
 800320c:	4319      	orrs	r1, r3
 800320e:	697b      	ldr	r3, [r7, #20]
 8003210:	3248      	adds	r2, #72	@ 0x48
 8003212:	f843 1032 	str.w	r1, [r3, r2, lsl #3]
 8003216:	683b      	ldr	r3, [r7, #0]
 8003218:	689b      	ldr	r3, [r3, #8]
 800321a:	0419      	lsls	r1, r3, #16
 800321c:	683b      	ldr	r3, [r7, #0]
 800321e:	68db      	ldr	r3, [r3, #12]
 8003220:	b29a      	uxth	r2, r3
 8003222:	683b      	ldr	r3, [r7, #0]
 8003224:	695b      	ldr	r3, [r3, #20]
 8003226:	430a      	orrs	r2, r1
 8003228:	6979      	ldr	r1, [r7, #20]
 800322a:	3348      	adds	r3, #72	@ 0x48
 800322c:	00db      	lsls	r3, r3, #3
 800322e:	440b      	add	r3, r1
 8003230:	605a      	str	r2, [r3, #4]
 8003232:	683b      	ldr	r3, [r7, #0]
 8003234:	699b      	ldr	r3, [r3, #24]
 8003236:	2b00      	cmp	r3, #0
 8003238:	d109      	bne.n	800324e <HAL_CAN_ConfigFilter+0x13a>
 800323a:	697b      	ldr	r3, [r7, #20]
 800323c:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 8003240:	68fb      	ldr	r3, [r7, #12]
 8003242:	43db      	mvns	r3, r3
 8003244:	401a      	ands	r2, r3
 8003246:	697b      	ldr	r3, [r7, #20]
 8003248:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
 800324c:	e007      	b.n	800325e <HAL_CAN_ConfigFilter+0x14a>
 800324e:	697b      	ldr	r3, [r7, #20]
 8003250:	f8d3 2204 	ldr.w	r2, [r3, #516]	@ 0x204
 8003254:	68fb      	ldr	r3, [r7, #12]
 8003256:	431a      	orrs	r2, r3
 8003258:	697b      	ldr	r3, [r7, #20]
 800325a:	f8c3 2204 	str.w	r2, [r3, #516]	@ 0x204
 800325e:	683b      	ldr	r3, [r7, #0]
 8003260:	691b      	ldr	r3, [r3, #16]
 8003262:	2b00      	cmp	r3, #0
 8003264:	d109      	bne.n	800327a <HAL_CAN_ConfigFilter+0x166>
 8003266:	697b      	ldr	r3, [r7, #20]
 8003268:	f8d3 2214 	ldr.w	r2, [r3, #532]	@ 0x214
 800326c:	68fb      	ldr	r3, [r7, #12]
 800326e:	43db      	mvns	r3, r3
 8003270:	401a      	ands	r2, r3
 8003272:	697b      	ldr	r3, [r7, #20]
 8003274:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
 8003278:	e007      	b.n	800328a <HAL_CAN_ConfigFilter+0x176>
 800327a:	697b      	ldr	r3, [r7, #20]
 800327c:	f8d3 2214 	ldr.w	r2, [r3, #532]	@ 0x214
 8003280:	68fb      	ldr	r3, [r7, #12]
 8003282:	431a      	orrs	r2, r3
 8003284:	697b      	ldr	r3, [r7, #20]
 8003286:	f8c3 2214 	str.w	r2, [r3, #532]	@ 0x214
 800328a:	683b      	ldr	r3, [r7, #0]
 800328c:	6a1b      	ldr	r3, [r3, #32]
 800328e:	2b01      	cmp	r3, #1
 8003290:	d107      	bne.n	80032a2 <HAL_CAN_ConfigFilter+0x18e>
 8003292:	697b      	ldr	r3, [r7, #20]
 8003294:	f8d3 221c 	ldr.w	r2, [r3, #540]	@ 0x21c
 8003298:	68fb      	ldr	r3, [r7, #12]
 800329a:	431a      	orrs	r2, r3
 800329c:	697b      	ldr	r3, [r7, #20]
 800329e:	f8c3 221c 	str.w	r2, [r3, #540]	@ 0x21c
 80032a2:	697b      	ldr	r3, [r7, #20]
 80032a4:	f8d3 3200 	ldr.w	r3, [r3, #512]	@ 0x200
 80032a8:	f023 0201 	bic.w	r2, r3, #1
 80032ac:	697b      	ldr	r3, [r7, #20]
 80032ae:	f8c3 2200 	str.w	r2, [r3, #512]	@ 0x200
 80032b2:	2300      	movs	r3, #0
 80032b4:	e006      	b.n	80032c4 <HAL_CAN_ConfigFilter+0x1b0>
 80032b6:	687b      	ldr	r3, [r7, #4]
 80032b8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80032ba:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 80032be:	687b      	ldr	r3, [r7, #4]
 80032c0:	625a      	str	r2, [r3, #36]	@ 0x24
 80032c2:	2301      	movs	r3, #1
 80032c4:	4618      	mov	r0, r3
 80032c6:	371c      	adds	r7, #28
 80032c8:	46bd      	mov	sp, r7
 80032ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032ce:	4770      	bx	lr
 80032d0:	40006400 	.word	0x40006400

080032d4 <HAL_CAN_Start>:
 80032d4:	b580      	push	{r7, lr}
 80032d6:	b084      	sub	sp, #16
 80032d8:	af00      	add	r7, sp, #0
 80032da:	6078      	str	r0, [r7, #4]
 80032dc:	687b      	ldr	r3, [r7, #4]
 80032de:	f893 3020 	ldrb.w	r3, [r3, #32]
 80032e2:	b2db      	uxtb	r3, r3
 80032e4:	2b01      	cmp	r3, #1
 80032e6:	d12e      	bne.n	8003346 <HAL_CAN_Start+0x72>
 80032e8:	687b      	ldr	r3, [r7, #4]
 80032ea:	2202      	movs	r2, #2
 80032ec:	f883 2020 	strb.w	r2, [r3, #32]
 80032f0:	687b      	ldr	r3, [r7, #4]
 80032f2:	681b      	ldr	r3, [r3, #0]
 80032f4:	681a      	ldr	r2, [r3, #0]
 80032f6:	687b      	ldr	r3, [r7, #4]
 80032f8:	681b      	ldr	r3, [r3, #0]
 80032fa:	f022 0201 	bic.w	r2, r2, #1
 80032fe:	601a      	str	r2, [r3, #0]
 8003300:	f7ff f936 	bl	8002570 <HAL_GetTick>
 8003304:	60f8      	str	r0, [r7, #12]
 8003306:	e012      	b.n	800332e <HAL_CAN_Start+0x5a>
 8003308:	f7ff f932 	bl	8002570 <HAL_GetTick>
 800330c:	4602      	mov	r2, r0
 800330e:	68fb      	ldr	r3, [r7, #12]
 8003310:	1ad3      	subs	r3, r2, r3
 8003312:	2b0a      	cmp	r3, #10
 8003314:	d90b      	bls.n	800332e <HAL_CAN_Start+0x5a>
 8003316:	687b      	ldr	r3, [r7, #4]
 8003318:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800331a:	f443 3200 	orr.w	r2, r3, #131072	@ 0x20000
 800331e:	687b      	ldr	r3, [r7, #4]
 8003320:	625a      	str	r2, [r3, #36]	@ 0x24
 8003322:	687b      	ldr	r3, [r7, #4]
 8003324:	2205      	movs	r2, #5
 8003326:	f883 2020 	strb.w	r2, [r3, #32]
 800332a:	2301      	movs	r3, #1
 800332c:	e012      	b.n	8003354 <HAL_CAN_Start+0x80>
 800332e:	687b      	ldr	r3, [r7, #4]
 8003330:	681b      	ldr	r3, [r3, #0]
 8003332:	685b      	ldr	r3, [r3, #4]
 8003334:	f003 0301 	and.w	r3, r3, #1
 8003338:	2b00      	cmp	r3, #0
 800333a:	d1e5      	bne.n	8003308 <HAL_CAN_Start+0x34>
 800333c:	687b      	ldr	r3, [r7, #4]
 800333e:	2200      	movs	r2, #0
 8003340:	625a      	str	r2, [r3, #36]	@ 0x24
 8003342:	2300      	movs	r3, #0
 8003344:	e006      	b.n	8003354 <HAL_CAN_Start+0x80>
 8003346:	687b      	ldr	r3, [r7, #4]
 8003348:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800334a:	f443 2200 	orr.w	r2, r3, #524288	@ 0x80000
 800334e:	687b      	ldr	r3, [r7, #4]
 8003350:	625a      	str	r2, [r3, #36]	@ 0x24
 8003352:	2301      	movs	r3, #1
 8003354:	4618      	mov	r0, r3
 8003356:	3710      	adds	r7, #16
 8003358:	46bd      	mov	sp, r7
 800335a:	bd80      	pop	{r7, pc}

0800335c <HAL_CAN_AddTxMessage>:
 800335c:	b480      	push	{r7}
 800335e:	b089      	sub	sp, #36	@ 0x24
 8003360:	af00      	add	r7, sp, #0
 8003362:	60f8      	str	r0, [r7, #12]
 8003364:	60b9      	str	r1, [r7, #8]
 8003366:	607a      	str	r2, [r7, #4]
 8003368:	603b      	str	r3, [r7, #0]
 800336a:	68fb      	ldr	r3, [r7, #12]
 800336c:	f893 3020 	ldrb.w	r3, [r3, #32]
 8003370:	77fb      	strb	r3, [r7, #31]
 8003372:	68fb      	ldr	r3, [r7, #12]
 8003374:	681b      	ldr	r3, [r3, #0]
 8003376:	689b      	ldr	r3, [r3, #8]
 8003378:	61bb      	str	r3, [r7, #24]
 800337a:	7ffb      	ldrb	r3, [r7, #31]
 800337c:	2b01      	cmp	r3, #1
 800337e:	d003      	beq.n	8003388 <HAL_CAN_AddTxMessage+0x2c>
 8003380:	7ffb      	ldrb	r3, [r7, #31]
 8003382:	2b02      	cmp	r3, #2
 8003384:	f040 80ad 	bne.w	80034e2 <HAL_CAN_AddTxMessage+0x186>
 8003388:	69bb      	ldr	r3, [r7, #24]
 800338a:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 800338e:	2b00      	cmp	r3, #0
 8003390:	d10a      	bne.n	80033a8 <HAL_CAN_AddTxMessage+0x4c>
 8003392:	69bb      	ldr	r3, [r7, #24]
 8003394:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8003398:	2b00      	cmp	r3, #0
 800339a:	d105      	bne.n	80033a8 <HAL_CAN_AddTxMessage+0x4c>
 800339c:	69bb      	ldr	r3, [r7, #24]
 800339e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80033a2:	2b00      	cmp	r3, #0
 80033a4:	f000 8095 	beq.w	80034d2 <HAL_CAN_AddTxMessage+0x176>
 80033a8:	69bb      	ldr	r3, [r7, #24]
 80033aa:	0e1b      	lsrs	r3, r3, #24
 80033ac:	f003 0303 	and.w	r3, r3, #3
 80033b0:	617b      	str	r3, [r7, #20]
 80033b2:	2201      	movs	r2, #1
 80033b4:	697b      	ldr	r3, [r7, #20]
 80033b6:	409a      	lsls	r2, r3
 80033b8:	683b      	ldr	r3, [r7, #0]
 80033ba:	601a      	str	r2, [r3, #0]
 80033bc:	68bb      	ldr	r3, [r7, #8]
 80033be:	689b      	ldr	r3, [r3, #8]
 80033c0:	2b00      	cmp	r3, #0
 80033c2:	d10d      	bne.n	80033e0 <HAL_CAN_AddTxMessage+0x84>
 80033c4:	68bb      	ldr	r3, [r7, #8]
 80033c6:	681b      	ldr	r3, [r3, #0]
 80033c8:	055a      	lsls	r2, r3, #21
 80033ca:	68bb      	ldr	r3, [r7, #8]
 80033cc:	68db      	ldr	r3, [r3, #12]
 80033ce:	68f9      	ldr	r1, [r7, #12]
 80033d0:	6809      	ldr	r1, [r1, #0]
 80033d2:	431a      	orrs	r2, r3
 80033d4:	697b      	ldr	r3, [r7, #20]
 80033d6:	3318      	adds	r3, #24
 80033d8:	011b      	lsls	r3, r3, #4
 80033da:	440b      	add	r3, r1
 80033dc:	601a      	str	r2, [r3, #0]
 80033de:	e00f      	b.n	8003400 <HAL_CAN_AddTxMessage+0xa4>
 80033e0:	68bb      	ldr	r3, [r7, #8]
 80033e2:	685b      	ldr	r3, [r3, #4]
 80033e4:	00da      	lsls	r2, r3, #3
 80033e6:	68bb      	ldr	r3, [r7, #8]
 80033e8:	689b      	ldr	r3, [r3, #8]
 80033ea:	431a      	orrs	r2, r3
 80033ec:	68bb      	ldr	r3, [r7, #8]
 80033ee:	68db      	ldr	r3, [r3, #12]
 80033f0:	68f9      	ldr	r1, [r7, #12]
 80033f2:	6809      	ldr	r1, [r1, #0]
 80033f4:	431a      	orrs	r2, r3
 80033f6:	697b      	ldr	r3, [r7, #20]
 80033f8:	3318      	adds	r3, #24
 80033fa:	011b      	lsls	r3, r3, #4
 80033fc:	440b      	add	r3, r1
 80033fe:	601a      	str	r2, [r3, #0]
 8003400:	68fb      	ldr	r3, [r7, #12]
 8003402:	6819      	ldr	r1, [r3, #0]
 8003404:	68bb      	ldr	r3, [r7, #8]
 8003406:	691a      	ldr	r2, [r3, #16]
 8003408:	697b      	ldr	r3, [r7, #20]
 800340a:	3318      	adds	r3, #24
 800340c:	011b      	lsls	r3, r3, #4
 800340e:	440b      	add	r3, r1
 8003410:	3304      	adds	r3, #4
 8003412:	601a      	str	r2, [r3, #0]
 8003414:	68bb      	ldr	r3, [r7, #8]
 8003416:	7d1b      	ldrb	r3, [r3, #20]
 8003418:	2b01      	cmp	r3, #1
 800341a:	d111      	bne.n	8003440 <HAL_CAN_AddTxMessage+0xe4>
 800341c:	68fb      	ldr	r3, [r7, #12]
 800341e:	681a      	ldr	r2, [r3, #0]
 8003420:	697b      	ldr	r3, [r7, #20]
 8003422:	3318      	adds	r3, #24
 8003424:	011b      	lsls	r3, r3, #4
 8003426:	4413      	add	r3, r2
 8003428:	3304      	adds	r3, #4
 800342a:	681b      	ldr	r3, [r3, #0]
 800342c:	68fa      	ldr	r2, [r7, #12]
 800342e:	6811      	ldr	r1, [r2, #0]
 8003430:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8003434:	697b      	ldr	r3, [r7, #20]
 8003436:	3318      	adds	r3, #24
 8003438:	011b      	lsls	r3, r3, #4
 800343a:	440b      	add	r3, r1
 800343c:	3304      	adds	r3, #4
 800343e:	601a      	str	r2, [r3, #0]
 8003440:	687b      	ldr	r3, [r7, #4]
 8003442:	3307      	adds	r3, #7
 8003444:	781b      	ldrb	r3, [r3, #0]
 8003446:	061a      	lsls	r2, r3, #24
 8003448:	687b      	ldr	r3, [r7, #4]
 800344a:	3306      	adds	r3, #6
 800344c:	781b      	ldrb	r3, [r3, #0]
 800344e:	041b      	lsls	r3, r3, #16
 8003450:	431a      	orrs	r2, r3
 8003452:	687b      	ldr	r3, [r7, #4]
 8003454:	3305      	adds	r3, #5
 8003456:	781b      	ldrb	r3, [r3, #0]
 8003458:	021b      	lsls	r3, r3, #8
 800345a:	4313      	orrs	r3, r2
 800345c:	687a      	ldr	r2, [r7, #4]
 800345e:	3204      	adds	r2, #4
 8003460:	7812      	ldrb	r2, [r2, #0]
 8003462:	4610      	mov	r0, r2
 8003464:	68fa      	ldr	r2, [r7, #12]
 8003466:	6811      	ldr	r1, [r2, #0]
 8003468:	ea43 0200 	orr.w	r2, r3, r0
 800346c:	697b      	ldr	r3, [r7, #20]
 800346e:	011b      	lsls	r3, r3, #4
 8003470:	440b      	add	r3, r1
 8003472:	f503 73c6 	add.w	r3, r3, #396	@ 0x18c
 8003476:	601a      	str	r2, [r3, #0]
 8003478:	687b      	ldr	r3, [r7, #4]
 800347a:	3303      	adds	r3, #3
 800347c:	781b      	ldrb	r3, [r3, #0]
 800347e:	061a      	lsls	r2, r3, #24
 8003480:	687b      	ldr	r3, [r7, #4]
 8003482:	3302      	adds	r3, #2
 8003484:	781b      	ldrb	r3, [r3, #0]
 8003486:	041b      	lsls	r3, r3, #16
 8003488:	431a      	orrs	r2, r3
 800348a:	687b      	ldr	r3, [r7, #4]
 800348c:	3301      	adds	r3, #1
 800348e:	781b      	ldrb	r3, [r3, #0]
 8003490:	021b      	lsls	r3, r3, #8
 8003492:	4313      	orrs	r3, r2
 8003494:	687a      	ldr	r2, [r7, #4]
 8003496:	7812      	ldrb	r2, [r2, #0]
 8003498:	4610      	mov	r0, r2
 800349a:	68fa      	ldr	r2, [r7, #12]
 800349c:	6811      	ldr	r1, [r2, #0]
 800349e:	ea43 0200 	orr.w	r2, r3, r0
 80034a2:	697b      	ldr	r3, [r7, #20]
 80034a4:	011b      	lsls	r3, r3, #4
 80034a6:	440b      	add	r3, r1
 80034a8:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 80034ac:	601a      	str	r2, [r3, #0]
 80034ae:	68fb      	ldr	r3, [r7, #12]
 80034b0:	681a      	ldr	r2, [r3, #0]
 80034b2:	697b      	ldr	r3, [r7, #20]
 80034b4:	3318      	adds	r3, #24
 80034b6:	011b      	lsls	r3, r3, #4
 80034b8:	4413      	add	r3, r2
 80034ba:	681b      	ldr	r3, [r3, #0]
 80034bc:	68fa      	ldr	r2, [r7, #12]
 80034be:	6811      	ldr	r1, [r2, #0]
 80034c0:	f043 0201 	orr.w	r2, r3, #1
 80034c4:	697b      	ldr	r3, [r7, #20]
 80034c6:	3318      	adds	r3, #24
 80034c8:	011b      	lsls	r3, r3, #4
 80034ca:	440b      	add	r3, r1
 80034cc:	601a      	str	r2, [r3, #0]
 80034ce:	2300      	movs	r3, #0
 80034d0:	e00e      	b.n	80034f0 <HAL_CAN_AddTxMessage+0x194>
 80034d2:	68fb      	ldr	r3, [r7, #12]
 80034d4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80034d6:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 80034da:	68fb      	ldr	r3, [r7, #12]
 80034dc:	625a      	str	r2, [r3, #36]	@ 0x24
 80034de:	2301      	movs	r3, #1
 80034e0:	e006      	b.n	80034f0 <HAL_CAN_AddTxMessage+0x194>
 80034e2:	68fb      	ldr	r3, [r7, #12]
 80034e4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80034e6:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 80034ea:	68fb      	ldr	r3, [r7, #12]
 80034ec:	625a      	str	r2, [r3, #36]	@ 0x24
 80034ee:	2301      	movs	r3, #1
 80034f0:	4618      	mov	r0, r3
 80034f2:	3724      	adds	r7, #36	@ 0x24
 80034f4:	46bd      	mov	sp, r7
 80034f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034fa:	4770      	bx	lr

080034fc <HAL_CAN_GetTxMailboxesFreeLevel>:
 80034fc:	b480      	push	{r7}
 80034fe:	b085      	sub	sp, #20
 8003500:	af00      	add	r7, sp, #0
 8003502:	6078      	str	r0, [r7, #4]
 8003504:	2300      	movs	r3, #0
 8003506:	60fb      	str	r3, [r7, #12]
 8003508:	687b      	ldr	r3, [r7, #4]
 800350a:	f893 3020 	ldrb.w	r3, [r3, #32]
 800350e:	72fb      	strb	r3, [r7, #11]
 8003510:	7afb      	ldrb	r3, [r7, #11]
 8003512:	2b01      	cmp	r3, #1
 8003514:	d002      	beq.n	800351c <HAL_CAN_GetTxMailboxesFreeLevel+0x20>
 8003516:	7afb      	ldrb	r3, [r7, #11]
 8003518:	2b02      	cmp	r3, #2
 800351a:	d11d      	bne.n	8003558 <HAL_CAN_GetTxMailboxesFreeLevel+0x5c>
 800351c:	687b      	ldr	r3, [r7, #4]
 800351e:	681b      	ldr	r3, [r3, #0]
 8003520:	689b      	ldr	r3, [r3, #8]
 8003522:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8003526:	2b00      	cmp	r3, #0
 8003528:	d002      	beq.n	8003530 <HAL_CAN_GetTxMailboxesFreeLevel+0x34>
 800352a:	68fb      	ldr	r3, [r7, #12]
 800352c:	3301      	adds	r3, #1
 800352e:	60fb      	str	r3, [r7, #12]
 8003530:	687b      	ldr	r3, [r7, #4]
 8003532:	681b      	ldr	r3, [r3, #0]
 8003534:	689b      	ldr	r3, [r3, #8]
 8003536:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 800353a:	2b00      	cmp	r3, #0
 800353c:	d002      	beq.n	8003544 <HAL_CAN_GetTxMailboxesFreeLevel+0x48>
 800353e:	68fb      	ldr	r3, [r7, #12]
 8003540:	3301      	adds	r3, #1
 8003542:	60fb      	str	r3, [r7, #12]
 8003544:	687b      	ldr	r3, [r7, #4]
 8003546:	681b      	ldr	r3, [r3, #0]
 8003548:	689b      	ldr	r3, [r3, #8]
 800354a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800354e:	2b00      	cmp	r3, #0
 8003550:	d002      	beq.n	8003558 <HAL_CAN_GetTxMailboxesFreeLevel+0x5c>
 8003552:	68fb      	ldr	r3, [r7, #12]
 8003554:	3301      	adds	r3, #1
 8003556:	60fb      	str	r3, [r7, #12]
 8003558:	68fb      	ldr	r3, [r7, #12]
 800355a:	4618      	mov	r0, r3
 800355c:	3714      	adds	r7, #20
 800355e:	46bd      	mov	sp, r7
 8003560:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003564:	4770      	bx	lr

08003566 <HAL_CAN_GetRxMessage>:
 8003566:	b480      	push	{r7}
 8003568:	b087      	sub	sp, #28
 800356a:	af00      	add	r7, sp, #0
 800356c:	60f8      	str	r0, [r7, #12]
 800356e:	60b9      	str	r1, [r7, #8]
 8003570:	607a      	str	r2, [r7, #4]
 8003572:	603b      	str	r3, [r7, #0]
 8003574:	68fb      	ldr	r3, [r7, #12]
 8003576:	f893 3020 	ldrb.w	r3, [r3, #32]
 800357a:	75fb      	strb	r3, [r7, #23]
 800357c:	7dfb      	ldrb	r3, [r7, #23]
 800357e:	2b01      	cmp	r3, #1
 8003580:	d003      	beq.n	800358a <HAL_CAN_GetRxMessage+0x24>
 8003582:	7dfb      	ldrb	r3, [r7, #23]
 8003584:	2b02      	cmp	r3, #2
 8003586:	f040 8103 	bne.w	8003790 <HAL_CAN_GetRxMessage+0x22a>
 800358a:	68bb      	ldr	r3, [r7, #8]
 800358c:	2b00      	cmp	r3, #0
 800358e:	d10e      	bne.n	80035ae <HAL_CAN_GetRxMessage+0x48>
 8003590:	68fb      	ldr	r3, [r7, #12]
 8003592:	681b      	ldr	r3, [r3, #0]
 8003594:	68db      	ldr	r3, [r3, #12]
 8003596:	f003 0303 	and.w	r3, r3, #3
 800359a:	2b00      	cmp	r3, #0
 800359c:	d116      	bne.n	80035cc <HAL_CAN_GetRxMessage+0x66>
 800359e:	68fb      	ldr	r3, [r7, #12]
 80035a0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80035a2:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 80035a6:	68fb      	ldr	r3, [r7, #12]
 80035a8:	625a      	str	r2, [r3, #36]	@ 0x24
 80035aa:	2301      	movs	r3, #1
 80035ac:	e0f7      	b.n	800379e <HAL_CAN_GetRxMessage+0x238>
 80035ae:	68fb      	ldr	r3, [r7, #12]
 80035b0:	681b      	ldr	r3, [r3, #0]
 80035b2:	691b      	ldr	r3, [r3, #16]
 80035b4:	f003 0303 	and.w	r3, r3, #3
 80035b8:	2b00      	cmp	r3, #0
 80035ba:	d107      	bne.n	80035cc <HAL_CAN_GetRxMessage+0x66>
 80035bc:	68fb      	ldr	r3, [r7, #12]
 80035be:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80035c0:	f443 1200 	orr.w	r2, r3, #2097152	@ 0x200000
 80035c4:	68fb      	ldr	r3, [r7, #12]
 80035c6:	625a      	str	r2, [r3, #36]	@ 0x24
 80035c8:	2301      	movs	r3, #1
 80035ca:	e0e8      	b.n	800379e <HAL_CAN_GetRxMessage+0x238>
 80035cc:	68fb      	ldr	r3, [r7, #12]
 80035ce:	681a      	ldr	r2, [r3, #0]
 80035d0:	68bb      	ldr	r3, [r7, #8]
 80035d2:	331b      	adds	r3, #27
 80035d4:	011b      	lsls	r3, r3, #4
 80035d6:	4413      	add	r3, r2
 80035d8:	681b      	ldr	r3, [r3, #0]
 80035da:	f003 0204 	and.w	r2, r3, #4
 80035de:	687b      	ldr	r3, [r7, #4]
 80035e0:	609a      	str	r2, [r3, #8]
 80035e2:	687b      	ldr	r3, [r7, #4]
 80035e4:	689b      	ldr	r3, [r3, #8]
 80035e6:	2b00      	cmp	r3, #0
 80035e8:	d10c      	bne.n	8003604 <HAL_CAN_GetRxMessage+0x9e>
 80035ea:	68fb      	ldr	r3, [r7, #12]
 80035ec:	681a      	ldr	r2, [r3, #0]
 80035ee:	68bb      	ldr	r3, [r7, #8]
 80035f0:	331b      	adds	r3, #27
 80035f2:	011b      	lsls	r3, r3, #4
 80035f4:	4413      	add	r3, r2
 80035f6:	681b      	ldr	r3, [r3, #0]
 80035f8:	0d5b      	lsrs	r3, r3, #21
 80035fa:	f3c3 020a 	ubfx	r2, r3, #0, #11
 80035fe:	687b      	ldr	r3, [r7, #4]
 8003600:	601a      	str	r2, [r3, #0]
 8003602:	e00b      	b.n	800361c <HAL_CAN_GetRxMessage+0xb6>
 8003604:	68fb      	ldr	r3, [r7, #12]
 8003606:	681a      	ldr	r2, [r3, #0]
 8003608:	68bb      	ldr	r3, [r7, #8]
 800360a:	331b      	adds	r3, #27
 800360c:	011b      	lsls	r3, r3, #4
 800360e:	4413      	add	r3, r2
 8003610:	681b      	ldr	r3, [r3, #0]
 8003612:	08db      	lsrs	r3, r3, #3
 8003614:	f023 4260 	bic.w	r2, r3, #3758096384	@ 0xe0000000
 8003618:	687b      	ldr	r3, [r7, #4]
 800361a:	605a      	str	r2, [r3, #4]
 800361c:	68fb      	ldr	r3, [r7, #12]
 800361e:	681a      	ldr	r2, [r3, #0]
 8003620:	68bb      	ldr	r3, [r7, #8]
 8003622:	331b      	adds	r3, #27
 8003624:	011b      	lsls	r3, r3, #4
 8003626:	4413      	add	r3, r2
 8003628:	681b      	ldr	r3, [r3, #0]
 800362a:	f003 0202 	and.w	r2, r3, #2
 800362e:	687b      	ldr	r3, [r7, #4]
 8003630:	60da      	str	r2, [r3, #12]
 8003632:	68fb      	ldr	r3, [r7, #12]
 8003634:	681a      	ldr	r2, [r3, #0]
 8003636:	68bb      	ldr	r3, [r7, #8]
 8003638:	331b      	adds	r3, #27
 800363a:	011b      	lsls	r3, r3, #4
 800363c:	4413      	add	r3, r2
 800363e:	3304      	adds	r3, #4
 8003640:	681b      	ldr	r3, [r3, #0]
 8003642:	f003 0308 	and.w	r3, r3, #8
 8003646:	2b00      	cmp	r3, #0
 8003648:	d003      	beq.n	8003652 <HAL_CAN_GetRxMessage+0xec>
 800364a:	687b      	ldr	r3, [r7, #4]
 800364c:	2208      	movs	r2, #8
 800364e:	611a      	str	r2, [r3, #16]
 8003650:	e00b      	b.n	800366a <HAL_CAN_GetRxMessage+0x104>
 8003652:	68fb      	ldr	r3, [r7, #12]
 8003654:	681a      	ldr	r2, [r3, #0]
 8003656:	68bb      	ldr	r3, [r7, #8]
 8003658:	331b      	adds	r3, #27
 800365a:	011b      	lsls	r3, r3, #4
 800365c:	4413      	add	r3, r2
 800365e:	3304      	adds	r3, #4
 8003660:	681b      	ldr	r3, [r3, #0]
 8003662:	f003 020f 	and.w	r2, r3, #15
 8003666:	687b      	ldr	r3, [r7, #4]
 8003668:	611a      	str	r2, [r3, #16]
 800366a:	68fb      	ldr	r3, [r7, #12]
 800366c:	681a      	ldr	r2, [r3, #0]
 800366e:	68bb      	ldr	r3, [r7, #8]
 8003670:	331b      	adds	r3, #27
 8003672:	011b      	lsls	r3, r3, #4
 8003674:	4413      	add	r3, r2
 8003676:	3304      	adds	r3, #4
 8003678:	681b      	ldr	r3, [r3, #0]
 800367a:	0a1b      	lsrs	r3, r3, #8
 800367c:	b2da      	uxtb	r2, r3
 800367e:	687b      	ldr	r3, [r7, #4]
 8003680:	619a      	str	r2, [r3, #24]
 8003682:	68fb      	ldr	r3, [r7, #12]
 8003684:	681a      	ldr	r2, [r3, #0]
 8003686:	68bb      	ldr	r3, [r7, #8]
 8003688:	331b      	adds	r3, #27
 800368a:	011b      	lsls	r3, r3, #4
 800368c:	4413      	add	r3, r2
 800368e:	3304      	adds	r3, #4
 8003690:	681b      	ldr	r3, [r3, #0]
 8003692:	0c1b      	lsrs	r3, r3, #16
 8003694:	b29a      	uxth	r2, r3
 8003696:	687b      	ldr	r3, [r7, #4]
 8003698:	615a      	str	r2, [r3, #20]
 800369a:	68fb      	ldr	r3, [r7, #12]
 800369c:	681a      	ldr	r2, [r3, #0]
 800369e:	68bb      	ldr	r3, [r7, #8]
 80036a0:	011b      	lsls	r3, r3, #4
 80036a2:	4413      	add	r3, r2
 80036a4:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 80036a8:	681b      	ldr	r3, [r3, #0]
 80036aa:	b2da      	uxtb	r2, r3
 80036ac:	683b      	ldr	r3, [r7, #0]
 80036ae:	701a      	strb	r2, [r3, #0]
 80036b0:	68fb      	ldr	r3, [r7, #12]
 80036b2:	681a      	ldr	r2, [r3, #0]
 80036b4:	68bb      	ldr	r3, [r7, #8]
 80036b6:	011b      	lsls	r3, r3, #4
 80036b8:	4413      	add	r3, r2
 80036ba:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 80036be:	681b      	ldr	r3, [r3, #0]
 80036c0:	0a1a      	lsrs	r2, r3, #8
 80036c2:	683b      	ldr	r3, [r7, #0]
 80036c4:	3301      	adds	r3, #1
 80036c6:	b2d2      	uxtb	r2, r2
 80036c8:	701a      	strb	r2, [r3, #0]
 80036ca:	68fb      	ldr	r3, [r7, #12]
 80036cc:	681a      	ldr	r2, [r3, #0]
 80036ce:	68bb      	ldr	r3, [r7, #8]
 80036d0:	011b      	lsls	r3, r3, #4
 80036d2:	4413      	add	r3, r2
 80036d4:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 80036d8:	681b      	ldr	r3, [r3, #0]
 80036da:	0c1a      	lsrs	r2, r3, #16
 80036dc:	683b      	ldr	r3, [r7, #0]
 80036de:	3302      	adds	r3, #2
 80036e0:	b2d2      	uxtb	r2, r2
 80036e2:	701a      	strb	r2, [r3, #0]
 80036e4:	68fb      	ldr	r3, [r7, #12]
 80036e6:	681a      	ldr	r2, [r3, #0]
 80036e8:	68bb      	ldr	r3, [r7, #8]
 80036ea:	011b      	lsls	r3, r3, #4
 80036ec:	4413      	add	r3, r2
 80036ee:	f503 73dc 	add.w	r3, r3, #440	@ 0x1b8
 80036f2:	681b      	ldr	r3, [r3, #0]
 80036f4:	0e1a      	lsrs	r2, r3, #24
 80036f6:	683b      	ldr	r3, [r7, #0]
 80036f8:	3303      	adds	r3, #3
 80036fa:	b2d2      	uxtb	r2, r2
 80036fc:	701a      	strb	r2, [r3, #0]
 80036fe:	68fb      	ldr	r3, [r7, #12]
 8003700:	681a      	ldr	r2, [r3, #0]
 8003702:	68bb      	ldr	r3, [r7, #8]
 8003704:	011b      	lsls	r3, r3, #4
 8003706:	4413      	add	r3, r2
 8003708:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 800370c:	681a      	ldr	r2, [r3, #0]
 800370e:	683b      	ldr	r3, [r7, #0]
 8003710:	3304      	adds	r3, #4
 8003712:	b2d2      	uxtb	r2, r2
 8003714:	701a      	strb	r2, [r3, #0]
 8003716:	68fb      	ldr	r3, [r7, #12]
 8003718:	681a      	ldr	r2, [r3, #0]
 800371a:	68bb      	ldr	r3, [r7, #8]
 800371c:	011b      	lsls	r3, r3, #4
 800371e:	4413      	add	r3, r2
 8003720:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 8003724:	681b      	ldr	r3, [r3, #0]
 8003726:	0a1a      	lsrs	r2, r3, #8
 8003728:	683b      	ldr	r3, [r7, #0]
 800372a:	3305      	adds	r3, #5
 800372c:	b2d2      	uxtb	r2, r2
 800372e:	701a      	strb	r2, [r3, #0]
 8003730:	68fb      	ldr	r3, [r7, #12]
 8003732:	681a      	ldr	r2, [r3, #0]
 8003734:	68bb      	ldr	r3, [r7, #8]
 8003736:	011b      	lsls	r3, r3, #4
 8003738:	4413      	add	r3, r2
 800373a:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 800373e:	681b      	ldr	r3, [r3, #0]
 8003740:	0c1a      	lsrs	r2, r3, #16
 8003742:	683b      	ldr	r3, [r7, #0]
 8003744:	3306      	adds	r3, #6
 8003746:	b2d2      	uxtb	r2, r2
 8003748:	701a      	strb	r2, [r3, #0]
 800374a:	68fb      	ldr	r3, [r7, #12]
 800374c:	681a      	ldr	r2, [r3, #0]
 800374e:	68bb      	ldr	r3, [r7, #8]
 8003750:	011b      	lsls	r3, r3, #4
 8003752:	4413      	add	r3, r2
 8003754:	f503 73de 	add.w	r3, r3, #444	@ 0x1bc
 8003758:	681b      	ldr	r3, [r3, #0]
 800375a:	0e1a      	lsrs	r2, r3, #24
 800375c:	683b      	ldr	r3, [r7, #0]
 800375e:	3307      	adds	r3, #7
 8003760:	b2d2      	uxtb	r2, r2
 8003762:	701a      	strb	r2, [r3, #0]
 8003764:	68bb      	ldr	r3, [r7, #8]
 8003766:	2b00      	cmp	r3, #0
 8003768:	d108      	bne.n	800377c <HAL_CAN_GetRxMessage+0x216>
 800376a:	68fb      	ldr	r3, [r7, #12]
 800376c:	681b      	ldr	r3, [r3, #0]
 800376e:	68da      	ldr	r2, [r3, #12]
 8003770:	68fb      	ldr	r3, [r7, #12]
 8003772:	681b      	ldr	r3, [r3, #0]
 8003774:	f042 0220 	orr.w	r2, r2, #32
 8003778:	60da      	str	r2, [r3, #12]
 800377a:	e007      	b.n	800378c <HAL_CAN_GetRxMessage+0x226>
 800377c:	68fb      	ldr	r3, [r7, #12]
 800377e:	681b      	ldr	r3, [r3, #0]
 8003780:	691a      	ldr	r2, [r3, #16]
 8003782:	68fb      	ldr	r3, [r7, #12]
 8003784:	681b      	ldr	r3, [r3, #0]
 8003786:	f042 0220 	orr.w	r2, r2, #32
 800378a:	611a      	str	r2, [r3, #16]
 800378c:	2300      	movs	r3, #0
 800378e:	e006      	b.n	800379e <HAL_CAN_GetRxMessage+0x238>
 8003790:	68fb      	ldr	r3, [r7, #12]
 8003792:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003794:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 8003798:	68fb      	ldr	r3, [r7, #12]
 800379a:	625a      	str	r2, [r3, #36]	@ 0x24
 800379c:	2301      	movs	r3, #1
 800379e:	4618      	mov	r0, r3
 80037a0:	371c      	adds	r7, #28
 80037a2:	46bd      	mov	sp, r7
 80037a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037a8:	4770      	bx	lr

080037aa <HAL_CAN_ActivateNotification>:
 80037aa:	b480      	push	{r7}
 80037ac:	b085      	sub	sp, #20
 80037ae:	af00      	add	r7, sp, #0
 80037b0:	6078      	str	r0, [r7, #4]
 80037b2:	6039      	str	r1, [r7, #0]
 80037b4:	687b      	ldr	r3, [r7, #4]
 80037b6:	f893 3020 	ldrb.w	r3, [r3, #32]
 80037ba:	73fb      	strb	r3, [r7, #15]
 80037bc:	7bfb      	ldrb	r3, [r7, #15]
 80037be:	2b01      	cmp	r3, #1
 80037c0:	d002      	beq.n	80037c8 <HAL_CAN_ActivateNotification+0x1e>
 80037c2:	7bfb      	ldrb	r3, [r7, #15]
 80037c4:	2b02      	cmp	r3, #2
 80037c6:	d109      	bne.n	80037dc <HAL_CAN_ActivateNotification+0x32>
 80037c8:	687b      	ldr	r3, [r7, #4]
 80037ca:	681b      	ldr	r3, [r3, #0]
 80037cc:	6959      	ldr	r1, [r3, #20]
 80037ce:	687b      	ldr	r3, [r7, #4]
 80037d0:	681b      	ldr	r3, [r3, #0]
 80037d2:	683a      	ldr	r2, [r7, #0]
 80037d4:	430a      	orrs	r2, r1
 80037d6:	615a      	str	r2, [r3, #20]
 80037d8:	2300      	movs	r3, #0
 80037da:	e006      	b.n	80037ea <HAL_CAN_ActivateNotification+0x40>
 80037dc:	687b      	ldr	r3, [r7, #4]
 80037de:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80037e0:	f443 2280 	orr.w	r2, r3, #262144	@ 0x40000
 80037e4:	687b      	ldr	r3, [r7, #4]
 80037e6:	625a      	str	r2, [r3, #36]	@ 0x24
 80037e8:	2301      	movs	r3, #1
 80037ea:	4618      	mov	r0, r3
 80037ec:	3714      	adds	r7, #20
 80037ee:	46bd      	mov	sp, r7
 80037f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037f4:	4770      	bx	lr

080037f6 <HAL_CAN_IRQHandler>:
 80037f6:	b580      	push	{r7, lr}
 80037f8:	b08a      	sub	sp, #40	@ 0x28
 80037fa:	af00      	add	r7, sp, #0
 80037fc:	6078      	str	r0, [r7, #4]
 80037fe:	2300      	movs	r3, #0
 8003800:	627b      	str	r3, [r7, #36]	@ 0x24
 8003802:	687b      	ldr	r3, [r7, #4]
 8003804:	681b      	ldr	r3, [r3, #0]
 8003806:	695b      	ldr	r3, [r3, #20]
 8003808:	623b      	str	r3, [r7, #32]
 800380a:	687b      	ldr	r3, [r7, #4]
 800380c:	681b      	ldr	r3, [r3, #0]
 800380e:	685b      	ldr	r3, [r3, #4]
 8003810:	61fb      	str	r3, [r7, #28]
 8003812:	687b      	ldr	r3, [r7, #4]
 8003814:	681b      	ldr	r3, [r3, #0]
 8003816:	689b      	ldr	r3, [r3, #8]
 8003818:	61bb      	str	r3, [r7, #24]
 800381a:	687b      	ldr	r3, [r7, #4]
 800381c:	681b      	ldr	r3, [r3, #0]
 800381e:	68db      	ldr	r3, [r3, #12]
 8003820:	617b      	str	r3, [r7, #20]
 8003822:	687b      	ldr	r3, [r7, #4]
 8003824:	681b      	ldr	r3, [r3, #0]
 8003826:	691b      	ldr	r3, [r3, #16]
 8003828:	613b      	str	r3, [r7, #16]
 800382a:	687b      	ldr	r3, [r7, #4]
 800382c:	681b      	ldr	r3, [r3, #0]
 800382e:	699b      	ldr	r3, [r3, #24]
 8003830:	60fb      	str	r3, [r7, #12]
 8003832:	6a3b      	ldr	r3, [r7, #32]
 8003834:	f003 0301 	and.w	r3, r3, #1
 8003838:	2b00      	cmp	r3, #0
 800383a:	d07c      	beq.n	8003936 <HAL_CAN_IRQHandler+0x140>
 800383c:	69bb      	ldr	r3, [r7, #24]
 800383e:	f003 0301 	and.w	r3, r3, #1
 8003842:	2b00      	cmp	r3, #0
 8003844:	d023      	beq.n	800388e <HAL_CAN_IRQHandler+0x98>
 8003846:	687b      	ldr	r3, [r7, #4]
 8003848:	681b      	ldr	r3, [r3, #0]
 800384a:	2201      	movs	r2, #1
 800384c:	609a      	str	r2, [r3, #8]
 800384e:	69bb      	ldr	r3, [r7, #24]
 8003850:	f003 0302 	and.w	r3, r3, #2
 8003854:	2b00      	cmp	r3, #0
 8003856:	d003      	beq.n	8003860 <HAL_CAN_IRQHandler+0x6a>
 8003858:	6878      	ldr	r0, [r7, #4]
 800385a:	f000 f983 	bl	8003b64 <HAL_CAN_TxMailbox0CompleteCallback>
 800385e:	e016      	b.n	800388e <HAL_CAN_IRQHandler+0x98>
 8003860:	69bb      	ldr	r3, [r7, #24]
 8003862:	f003 0304 	and.w	r3, r3, #4
 8003866:	2b00      	cmp	r3, #0
 8003868:	d004      	beq.n	8003874 <HAL_CAN_IRQHandler+0x7e>
 800386a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800386c:	f443 6300 	orr.w	r3, r3, #2048	@ 0x800
 8003870:	627b      	str	r3, [r7, #36]	@ 0x24
 8003872:	e00c      	b.n	800388e <HAL_CAN_IRQHandler+0x98>
 8003874:	69bb      	ldr	r3, [r7, #24]
 8003876:	f003 0308 	and.w	r3, r3, #8
 800387a:	2b00      	cmp	r3, #0
 800387c:	d004      	beq.n	8003888 <HAL_CAN_IRQHandler+0x92>
 800387e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003880:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8003884:	627b      	str	r3, [r7, #36]	@ 0x24
 8003886:	e002      	b.n	800388e <HAL_CAN_IRQHandler+0x98>
 8003888:	6878      	ldr	r0, [r7, #4]
 800388a:	f000 f989 	bl	8003ba0 <HAL_CAN_TxMailbox0AbortCallback>
 800388e:	69bb      	ldr	r3, [r7, #24]
 8003890:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003894:	2b00      	cmp	r3, #0
 8003896:	d024      	beq.n	80038e2 <HAL_CAN_IRQHandler+0xec>
 8003898:	687b      	ldr	r3, [r7, #4]
 800389a:	681b      	ldr	r3, [r3, #0]
 800389c:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80038a0:	609a      	str	r2, [r3, #8]
 80038a2:	69bb      	ldr	r3, [r7, #24]
 80038a4:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80038a8:	2b00      	cmp	r3, #0
 80038aa:	d003      	beq.n	80038b4 <HAL_CAN_IRQHandler+0xbe>
 80038ac:	6878      	ldr	r0, [r7, #4]
 80038ae:	f000 f963 	bl	8003b78 <HAL_CAN_TxMailbox1CompleteCallback>
 80038b2:	e016      	b.n	80038e2 <HAL_CAN_IRQHandler+0xec>
 80038b4:	69bb      	ldr	r3, [r7, #24]
 80038b6:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80038ba:	2b00      	cmp	r3, #0
 80038bc:	d004      	beq.n	80038c8 <HAL_CAN_IRQHandler+0xd2>
 80038be:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80038c0:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80038c4:	627b      	str	r3, [r7, #36]	@ 0x24
 80038c6:	e00c      	b.n	80038e2 <HAL_CAN_IRQHandler+0xec>
 80038c8:	69bb      	ldr	r3, [r7, #24]
 80038ca:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 80038ce:	2b00      	cmp	r3, #0
 80038d0:	d004      	beq.n	80038dc <HAL_CAN_IRQHandler+0xe6>
 80038d2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80038d4:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80038d8:	627b      	str	r3, [r7, #36]	@ 0x24
 80038da:	e002      	b.n	80038e2 <HAL_CAN_IRQHandler+0xec>
 80038dc:	6878      	ldr	r0, [r7, #4]
 80038de:	f000 f969 	bl	8003bb4 <HAL_CAN_TxMailbox1AbortCallback>
 80038e2:	69bb      	ldr	r3, [r7, #24]
 80038e4:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80038e8:	2b00      	cmp	r3, #0
 80038ea:	d024      	beq.n	8003936 <HAL_CAN_IRQHandler+0x140>
 80038ec:	687b      	ldr	r3, [r7, #4]
 80038ee:	681b      	ldr	r3, [r3, #0]
 80038f0:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 80038f4:	609a      	str	r2, [r3, #8]
 80038f6:	69bb      	ldr	r3, [r7, #24]
 80038f8:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80038fc:	2b00      	cmp	r3, #0
 80038fe:	d003      	beq.n	8003908 <HAL_CAN_IRQHandler+0x112>
 8003900:	6878      	ldr	r0, [r7, #4]
 8003902:	f000 f943 	bl	8003b8c <HAL_CAN_TxMailbox2CompleteCallback>
 8003906:	e016      	b.n	8003936 <HAL_CAN_IRQHandler+0x140>
 8003908:	69bb      	ldr	r3, [r7, #24]
 800390a:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 800390e:	2b00      	cmp	r3, #0
 8003910:	d004      	beq.n	800391c <HAL_CAN_IRQHandler+0x126>
 8003912:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003914:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8003918:	627b      	str	r3, [r7, #36]	@ 0x24
 800391a:	e00c      	b.n	8003936 <HAL_CAN_IRQHandler+0x140>
 800391c:	69bb      	ldr	r3, [r7, #24]
 800391e:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8003922:	2b00      	cmp	r3, #0
 8003924:	d004      	beq.n	8003930 <HAL_CAN_IRQHandler+0x13a>
 8003926:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003928:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 800392c:	627b      	str	r3, [r7, #36]	@ 0x24
 800392e:	e002      	b.n	8003936 <HAL_CAN_IRQHandler+0x140>
 8003930:	6878      	ldr	r0, [r7, #4]
 8003932:	f000 f949 	bl	8003bc8 <HAL_CAN_TxMailbox2AbortCallback>
 8003936:	6a3b      	ldr	r3, [r7, #32]
 8003938:	f003 0308 	and.w	r3, r3, #8
 800393c:	2b00      	cmp	r3, #0
 800393e:	d00c      	beq.n	800395a <HAL_CAN_IRQHandler+0x164>
 8003940:	697b      	ldr	r3, [r7, #20]
 8003942:	f003 0310 	and.w	r3, r3, #16
 8003946:	2b00      	cmp	r3, #0
 8003948:	d007      	beq.n	800395a <HAL_CAN_IRQHandler+0x164>
 800394a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800394c:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8003950:	627b      	str	r3, [r7, #36]	@ 0x24
 8003952:	687b      	ldr	r3, [r7, #4]
 8003954:	681b      	ldr	r3, [r3, #0]
 8003956:	2210      	movs	r2, #16
 8003958:	60da      	str	r2, [r3, #12]
 800395a:	6a3b      	ldr	r3, [r7, #32]
 800395c:	f003 0304 	and.w	r3, r3, #4
 8003960:	2b00      	cmp	r3, #0
 8003962:	d00b      	beq.n	800397c <HAL_CAN_IRQHandler+0x186>
 8003964:	697b      	ldr	r3, [r7, #20]
 8003966:	f003 0308 	and.w	r3, r3, #8
 800396a:	2b00      	cmp	r3, #0
 800396c:	d006      	beq.n	800397c <HAL_CAN_IRQHandler+0x186>
 800396e:	687b      	ldr	r3, [r7, #4]
 8003970:	681b      	ldr	r3, [r3, #0]
 8003972:	2208      	movs	r2, #8
 8003974:	60da      	str	r2, [r3, #12]
 8003976:	6878      	ldr	r0, [r7, #4]
 8003978:	f000 f930 	bl	8003bdc <HAL_CAN_RxFifo0FullCallback>
 800397c:	6a3b      	ldr	r3, [r7, #32]
 800397e:	f003 0302 	and.w	r3, r3, #2
 8003982:	2b00      	cmp	r3, #0
 8003984:	d009      	beq.n	800399a <HAL_CAN_IRQHandler+0x1a4>
 8003986:	687b      	ldr	r3, [r7, #4]
 8003988:	681b      	ldr	r3, [r3, #0]
 800398a:	68db      	ldr	r3, [r3, #12]
 800398c:	f003 0303 	and.w	r3, r3, #3
 8003990:	2b00      	cmp	r3, #0
 8003992:	d002      	beq.n	800399a <HAL_CAN_IRQHandler+0x1a4>
 8003994:	6878      	ldr	r0, [r7, #4]
 8003996:	f7fd fb2b 	bl	8000ff0 <HAL_CAN_RxFifo0MsgPendingCallback>
 800399a:	6a3b      	ldr	r3, [r7, #32]
 800399c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80039a0:	2b00      	cmp	r3, #0
 80039a2:	d00c      	beq.n	80039be <HAL_CAN_IRQHandler+0x1c8>
 80039a4:	693b      	ldr	r3, [r7, #16]
 80039a6:	f003 0310 	and.w	r3, r3, #16
 80039aa:	2b00      	cmp	r3, #0
 80039ac:	d007      	beq.n	80039be <HAL_CAN_IRQHandler+0x1c8>
 80039ae:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80039b0:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80039b4:	627b      	str	r3, [r7, #36]	@ 0x24
 80039b6:	687b      	ldr	r3, [r7, #4]
 80039b8:	681b      	ldr	r3, [r3, #0]
 80039ba:	2210      	movs	r2, #16
 80039bc:	611a      	str	r2, [r3, #16]
 80039be:	6a3b      	ldr	r3, [r7, #32]
 80039c0:	f003 0320 	and.w	r3, r3, #32
 80039c4:	2b00      	cmp	r3, #0
 80039c6:	d00b      	beq.n	80039e0 <HAL_CAN_IRQHandler+0x1ea>
 80039c8:	693b      	ldr	r3, [r7, #16]
 80039ca:	f003 0308 	and.w	r3, r3, #8
 80039ce:	2b00      	cmp	r3, #0
 80039d0:	d006      	beq.n	80039e0 <HAL_CAN_IRQHandler+0x1ea>
 80039d2:	687b      	ldr	r3, [r7, #4]
 80039d4:	681b      	ldr	r3, [r3, #0]
 80039d6:	2208      	movs	r2, #8
 80039d8:	611a      	str	r2, [r3, #16]
 80039da:	6878      	ldr	r0, [r7, #4]
 80039dc:	f000 f912 	bl	8003c04 <HAL_CAN_RxFifo1FullCallback>
 80039e0:	6a3b      	ldr	r3, [r7, #32]
 80039e2:	f003 0310 	and.w	r3, r3, #16
 80039e6:	2b00      	cmp	r3, #0
 80039e8:	d009      	beq.n	80039fe <HAL_CAN_IRQHandler+0x208>
 80039ea:	687b      	ldr	r3, [r7, #4]
 80039ec:	681b      	ldr	r3, [r3, #0]
 80039ee:	691b      	ldr	r3, [r3, #16]
 80039f0:	f003 0303 	and.w	r3, r3, #3
 80039f4:	2b00      	cmp	r3, #0
 80039f6:	d002      	beq.n	80039fe <HAL_CAN_IRQHandler+0x208>
 80039f8:	6878      	ldr	r0, [r7, #4]
 80039fa:	f000 f8f9 	bl	8003bf0 <HAL_CAN_RxFifo1MsgPendingCallback>
 80039fe:	6a3b      	ldr	r3, [r7, #32]
 8003a00:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003a04:	2b00      	cmp	r3, #0
 8003a06:	d00b      	beq.n	8003a20 <HAL_CAN_IRQHandler+0x22a>
 8003a08:	69fb      	ldr	r3, [r7, #28]
 8003a0a:	f003 0310 	and.w	r3, r3, #16
 8003a0e:	2b00      	cmp	r3, #0
 8003a10:	d006      	beq.n	8003a20 <HAL_CAN_IRQHandler+0x22a>
 8003a12:	687b      	ldr	r3, [r7, #4]
 8003a14:	681b      	ldr	r3, [r3, #0]
 8003a16:	2210      	movs	r2, #16
 8003a18:	605a      	str	r2, [r3, #4]
 8003a1a:	6878      	ldr	r0, [r7, #4]
 8003a1c:	f000 f8fc 	bl	8003c18 <HAL_CAN_SleepCallback>
 8003a20:	6a3b      	ldr	r3, [r7, #32]
 8003a22:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003a26:	2b00      	cmp	r3, #0
 8003a28:	d00b      	beq.n	8003a42 <HAL_CAN_IRQHandler+0x24c>
 8003a2a:	69fb      	ldr	r3, [r7, #28]
 8003a2c:	f003 0308 	and.w	r3, r3, #8
 8003a30:	2b00      	cmp	r3, #0
 8003a32:	d006      	beq.n	8003a42 <HAL_CAN_IRQHandler+0x24c>
 8003a34:	687b      	ldr	r3, [r7, #4]
 8003a36:	681b      	ldr	r3, [r3, #0]
 8003a38:	2208      	movs	r2, #8
 8003a3a:	605a      	str	r2, [r3, #4]
 8003a3c:	6878      	ldr	r0, [r7, #4]
 8003a3e:	f000 f8f5 	bl	8003c2c <HAL_CAN_WakeUpFromRxMsgCallback>
 8003a42:	6a3b      	ldr	r3, [r7, #32]
 8003a44:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8003a48:	2b00      	cmp	r3, #0
 8003a4a:	d07b      	beq.n	8003b44 <HAL_CAN_IRQHandler+0x34e>
 8003a4c:	69fb      	ldr	r3, [r7, #28]
 8003a4e:	f003 0304 	and.w	r3, r3, #4
 8003a52:	2b00      	cmp	r3, #0
 8003a54:	d072      	beq.n	8003b3c <HAL_CAN_IRQHandler+0x346>
 8003a56:	6a3b      	ldr	r3, [r7, #32]
 8003a58:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003a5c:	2b00      	cmp	r3, #0
 8003a5e:	d008      	beq.n	8003a72 <HAL_CAN_IRQHandler+0x27c>
 8003a60:	68fb      	ldr	r3, [r7, #12]
 8003a62:	f003 0301 	and.w	r3, r3, #1
 8003a66:	2b00      	cmp	r3, #0
 8003a68:	d003      	beq.n	8003a72 <HAL_CAN_IRQHandler+0x27c>
 8003a6a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003a6c:	f043 0301 	orr.w	r3, r3, #1
 8003a70:	627b      	str	r3, [r7, #36]	@ 0x24
 8003a72:	6a3b      	ldr	r3, [r7, #32]
 8003a74:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8003a78:	2b00      	cmp	r3, #0
 8003a7a:	d008      	beq.n	8003a8e <HAL_CAN_IRQHandler+0x298>
 8003a7c:	68fb      	ldr	r3, [r7, #12]
 8003a7e:	f003 0302 	and.w	r3, r3, #2
 8003a82:	2b00      	cmp	r3, #0
 8003a84:	d003      	beq.n	8003a8e <HAL_CAN_IRQHandler+0x298>
 8003a86:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003a88:	f043 0302 	orr.w	r3, r3, #2
 8003a8c:	627b      	str	r3, [r7, #36]	@ 0x24
 8003a8e:	6a3b      	ldr	r3, [r7, #32]
 8003a90:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003a94:	2b00      	cmp	r3, #0
 8003a96:	d008      	beq.n	8003aaa <HAL_CAN_IRQHandler+0x2b4>
 8003a98:	68fb      	ldr	r3, [r7, #12]
 8003a9a:	f003 0304 	and.w	r3, r3, #4
 8003a9e:	2b00      	cmp	r3, #0
 8003aa0:	d003      	beq.n	8003aaa <HAL_CAN_IRQHandler+0x2b4>
 8003aa2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003aa4:	f043 0304 	orr.w	r3, r3, #4
 8003aa8:	627b      	str	r3, [r7, #36]	@ 0x24
 8003aaa:	6a3b      	ldr	r3, [r7, #32]
 8003aac:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 8003ab0:	2b00      	cmp	r3, #0
 8003ab2:	d043      	beq.n	8003b3c <HAL_CAN_IRQHandler+0x346>
 8003ab4:	68fb      	ldr	r3, [r7, #12]
 8003ab6:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8003aba:	2b00      	cmp	r3, #0
 8003abc:	d03e      	beq.n	8003b3c <HAL_CAN_IRQHandler+0x346>
 8003abe:	68fb      	ldr	r3, [r7, #12]
 8003ac0:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8003ac4:	2b60      	cmp	r3, #96	@ 0x60
 8003ac6:	d02b      	beq.n	8003b20 <HAL_CAN_IRQHandler+0x32a>
 8003ac8:	2b60      	cmp	r3, #96	@ 0x60
 8003aca:	d82e      	bhi.n	8003b2a <HAL_CAN_IRQHandler+0x334>
 8003acc:	2b50      	cmp	r3, #80	@ 0x50
 8003ace:	d022      	beq.n	8003b16 <HAL_CAN_IRQHandler+0x320>
 8003ad0:	2b50      	cmp	r3, #80	@ 0x50
 8003ad2:	d82a      	bhi.n	8003b2a <HAL_CAN_IRQHandler+0x334>
 8003ad4:	2b40      	cmp	r3, #64	@ 0x40
 8003ad6:	d019      	beq.n	8003b0c <HAL_CAN_IRQHandler+0x316>
 8003ad8:	2b40      	cmp	r3, #64	@ 0x40
 8003ada:	d826      	bhi.n	8003b2a <HAL_CAN_IRQHandler+0x334>
 8003adc:	2b30      	cmp	r3, #48	@ 0x30
 8003ade:	d010      	beq.n	8003b02 <HAL_CAN_IRQHandler+0x30c>
 8003ae0:	2b30      	cmp	r3, #48	@ 0x30
 8003ae2:	d822      	bhi.n	8003b2a <HAL_CAN_IRQHandler+0x334>
 8003ae4:	2b10      	cmp	r3, #16
 8003ae6:	d002      	beq.n	8003aee <HAL_CAN_IRQHandler+0x2f8>
 8003ae8:	2b20      	cmp	r3, #32
 8003aea:	d005      	beq.n	8003af8 <HAL_CAN_IRQHandler+0x302>
 8003aec:	e01d      	b.n	8003b2a <HAL_CAN_IRQHandler+0x334>
 8003aee:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003af0:	f043 0308 	orr.w	r3, r3, #8
 8003af4:	627b      	str	r3, [r7, #36]	@ 0x24
 8003af6:	e019      	b.n	8003b2c <HAL_CAN_IRQHandler+0x336>
 8003af8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003afa:	f043 0310 	orr.w	r3, r3, #16
 8003afe:	627b      	str	r3, [r7, #36]	@ 0x24
 8003b00:	e014      	b.n	8003b2c <HAL_CAN_IRQHandler+0x336>
 8003b02:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003b04:	f043 0320 	orr.w	r3, r3, #32
 8003b08:	627b      	str	r3, [r7, #36]	@ 0x24
 8003b0a:	e00f      	b.n	8003b2c <HAL_CAN_IRQHandler+0x336>
 8003b0c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003b0e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8003b12:	627b      	str	r3, [r7, #36]	@ 0x24
 8003b14:	e00a      	b.n	8003b2c <HAL_CAN_IRQHandler+0x336>
 8003b16:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003b18:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8003b1c:	627b      	str	r3, [r7, #36]	@ 0x24
 8003b1e:	e005      	b.n	8003b2c <HAL_CAN_IRQHandler+0x336>
 8003b20:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003b22:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8003b26:	627b      	str	r3, [r7, #36]	@ 0x24
 8003b28:	e000      	b.n	8003b2c <HAL_CAN_IRQHandler+0x336>
 8003b2a:	bf00      	nop
 8003b2c:	687b      	ldr	r3, [r7, #4]
 8003b2e:	681b      	ldr	r3, [r3, #0]
 8003b30:	699a      	ldr	r2, [r3, #24]
 8003b32:	687b      	ldr	r3, [r7, #4]
 8003b34:	681b      	ldr	r3, [r3, #0]
 8003b36:	f022 0270 	bic.w	r2, r2, #112	@ 0x70
 8003b3a:	619a      	str	r2, [r3, #24]
 8003b3c:	687b      	ldr	r3, [r7, #4]
 8003b3e:	681b      	ldr	r3, [r3, #0]
 8003b40:	2204      	movs	r2, #4
 8003b42:	605a      	str	r2, [r3, #4]
 8003b44:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003b46:	2b00      	cmp	r3, #0
 8003b48:	d008      	beq.n	8003b5c <HAL_CAN_IRQHandler+0x366>
 8003b4a:	687b      	ldr	r3, [r7, #4]
 8003b4c:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8003b4e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003b50:	431a      	orrs	r2, r3
 8003b52:	687b      	ldr	r3, [r7, #4]
 8003b54:	625a      	str	r2, [r3, #36]	@ 0x24
 8003b56:	6878      	ldr	r0, [r7, #4]
 8003b58:	f000 f872 	bl	8003c40 <HAL_CAN_ErrorCallback>
 8003b5c:	bf00      	nop
 8003b5e:	3728      	adds	r7, #40	@ 0x28
 8003b60:	46bd      	mov	sp, r7
 8003b62:	bd80      	pop	{r7, pc}

08003b64 <HAL_CAN_TxMailbox0CompleteCallback>:
 8003b64:	b480      	push	{r7}
 8003b66:	b083      	sub	sp, #12
 8003b68:	af00      	add	r7, sp, #0
 8003b6a:	6078      	str	r0, [r7, #4]
 8003b6c:	bf00      	nop
 8003b6e:	370c      	adds	r7, #12
 8003b70:	46bd      	mov	sp, r7
 8003b72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b76:	4770      	bx	lr

08003b78 <HAL_CAN_TxMailbox1CompleteCallback>:
 8003b78:	b480      	push	{r7}
 8003b7a:	b083      	sub	sp, #12
 8003b7c:	af00      	add	r7, sp, #0
 8003b7e:	6078      	str	r0, [r7, #4]
 8003b80:	bf00      	nop
 8003b82:	370c      	adds	r7, #12
 8003b84:	46bd      	mov	sp, r7
 8003b86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b8a:	4770      	bx	lr

08003b8c <HAL_CAN_TxMailbox2CompleteCallback>:
 8003b8c:	b480      	push	{r7}
 8003b8e:	b083      	sub	sp, #12
 8003b90:	af00      	add	r7, sp, #0
 8003b92:	6078      	str	r0, [r7, #4]
 8003b94:	bf00      	nop
 8003b96:	370c      	adds	r7, #12
 8003b98:	46bd      	mov	sp, r7
 8003b9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b9e:	4770      	bx	lr

08003ba0 <HAL_CAN_TxMailbox0AbortCallback>:
 8003ba0:	b480      	push	{r7}
 8003ba2:	b083      	sub	sp, #12
 8003ba4:	af00      	add	r7, sp, #0
 8003ba6:	6078      	str	r0, [r7, #4]
 8003ba8:	bf00      	nop
 8003baa:	370c      	adds	r7, #12
 8003bac:	46bd      	mov	sp, r7
 8003bae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003bb2:	4770      	bx	lr

08003bb4 <HAL_CAN_TxMailbox1AbortCallback>:
 8003bb4:	b480      	push	{r7}
 8003bb6:	b083      	sub	sp, #12
 8003bb8:	af00      	add	r7, sp, #0
 8003bba:	6078      	str	r0, [r7, #4]
 8003bbc:	bf00      	nop
 8003bbe:	370c      	adds	r7, #12
 8003bc0:	46bd      	mov	sp, r7
 8003bc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003bc6:	4770      	bx	lr

08003bc8 <HAL_CAN_TxMailbox2AbortCallback>:
 8003bc8:	b480      	push	{r7}
 8003bca:	b083      	sub	sp, #12
 8003bcc:	af00      	add	r7, sp, #0
 8003bce:	6078      	str	r0, [r7, #4]
 8003bd0:	bf00      	nop
 8003bd2:	370c      	adds	r7, #12
 8003bd4:	46bd      	mov	sp, r7
 8003bd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003bda:	4770      	bx	lr

08003bdc <HAL_CAN_RxFifo0FullCallback>:
 8003bdc:	b480      	push	{r7}
 8003bde:	b083      	sub	sp, #12
 8003be0:	af00      	add	r7, sp, #0
 8003be2:	6078      	str	r0, [r7, #4]
 8003be4:	bf00      	nop
 8003be6:	370c      	adds	r7, #12
 8003be8:	46bd      	mov	sp, r7
 8003bea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003bee:	4770      	bx	lr

08003bf0 <HAL_CAN_RxFifo1MsgPendingCallback>:
 8003bf0:	b480      	push	{r7}
 8003bf2:	b083      	sub	sp, #12
 8003bf4:	af00      	add	r7, sp, #0
 8003bf6:	6078      	str	r0, [r7, #4]
 8003bf8:	bf00      	nop
 8003bfa:	370c      	adds	r7, #12
 8003bfc:	46bd      	mov	sp, r7
 8003bfe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c02:	4770      	bx	lr

08003c04 <HAL_CAN_RxFifo1FullCallback>:
 8003c04:	b480      	push	{r7}
 8003c06:	b083      	sub	sp, #12
 8003c08:	af00      	add	r7, sp, #0
 8003c0a:	6078      	str	r0, [r7, #4]
 8003c0c:	bf00      	nop
 8003c0e:	370c      	adds	r7, #12
 8003c10:	46bd      	mov	sp, r7
 8003c12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c16:	4770      	bx	lr

08003c18 <HAL_CAN_SleepCallback>:
 8003c18:	b480      	push	{r7}
 8003c1a:	b083      	sub	sp, #12
 8003c1c:	af00      	add	r7, sp, #0
 8003c1e:	6078      	str	r0, [r7, #4]
 8003c20:	bf00      	nop
 8003c22:	370c      	adds	r7, #12
 8003c24:	46bd      	mov	sp, r7
 8003c26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c2a:	4770      	bx	lr

08003c2c <HAL_CAN_WakeUpFromRxMsgCallback>:
 8003c2c:	b480      	push	{r7}
 8003c2e:	b083      	sub	sp, #12
 8003c30:	af00      	add	r7, sp, #0
 8003c32:	6078      	str	r0, [r7, #4]
 8003c34:	bf00      	nop
 8003c36:	370c      	adds	r7, #12
 8003c38:	46bd      	mov	sp, r7
 8003c3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c3e:	4770      	bx	lr

08003c40 <HAL_CAN_ErrorCallback>:
 8003c40:	b480      	push	{r7}
 8003c42:	b083      	sub	sp, #12
 8003c44:	af00      	add	r7, sp, #0
 8003c46:	6078      	str	r0, [r7, #4]
 8003c48:	bf00      	nop
 8003c4a:	370c      	adds	r7, #12
 8003c4c:	46bd      	mov	sp, r7
 8003c4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c52:	4770      	bx	lr

08003c54 <__NVIC_SetPriorityGrouping>:
 8003c54:	b480      	push	{r7}
 8003c56:	b085      	sub	sp, #20
 8003c58:	af00      	add	r7, sp, #0
 8003c5a:	6078      	str	r0, [r7, #4]
 8003c5c:	687b      	ldr	r3, [r7, #4]
 8003c5e:	f003 0307 	and.w	r3, r3, #7
 8003c62:	60fb      	str	r3, [r7, #12]
 8003c64:	4b0c      	ldr	r3, [pc, #48]	@ (8003c98 <__NVIC_SetPriorityGrouping+0x44>)
 8003c66:	68db      	ldr	r3, [r3, #12]
 8003c68:	60bb      	str	r3, [r7, #8]
 8003c6a:	68ba      	ldr	r2, [r7, #8]
 8003c6c:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8003c70:	4013      	ands	r3, r2
 8003c72:	60bb      	str	r3, [r7, #8]
 8003c74:	68fb      	ldr	r3, [r7, #12]
 8003c76:	021a      	lsls	r2, r3, #8
 8003c78:	68bb      	ldr	r3, [r7, #8]
 8003c7a:	4313      	orrs	r3, r2
 8003c7c:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8003c80:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8003c84:	60bb      	str	r3, [r7, #8]
 8003c86:	4a04      	ldr	r2, [pc, #16]	@ (8003c98 <__NVIC_SetPriorityGrouping+0x44>)
 8003c88:	68bb      	ldr	r3, [r7, #8]
 8003c8a:	60d3      	str	r3, [r2, #12]
 8003c8c:	bf00      	nop
 8003c8e:	3714      	adds	r7, #20
 8003c90:	46bd      	mov	sp, r7
 8003c92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c96:	4770      	bx	lr
 8003c98:	e000ed00 	.word	0xe000ed00

08003c9c <__NVIC_GetPriorityGrouping>:
 8003c9c:	b480      	push	{r7}
 8003c9e:	af00      	add	r7, sp, #0
 8003ca0:	4b04      	ldr	r3, [pc, #16]	@ (8003cb4 <__NVIC_GetPriorityGrouping+0x18>)
 8003ca2:	68db      	ldr	r3, [r3, #12]
 8003ca4:	0a1b      	lsrs	r3, r3, #8
 8003ca6:	f003 0307 	and.w	r3, r3, #7
 8003caa:	4618      	mov	r0, r3
 8003cac:	46bd      	mov	sp, r7
 8003cae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003cb2:	4770      	bx	lr
 8003cb4:	e000ed00 	.word	0xe000ed00

08003cb8 <__NVIC_EnableIRQ>:
 8003cb8:	b480      	push	{r7}
 8003cba:	b083      	sub	sp, #12
 8003cbc:	af00      	add	r7, sp, #0
 8003cbe:	4603      	mov	r3, r0
 8003cc0:	71fb      	strb	r3, [r7, #7]
 8003cc2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003cc6:	2b00      	cmp	r3, #0
 8003cc8:	db0b      	blt.n	8003ce2 <__NVIC_EnableIRQ+0x2a>
 8003cca:	79fb      	ldrb	r3, [r7, #7]
 8003ccc:	f003 021f 	and.w	r2, r3, #31
 8003cd0:	4907      	ldr	r1, [pc, #28]	@ (8003cf0 <__NVIC_EnableIRQ+0x38>)
 8003cd2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003cd6:	095b      	lsrs	r3, r3, #5
 8003cd8:	2001      	movs	r0, #1
 8003cda:	fa00 f202 	lsl.w	r2, r0, r2
 8003cde:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8003ce2:	bf00      	nop
 8003ce4:	370c      	adds	r7, #12
 8003ce6:	46bd      	mov	sp, r7
 8003ce8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003cec:	4770      	bx	lr
 8003cee:	bf00      	nop
 8003cf0:	e000e100 	.word	0xe000e100

08003cf4 <__NVIC_SetPriority>:
 8003cf4:	b480      	push	{r7}
 8003cf6:	b083      	sub	sp, #12
 8003cf8:	af00      	add	r7, sp, #0
 8003cfa:	4603      	mov	r3, r0
 8003cfc:	6039      	str	r1, [r7, #0]
 8003cfe:	71fb      	strb	r3, [r7, #7]
 8003d00:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003d04:	2b00      	cmp	r3, #0
 8003d06:	db0a      	blt.n	8003d1e <__NVIC_SetPriority+0x2a>
 8003d08:	683b      	ldr	r3, [r7, #0]
 8003d0a:	b2da      	uxtb	r2, r3
 8003d0c:	490c      	ldr	r1, [pc, #48]	@ (8003d40 <__NVIC_SetPriority+0x4c>)
 8003d0e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003d12:	0112      	lsls	r2, r2, #4
 8003d14:	b2d2      	uxtb	r2, r2
 8003d16:	440b      	add	r3, r1
 8003d18:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8003d1c:	e00a      	b.n	8003d34 <__NVIC_SetPriority+0x40>
 8003d1e:	683b      	ldr	r3, [r7, #0]
 8003d20:	b2da      	uxtb	r2, r3
 8003d22:	4908      	ldr	r1, [pc, #32]	@ (8003d44 <__NVIC_SetPriority+0x50>)
 8003d24:	79fb      	ldrb	r3, [r7, #7]
 8003d26:	f003 030f 	and.w	r3, r3, #15
 8003d2a:	3b04      	subs	r3, #4
 8003d2c:	0112      	lsls	r2, r2, #4
 8003d2e:	b2d2      	uxtb	r2, r2
 8003d30:	440b      	add	r3, r1
 8003d32:	761a      	strb	r2, [r3, #24]
 8003d34:	bf00      	nop
 8003d36:	370c      	adds	r7, #12
 8003d38:	46bd      	mov	sp, r7
 8003d3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d3e:	4770      	bx	lr
 8003d40:	e000e100 	.word	0xe000e100
 8003d44:	e000ed00 	.word	0xe000ed00

08003d48 <NVIC_EncodePriority>:
 8003d48:	b480      	push	{r7}
 8003d4a:	b089      	sub	sp, #36	@ 0x24
 8003d4c:	af00      	add	r7, sp, #0
 8003d4e:	60f8      	str	r0, [r7, #12]
 8003d50:	60b9      	str	r1, [r7, #8]
 8003d52:	607a      	str	r2, [r7, #4]
 8003d54:	68fb      	ldr	r3, [r7, #12]
 8003d56:	f003 0307 	and.w	r3, r3, #7
 8003d5a:	61fb      	str	r3, [r7, #28]
 8003d5c:	69fb      	ldr	r3, [r7, #28]
 8003d5e:	f1c3 0307 	rsb	r3, r3, #7
 8003d62:	2b04      	cmp	r3, #4
 8003d64:	bf28      	it	cs
 8003d66:	2304      	movcs	r3, #4
 8003d68:	61bb      	str	r3, [r7, #24]
 8003d6a:	69fb      	ldr	r3, [r7, #28]
 8003d6c:	3304      	adds	r3, #4
 8003d6e:	2b06      	cmp	r3, #6
 8003d70:	d902      	bls.n	8003d78 <NVIC_EncodePriority+0x30>
 8003d72:	69fb      	ldr	r3, [r7, #28]
 8003d74:	3b03      	subs	r3, #3
 8003d76:	e000      	b.n	8003d7a <NVIC_EncodePriority+0x32>
 8003d78:	2300      	movs	r3, #0
 8003d7a:	617b      	str	r3, [r7, #20]
 8003d7c:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8003d80:	69bb      	ldr	r3, [r7, #24]
 8003d82:	fa02 f303 	lsl.w	r3, r2, r3
 8003d86:	43da      	mvns	r2, r3
 8003d88:	68bb      	ldr	r3, [r7, #8]
 8003d8a:	401a      	ands	r2, r3
 8003d8c:	697b      	ldr	r3, [r7, #20]
 8003d8e:	409a      	lsls	r2, r3
 8003d90:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 8003d94:	697b      	ldr	r3, [r7, #20]
 8003d96:	fa01 f303 	lsl.w	r3, r1, r3
 8003d9a:	43d9      	mvns	r1, r3
 8003d9c:	687b      	ldr	r3, [r7, #4]
 8003d9e:	400b      	ands	r3, r1
 8003da0:	4313      	orrs	r3, r2
 8003da2:	4618      	mov	r0, r3
 8003da4:	3724      	adds	r7, #36	@ 0x24
 8003da6:	46bd      	mov	sp, r7
 8003da8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003dac:	4770      	bx	lr
	...

08003db0 <SysTick_Config>:
 8003db0:	b580      	push	{r7, lr}
 8003db2:	b082      	sub	sp, #8
 8003db4:	af00      	add	r7, sp, #0
 8003db6:	6078      	str	r0, [r7, #4]
 8003db8:	687b      	ldr	r3, [r7, #4]
 8003dba:	3b01      	subs	r3, #1
 8003dbc:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8003dc0:	d301      	bcc.n	8003dc6 <SysTick_Config+0x16>
 8003dc2:	2301      	movs	r3, #1
 8003dc4:	e00f      	b.n	8003de6 <SysTick_Config+0x36>
 8003dc6:	4a0a      	ldr	r2, [pc, #40]	@ (8003df0 <SysTick_Config+0x40>)
 8003dc8:	687b      	ldr	r3, [r7, #4]
 8003dca:	3b01      	subs	r3, #1
 8003dcc:	6053      	str	r3, [r2, #4]
 8003dce:	210f      	movs	r1, #15
 8003dd0:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8003dd4:	f7ff ff8e 	bl	8003cf4 <__NVIC_SetPriority>
 8003dd8:	4b05      	ldr	r3, [pc, #20]	@ (8003df0 <SysTick_Config+0x40>)
 8003dda:	2200      	movs	r2, #0
 8003ddc:	609a      	str	r2, [r3, #8]
 8003dde:	4b04      	ldr	r3, [pc, #16]	@ (8003df0 <SysTick_Config+0x40>)
 8003de0:	2207      	movs	r2, #7
 8003de2:	601a      	str	r2, [r3, #0]
 8003de4:	2300      	movs	r3, #0
 8003de6:	4618      	mov	r0, r3
 8003de8:	3708      	adds	r7, #8
 8003dea:	46bd      	mov	sp, r7
 8003dec:	bd80      	pop	{r7, pc}
 8003dee:	bf00      	nop
 8003df0:	e000e010 	.word	0xe000e010

08003df4 <HAL_NVIC_SetPriorityGrouping>:
 8003df4:	b580      	push	{r7, lr}
 8003df6:	b082      	sub	sp, #8
 8003df8:	af00      	add	r7, sp, #0
 8003dfa:	6078      	str	r0, [r7, #4]
 8003dfc:	6878      	ldr	r0, [r7, #4]
 8003dfe:	f7ff ff29 	bl	8003c54 <__NVIC_SetPriorityGrouping>
 8003e02:	bf00      	nop
 8003e04:	3708      	adds	r7, #8
 8003e06:	46bd      	mov	sp, r7
 8003e08:	bd80      	pop	{r7, pc}

08003e0a <HAL_NVIC_SetPriority>:
 8003e0a:	b580      	push	{r7, lr}
 8003e0c:	b086      	sub	sp, #24
 8003e0e:	af00      	add	r7, sp, #0
 8003e10:	4603      	mov	r3, r0
 8003e12:	60b9      	str	r1, [r7, #8]
 8003e14:	607a      	str	r2, [r7, #4]
 8003e16:	73fb      	strb	r3, [r7, #15]
 8003e18:	2300      	movs	r3, #0
 8003e1a:	617b      	str	r3, [r7, #20]
 8003e1c:	f7ff ff3e 	bl	8003c9c <__NVIC_GetPriorityGrouping>
 8003e20:	6178      	str	r0, [r7, #20]
 8003e22:	687a      	ldr	r2, [r7, #4]
 8003e24:	68b9      	ldr	r1, [r7, #8]
 8003e26:	6978      	ldr	r0, [r7, #20]
 8003e28:	f7ff ff8e 	bl	8003d48 <NVIC_EncodePriority>
 8003e2c:	4602      	mov	r2, r0
 8003e2e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8003e32:	4611      	mov	r1, r2
 8003e34:	4618      	mov	r0, r3
 8003e36:	f7ff ff5d 	bl	8003cf4 <__NVIC_SetPriority>
 8003e3a:	bf00      	nop
 8003e3c:	3718      	adds	r7, #24
 8003e3e:	46bd      	mov	sp, r7
 8003e40:	bd80      	pop	{r7, pc}

08003e42 <HAL_NVIC_EnableIRQ>:
 8003e42:	b580      	push	{r7, lr}
 8003e44:	b082      	sub	sp, #8
 8003e46:	af00      	add	r7, sp, #0
 8003e48:	4603      	mov	r3, r0
 8003e4a:	71fb      	strb	r3, [r7, #7]
 8003e4c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003e50:	4618      	mov	r0, r3
 8003e52:	f7ff ff31 	bl	8003cb8 <__NVIC_EnableIRQ>
 8003e56:	bf00      	nop
 8003e58:	3708      	adds	r7, #8
 8003e5a:	46bd      	mov	sp, r7
 8003e5c:	bd80      	pop	{r7, pc}

08003e5e <HAL_SYSTICK_Config>:
 8003e5e:	b580      	push	{r7, lr}
 8003e60:	b082      	sub	sp, #8
 8003e62:	af00      	add	r7, sp, #0
 8003e64:	6078      	str	r0, [r7, #4]
 8003e66:	6878      	ldr	r0, [r7, #4]
 8003e68:	f7ff ffa2 	bl	8003db0 <SysTick_Config>
 8003e6c:	4603      	mov	r3, r0
 8003e6e:	4618      	mov	r0, r3
 8003e70:	3708      	adds	r7, #8
 8003e72:	46bd      	mov	sp, r7
 8003e74:	bd80      	pop	{r7, pc}
	...

08003e78 <HAL_GPIO_Init>:
 8003e78:	b480      	push	{r7}
 8003e7a:	b089      	sub	sp, #36	@ 0x24
 8003e7c:	af00      	add	r7, sp, #0
 8003e7e:	6078      	str	r0, [r7, #4]
 8003e80:	6039      	str	r1, [r7, #0]
 8003e82:	2300      	movs	r3, #0
 8003e84:	617b      	str	r3, [r7, #20]
 8003e86:	2300      	movs	r3, #0
 8003e88:	613b      	str	r3, [r7, #16]
 8003e8a:	2300      	movs	r3, #0
 8003e8c:	61bb      	str	r3, [r7, #24]
 8003e8e:	2300      	movs	r3, #0
 8003e90:	61fb      	str	r3, [r7, #28]
 8003e92:	e165      	b.n	8004160 <HAL_GPIO_Init+0x2e8>
 8003e94:	2201      	movs	r2, #1
 8003e96:	69fb      	ldr	r3, [r7, #28]
 8003e98:	fa02 f303 	lsl.w	r3, r2, r3
 8003e9c:	617b      	str	r3, [r7, #20]
 8003e9e:	683b      	ldr	r3, [r7, #0]
 8003ea0:	681b      	ldr	r3, [r3, #0]
 8003ea2:	697a      	ldr	r2, [r7, #20]
 8003ea4:	4013      	ands	r3, r2
 8003ea6:	613b      	str	r3, [r7, #16]
 8003ea8:	693a      	ldr	r2, [r7, #16]
 8003eaa:	697b      	ldr	r3, [r7, #20]
 8003eac:	429a      	cmp	r2, r3
 8003eae:	f040 8154 	bne.w	800415a <HAL_GPIO_Init+0x2e2>
 8003eb2:	683b      	ldr	r3, [r7, #0]
 8003eb4:	685b      	ldr	r3, [r3, #4]
 8003eb6:	f003 0303 	and.w	r3, r3, #3
 8003eba:	2b01      	cmp	r3, #1
 8003ebc:	d005      	beq.n	8003eca <HAL_GPIO_Init+0x52>
 8003ebe:	683b      	ldr	r3, [r7, #0]
 8003ec0:	685b      	ldr	r3, [r3, #4]
 8003ec2:	f003 0303 	and.w	r3, r3, #3
 8003ec6:	2b02      	cmp	r3, #2
 8003ec8:	d130      	bne.n	8003f2c <HAL_GPIO_Init+0xb4>
 8003eca:	687b      	ldr	r3, [r7, #4]
 8003ecc:	689b      	ldr	r3, [r3, #8]
 8003ece:	61bb      	str	r3, [r7, #24]
 8003ed0:	69fb      	ldr	r3, [r7, #28]
 8003ed2:	005b      	lsls	r3, r3, #1
 8003ed4:	2203      	movs	r2, #3
 8003ed6:	fa02 f303 	lsl.w	r3, r2, r3
 8003eda:	43db      	mvns	r3, r3
 8003edc:	69ba      	ldr	r2, [r7, #24]
 8003ede:	4013      	ands	r3, r2
 8003ee0:	61bb      	str	r3, [r7, #24]
 8003ee2:	683b      	ldr	r3, [r7, #0]
 8003ee4:	68da      	ldr	r2, [r3, #12]
 8003ee6:	69fb      	ldr	r3, [r7, #28]
 8003ee8:	005b      	lsls	r3, r3, #1
 8003eea:	fa02 f303 	lsl.w	r3, r2, r3
 8003eee:	69ba      	ldr	r2, [r7, #24]
 8003ef0:	4313      	orrs	r3, r2
 8003ef2:	61bb      	str	r3, [r7, #24]
 8003ef4:	687b      	ldr	r3, [r7, #4]
 8003ef6:	69ba      	ldr	r2, [r7, #24]
 8003ef8:	609a      	str	r2, [r3, #8]
 8003efa:	687b      	ldr	r3, [r7, #4]
 8003efc:	685b      	ldr	r3, [r3, #4]
 8003efe:	61bb      	str	r3, [r7, #24]
 8003f00:	2201      	movs	r2, #1
 8003f02:	69fb      	ldr	r3, [r7, #28]
 8003f04:	fa02 f303 	lsl.w	r3, r2, r3
 8003f08:	43db      	mvns	r3, r3
 8003f0a:	69ba      	ldr	r2, [r7, #24]
 8003f0c:	4013      	ands	r3, r2
 8003f0e:	61bb      	str	r3, [r7, #24]
 8003f10:	683b      	ldr	r3, [r7, #0]
 8003f12:	685b      	ldr	r3, [r3, #4]
 8003f14:	091b      	lsrs	r3, r3, #4
 8003f16:	f003 0201 	and.w	r2, r3, #1
 8003f1a:	69fb      	ldr	r3, [r7, #28]
 8003f1c:	fa02 f303 	lsl.w	r3, r2, r3
 8003f20:	69ba      	ldr	r2, [r7, #24]
 8003f22:	4313      	orrs	r3, r2
 8003f24:	61bb      	str	r3, [r7, #24]
 8003f26:	687b      	ldr	r3, [r7, #4]
 8003f28:	69ba      	ldr	r2, [r7, #24]
 8003f2a:	605a      	str	r2, [r3, #4]
 8003f2c:	683b      	ldr	r3, [r7, #0]
 8003f2e:	685b      	ldr	r3, [r3, #4]
 8003f30:	f003 0303 	and.w	r3, r3, #3
 8003f34:	2b03      	cmp	r3, #3
 8003f36:	d017      	beq.n	8003f68 <HAL_GPIO_Init+0xf0>
 8003f38:	687b      	ldr	r3, [r7, #4]
 8003f3a:	68db      	ldr	r3, [r3, #12]
 8003f3c:	61bb      	str	r3, [r7, #24]
 8003f3e:	69fb      	ldr	r3, [r7, #28]
 8003f40:	005b      	lsls	r3, r3, #1
 8003f42:	2203      	movs	r2, #3
 8003f44:	fa02 f303 	lsl.w	r3, r2, r3
 8003f48:	43db      	mvns	r3, r3
 8003f4a:	69ba      	ldr	r2, [r7, #24]
 8003f4c:	4013      	ands	r3, r2
 8003f4e:	61bb      	str	r3, [r7, #24]
 8003f50:	683b      	ldr	r3, [r7, #0]
 8003f52:	689a      	ldr	r2, [r3, #8]
 8003f54:	69fb      	ldr	r3, [r7, #28]
 8003f56:	005b      	lsls	r3, r3, #1
 8003f58:	fa02 f303 	lsl.w	r3, r2, r3
 8003f5c:	69ba      	ldr	r2, [r7, #24]
 8003f5e:	4313      	orrs	r3, r2
 8003f60:	61bb      	str	r3, [r7, #24]
 8003f62:	687b      	ldr	r3, [r7, #4]
 8003f64:	69ba      	ldr	r2, [r7, #24]
 8003f66:	60da      	str	r2, [r3, #12]
 8003f68:	683b      	ldr	r3, [r7, #0]
 8003f6a:	685b      	ldr	r3, [r3, #4]
 8003f6c:	f003 0303 	and.w	r3, r3, #3
 8003f70:	2b02      	cmp	r3, #2
 8003f72:	d123      	bne.n	8003fbc <HAL_GPIO_Init+0x144>
 8003f74:	69fb      	ldr	r3, [r7, #28]
 8003f76:	08da      	lsrs	r2, r3, #3
 8003f78:	687b      	ldr	r3, [r7, #4]
 8003f7a:	3208      	adds	r2, #8
 8003f7c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003f80:	61bb      	str	r3, [r7, #24]
 8003f82:	69fb      	ldr	r3, [r7, #28]
 8003f84:	f003 0307 	and.w	r3, r3, #7
 8003f88:	009b      	lsls	r3, r3, #2
 8003f8a:	220f      	movs	r2, #15
 8003f8c:	fa02 f303 	lsl.w	r3, r2, r3
 8003f90:	43db      	mvns	r3, r3
 8003f92:	69ba      	ldr	r2, [r7, #24]
 8003f94:	4013      	ands	r3, r2
 8003f96:	61bb      	str	r3, [r7, #24]
 8003f98:	683b      	ldr	r3, [r7, #0]
 8003f9a:	691a      	ldr	r2, [r3, #16]
 8003f9c:	69fb      	ldr	r3, [r7, #28]
 8003f9e:	f003 0307 	and.w	r3, r3, #7
 8003fa2:	009b      	lsls	r3, r3, #2
 8003fa4:	fa02 f303 	lsl.w	r3, r2, r3
 8003fa8:	69ba      	ldr	r2, [r7, #24]
 8003faa:	4313      	orrs	r3, r2
 8003fac:	61bb      	str	r3, [r7, #24]
 8003fae:	69fb      	ldr	r3, [r7, #28]
 8003fb0:	08da      	lsrs	r2, r3, #3
 8003fb2:	687b      	ldr	r3, [r7, #4]
 8003fb4:	3208      	adds	r2, #8
 8003fb6:	69b9      	ldr	r1, [r7, #24]
 8003fb8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8003fbc:	687b      	ldr	r3, [r7, #4]
 8003fbe:	681b      	ldr	r3, [r3, #0]
 8003fc0:	61bb      	str	r3, [r7, #24]
 8003fc2:	69fb      	ldr	r3, [r7, #28]
 8003fc4:	005b      	lsls	r3, r3, #1
 8003fc6:	2203      	movs	r2, #3
 8003fc8:	fa02 f303 	lsl.w	r3, r2, r3
 8003fcc:	43db      	mvns	r3, r3
 8003fce:	69ba      	ldr	r2, [r7, #24]
 8003fd0:	4013      	ands	r3, r2
 8003fd2:	61bb      	str	r3, [r7, #24]
 8003fd4:	683b      	ldr	r3, [r7, #0]
 8003fd6:	685b      	ldr	r3, [r3, #4]
 8003fd8:	f003 0203 	and.w	r2, r3, #3
 8003fdc:	69fb      	ldr	r3, [r7, #28]
 8003fde:	005b      	lsls	r3, r3, #1
 8003fe0:	fa02 f303 	lsl.w	r3, r2, r3
 8003fe4:	69ba      	ldr	r2, [r7, #24]
 8003fe6:	4313      	orrs	r3, r2
 8003fe8:	61bb      	str	r3, [r7, #24]
 8003fea:	687b      	ldr	r3, [r7, #4]
 8003fec:	69ba      	ldr	r2, [r7, #24]
 8003fee:	601a      	str	r2, [r3, #0]
 8003ff0:	683b      	ldr	r3, [r7, #0]
 8003ff2:	685b      	ldr	r3, [r3, #4]
 8003ff4:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8003ff8:	2b00      	cmp	r3, #0
 8003ffa:	f000 80ae 	beq.w	800415a <HAL_GPIO_Init+0x2e2>
 8003ffe:	2300      	movs	r3, #0
 8004000:	60fb      	str	r3, [r7, #12]
 8004002:	4b5d      	ldr	r3, [pc, #372]	@ (8004178 <HAL_GPIO_Init+0x300>)
 8004004:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004006:	4a5c      	ldr	r2, [pc, #368]	@ (8004178 <HAL_GPIO_Init+0x300>)
 8004008:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800400c:	6453      	str	r3, [r2, #68]	@ 0x44
 800400e:	4b5a      	ldr	r3, [pc, #360]	@ (8004178 <HAL_GPIO_Init+0x300>)
 8004010:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004012:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8004016:	60fb      	str	r3, [r7, #12]
 8004018:	68fb      	ldr	r3, [r7, #12]
 800401a:	4a58      	ldr	r2, [pc, #352]	@ (800417c <HAL_GPIO_Init+0x304>)
 800401c:	69fb      	ldr	r3, [r7, #28]
 800401e:	089b      	lsrs	r3, r3, #2
 8004020:	3302      	adds	r3, #2
 8004022:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004026:	61bb      	str	r3, [r7, #24]
 8004028:	69fb      	ldr	r3, [r7, #28]
 800402a:	f003 0303 	and.w	r3, r3, #3
 800402e:	009b      	lsls	r3, r3, #2
 8004030:	220f      	movs	r2, #15
 8004032:	fa02 f303 	lsl.w	r3, r2, r3
 8004036:	43db      	mvns	r3, r3
 8004038:	69ba      	ldr	r2, [r7, #24]
 800403a:	4013      	ands	r3, r2
 800403c:	61bb      	str	r3, [r7, #24]
 800403e:	687b      	ldr	r3, [r7, #4]
 8004040:	4a4f      	ldr	r2, [pc, #316]	@ (8004180 <HAL_GPIO_Init+0x308>)
 8004042:	4293      	cmp	r3, r2
 8004044:	d025      	beq.n	8004092 <HAL_GPIO_Init+0x21a>
 8004046:	687b      	ldr	r3, [r7, #4]
 8004048:	4a4e      	ldr	r2, [pc, #312]	@ (8004184 <HAL_GPIO_Init+0x30c>)
 800404a:	4293      	cmp	r3, r2
 800404c:	d01f      	beq.n	800408e <HAL_GPIO_Init+0x216>
 800404e:	687b      	ldr	r3, [r7, #4]
 8004050:	4a4d      	ldr	r2, [pc, #308]	@ (8004188 <HAL_GPIO_Init+0x310>)
 8004052:	4293      	cmp	r3, r2
 8004054:	d019      	beq.n	800408a <HAL_GPIO_Init+0x212>
 8004056:	687b      	ldr	r3, [r7, #4]
 8004058:	4a4c      	ldr	r2, [pc, #304]	@ (800418c <HAL_GPIO_Init+0x314>)
 800405a:	4293      	cmp	r3, r2
 800405c:	d013      	beq.n	8004086 <HAL_GPIO_Init+0x20e>
 800405e:	687b      	ldr	r3, [r7, #4]
 8004060:	4a4b      	ldr	r2, [pc, #300]	@ (8004190 <HAL_GPIO_Init+0x318>)
 8004062:	4293      	cmp	r3, r2
 8004064:	d00d      	beq.n	8004082 <HAL_GPIO_Init+0x20a>
 8004066:	687b      	ldr	r3, [r7, #4]
 8004068:	4a4a      	ldr	r2, [pc, #296]	@ (8004194 <HAL_GPIO_Init+0x31c>)
 800406a:	4293      	cmp	r3, r2
 800406c:	d007      	beq.n	800407e <HAL_GPIO_Init+0x206>
 800406e:	687b      	ldr	r3, [r7, #4]
 8004070:	4a49      	ldr	r2, [pc, #292]	@ (8004198 <HAL_GPIO_Init+0x320>)
 8004072:	4293      	cmp	r3, r2
 8004074:	d101      	bne.n	800407a <HAL_GPIO_Init+0x202>
 8004076:	2306      	movs	r3, #6
 8004078:	e00c      	b.n	8004094 <HAL_GPIO_Init+0x21c>
 800407a:	2307      	movs	r3, #7
 800407c:	e00a      	b.n	8004094 <HAL_GPIO_Init+0x21c>
 800407e:	2305      	movs	r3, #5
 8004080:	e008      	b.n	8004094 <HAL_GPIO_Init+0x21c>
 8004082:	2304      	movs	r3, #4
 8004084:	e006      	b.n	8004094 <HAL_GPIO_Init+0x21c>
 8004086:	2303      	movs	r3, #3
 8004088:	e004      	b.n	8004094 <HAL_GPIO_Init+0x21c>
 800408a:	2302      	movs	r3, #2
 800408c:	e002      	b.n	8004094 <HAL_GPIO_Init+0x21c>
 800408e:	2301      	movs	r3, #1
 8004090:	e000      	b.n	8004094 <HAL_GPIO_Init+0x21c>
 8004092:	2300      	movs	r3, #0
 8004094:	69fa      	ldr	r2, [r7, #28]
 8004096:	f002 0203 	and.w	r2, r2, #3
 800409a:	0092      	lsls	r2, r2, #2
 800409c:	4093      	lsls	r3, r2
 800409e:	69ba      	ldr	r2, [r7, #24]
 80040a0:	4313      	orrs	r3, r2
 80040a2:	61bb      	str	r3, [r7, #24]
 80040a4:	4935      	ldr	r1, [pc, #212]	@ (800417c <HAL_GPIO_Init+0x304>)
 80040a6:	69fb      	ldr	r3, [r7, #28]
 80040a8:	089b      	lsrs	r3, r3, #2
 80040aa:	3302      	adds	r3, #2
 80040ac:	69ba      	ldr	r2, [r7, #24]
 80040ae:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80040b2:	4b3a      	ldr	r3, [pc, #232]	@ (800419c <HAL_GPIO_Init+0x324>)
 80040b4:	689b      	ldr	r3, [r3, #8]
 80040b6:	61bb      	str	r3, [r7, #24]
 80040b8:	693b      	ldr	r3, [r7, #16]
 80040ba:	43db      	mvns	r3, r3
 80040bc:	69ba      	ldr	r2, [r7, #24]
 80040be:	4013      	ands	r3, r2
 80040c0:	61bb      	str	r3, [r7, #24]
 80040c2:	683b      	ldr	r3, [r7, #0]
 80040c4:	685b      	ldr	r3, [r3, #4]
 80040c6:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80040ca:	2b00      	cmp	r3, #0
 80040cc:	d003      	beq.n	80040d6 <HAL_GPIO_Init+0x25e>
 80040ce:	69ba      	ldr	r2, [r7, #24]
 80040d0:	693b      	ldr	r3, [r7, #16]
 80040d2:	4313      	orrs	r3, r2
 80040d4:	61bb      	str	r3, [r7, #24]
 80040d6:	4a31      	ldr	r2, [pc, #196]	@ (800419c <HAL_GPIO_Init+0x324>)
 80040d8:	69bb      	ldr	r3, [r7, #24]
 80040da:	6093      	str	r3, [r2, #8]
 80040dc:	4b2f      	ldr	r3, [pc, #188]	@ (800419c <HAL_GPIO_Init+0x324>)
 80040de:	68db      	ldr	r3, [r3, #12]
 80040e0:	61bb      	str	r3, [r7, #24]
 80040e2:	693b      	ldr	r3, [r7, #16]
 80040e4:	43db      	mvns	r3, r3
 80040e6:	69ba      	ldr	r2, [r7, #24]
 80040e8:	4013      	ands	r3, r2
 80040ea:	61bb      	str	r3, [r7, #24]
 80040ec:	683b      	ldr	r3, [r7, #0]
 80040ee:	685b      	ldr	r3, [r3, #4]
 80040f0:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 80040f4:	2b00      	cmp	r3, #0
 80040f6:	d003      	beq.n	8004100 <HAL_GPIO_Init+0x288>
 80040f8:	69ba      	ldr	r2, [r7, #24]
 80040fa:	693b      	ldr	r3, [r7, #16]
 80040fc:	4313      	orrs	r3, r2
 80040fe:	61bb      	str	r3, [r7, #24]
 8004100:	4a26      	ldr	r2, [pc, #152]	@ (800419c <HAL_GPIO_Init+0x324>)
 8004102:	69bb      	ldr	r3, [r7, #24]
 8004104:	60d3      	str	r3, [r2, #12]
 8004106:	4b25      	ldr	r3, [pc, #148]	@ (800419c <HAL_GPIO_Init+0x324>)
 8004108:	685b      	ldr	r3, [r3, #4]
 800410a:	61bb      	str	r3, [r7, #24]
 800410c:	693b      	ldr	r3, [r7, #16]
 800410e:	43db      	mvns	r3, r3
 8004110:	69ba      	ldr	r2, [r7, #24]
 8004112:	4013      	ands	r3, r2
 8004114:	61bb      	str	r3, [r7, #24]
 8004116:	683b      	ldr	r3, [r7, #0]
 8004118:	685b      	ldr	r3, [r3, #4]
 800411a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800411e:	2b00      	cmp	r3, #0
 8004120:	d003      	beq.n	800412a <HAL_GPIO_Init+0x2b2>
 8004122:	69ba      	ldr	r2, [r7, #24]
 8004124:	693b      	ldr	r3, [r7, #16]
 8004126:	4313      	orrs	r3, r2
 8004128:	61bb      	str	r3, [r7, #24]
 800412a:	4a1c      	ldr	r2, [pc, #112]	@ (800419c <HAL_GPIO_Init+0x324>)
 800412c:	69bb      	ldr	r3, [r7, #24]
 800412e:	6053      	str	r3, [r2, #4]
 8004130:	4b1a      	ldr	r3, [pc, #104]	@ (800419c <HAL_GPIO_Init+0x324>)
 8004132:	681b      	ldr	r3, [r3, #0]
 8004134:	61bb      	str	r3, [r7, #24]
 8004136:	693b      	ldr	r3, [r7, #16]
 8004138:	43db      	mvns	r3, r3
 800413a:	69ba      	ldr	r2, [r7, #24]
 800413c:	4013      	ands	r3, r2
 800413e:	61bb      	str	r3, [r7, #24]
 8004140:	683b      	ldr	r3, [r7, #0]
 8004142:	685b      	ldr	r3, [r3, #4]
 8004144:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8004148:	2b00      	cmp	r3, #0
 800414a:	d003      	beq.n	8004154 <HAL_GPIO_Init+0x2dc>
 800414c:	69ba      	ldr	r2, [r7, #24]
 800414e:	693b      	ldr	r3, [r7, #16]
 8004150:	4313      	orrs	r3, r2
 8004152:	61bb      	str	r3, [r7, #24]
 8004154:	4a11      	ldr	r2, [pc, #68]	@ (800419c <HAL_GPIO_Init+0x324>)
 8004156:	69bb      	ldr	r3, [r7, #24]
 8004158:	6013      	str	r3, [r2, #0]
 800415a:	69fb      	ldr	r3, [r7, #28]
 800415c:	3301      	adds	r3, #1
 800415e:	61fb      	str	r3, [r7, #28]
 8004160:	69fb      	ldr	r3, [r7, #28]
 8004162:	2b0f      	cmp	r3, #15
 8004164:	f67f ae96 	bls.w	8003e94 <HAL_GPIO_Init+0x1c>
 8004168:	bf00      	nop
 800416a:	bf00      	nop
 800416c:	3724      	adds	r7, #36	@ 0x24
 800416e:	46bd      	mov	sp, r7
 8004170:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004174:	4770      	bx	lr
 8004176:	bf00      	nop
 8004178:	40023800 	.word	0x40023800
 800417c:	40013800 	.word	0x40013800
 8004180:	40020000 	.word	0x40020000
 8004184:	40020400 	.word	0x40020400
 8004188:	40020800 	.word	0x40020800
 800418c:	40020c00 	.word	0x40020c00
 8004190:	40021000 	.word	0x40021000
 8004194:	40021400 	.word	0x40021400
 8004198:	40021800 	.word	0x40021800
 800419c:	40013c00 	.word	0x40013c00

080041a0 <HAL_GPIO_WritePin>:
 80041a0:	b480      	push	{r7}
 80041a2:	b083      	sub	sp, #12
 80041a4:	af00      	add	r7, sp, #0
 80041a6:	6078      	str	r0, [r7, #4]
 80041a8:	460b      	mov	r3, r1
 80041aa:	807b      	strh	r3, [r7, #2]
 80041ac:	4613      	mov	r3, r2
 80041ae:	707b      	strb	r3, [r7, #1]
 80041b0:	787b      	ldrb	r3, [r7, #1]
 80041b2:	2b00      	cmp	r3, #0
 80041b4:	d003      	beq.n	80041be <HAL_GPIO_WritePin+0x1e>
 80041b6:	887a      	ldrh	r2, [r7, #2]
 80041b8:	687b      	ldr	r3, [r7, #4]
 80041ba:	619a      	str	r2, [r3, #24]
 80041bc:	e003      	b.n	80041c6 <HAL_GPIO_WritePin+0x26>
 80041be:	887b      	ldrh	r3, [r7, #2]
 80041c0:	041a      	lsls	r2, r3, #16
 80041c2:	687b      	ldr	r3, [r7, #4]
 80041c4:	619a      	str	r2, [r3, #24]
 80041c6:	bf00      	nop
 80041c8:	370c      	adds	r7, #12
 80041ca:	46bd      	mov	sp, r7
 80041cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041d0:	4770      	bx	lr
	...

080041d4 <HAL_I2C_Init>:
 80041d4:	b580      	push	{r7, lr}
 80041d6:	b084      	sub	sp, #16
 80041d8:	af00      	add	r7, sp, #0
 80041da:	6078      	str	r0, [r7, #4]
 80041dc:	687b      	ldr	r3, [r7, #4]
 80041de:	2b00      	cmp	r3, #0
 80041e0:	d101      	bne.n	80041e6 <HAL_I2C_Init+0x12>
 80041e2:	2301      	movs	r3, #1
 80041e4:	e12b      	b.n	800443e <HAL_I2C_Init+0x26a>
 80041e6:	687b      	ldr	r3, [r7, #4]
 80041e8:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80041ec:	b2db      	uxtb	r3, r3
 80041ee:	2b00      	cmp	r3, #0
 80041f0:	d106      	bne.n	8004200 <HAL_I2C_Init+0x2c>
 80041f2:	687b      	ldr	r3, [r7, #4]
 80041f4:	2200      	movs	r2, #0
 80041f6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80041fa:	6878      	ldr	r0, [r7, #4]
 80041fc:	f7fd ff7c 	bl	80020f8 <HAL_I2C_MspInit>
 8004200:	687b      	ldr	r3, [r7, #4]
 8004202:	2224      	movs	r2, #36	@ 0x24
 8004204:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004208:	687b      	ldr	r3, [r7, #4]
 800420a:	681b      	ldr	r3, [r3, #0]
 800420c:	681a      	ldr	r2, [r3, #0]
 800420e:	687b      	ldr	r3, [r7, #4]
 8004210:	681b      	ldr	r3, [r3, #0]
 8004212:	f022 0201 	bic.w	r2, r2, #1
 8004216:	601a      	str	r2, [r3, #0]
 8004218:	687b      	ldr	r3, [r7, #4]
 800421a:	681b      	ldr	r3, [r3, #0]
 800421c:	681a      	ldr	r2, [r3, #0]
 800421e:	687b      	ldr	r3, [r7, #4]
 8004220:	681b      	ldr	r3, [r3, #0]
 8004222:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8004226:	601a      	str	r2, [r3, #0]
 8004228:	687b      	ldr	r3, [r7, #4]
 800422a:	681b      	ldr	r3, [r3, #0]
 800422c:	681a      	ldr	r2, [r3, #0]
 800422e:	687b      	ldr	r3, [r7, #4]
 8004230:	681b      	ldr	r3, [r3, #0]
 8004232:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8004236:	601a      	str	r2, [r3, #0]
 8004238:	f000 fa52 	bl	80046e0 <HAL_RCC_GetPCLK1Freq>
 800423c:	60f8      	str	r0, [r7, #12]
 800423e:	687b      	ldr	r3, [r7, #4]
 8004240:	685b      	ldr	r3, [r3, #4]
 8004242:	4a81      	ldr	r2, [pc, #516]	@ (8004448 <HAL_I2C_Init+0x274>)
 8004244:	4293      	cmp	r3, r2
 8004246:	d807      	bhi.n	8004258 <HAL_I2C_Init+0x84>
 8004248:	68fb      	ldr	r3, [r7, #12]
 800424a:	4a80      	ldr	r2, [pc, #512]	@ (800444c <HAL_I2C_Init+0x278>)
 800424c:	4293      	cmp	r3, r2
 800424e:	bf94      	ite	ls
 8004250:	2301      	movls	r3, #1
 8004252:	2300      	movhi	r3, #0
 8004254:	b2db      	uxtb	r3, r3
 8004256:	e006      	b.n	8004266 <HAL_I2C_Init+0x92>
 8004258:	68fb      	ldr	r3, [r7, #12]
 800425a:	4a7d      	ldr	r2, [pc, #500]	@ (8004450 <HAL_I2C_Init+0x27c>)
 800425c:	4293      	cmp	r3, r2
 800425e:	bf94      	ite	ls
 8004260:	2301      	movls	r3, #1
 8004262:	2300      	movhi	r3, #0
 8004264:	b2db      	uxtb	r3, r3
 8004266:	2b00      	cmp	r3, #0
 8004268:	d001      	beq.n	800426e <HAL_I2C_Init+0x9a>
 800426a:	2301      	movs	r3, #1
 800426c:	e0e7      	b.n	800443e <HAL_I2C_Init+0x26a>
 800426e:	68fb      	ldr	r3, [r7, #12]
 8004270:	4a78      	ldr	r2, [pc, #480]	@ (8004454 <HAL_I2C_Init+0x280>)
 8004272:	fba2 2303 	umull	r2, r3, r2, r3
 8004276:	0c9b      	lsrs	r3, r3, #18
 8004278:	60bb      	str	r3, [r7, #8]
 800427a:	687b      	ldr	r3, [r7, #4]
 800427c:	681b      	ldr	r3, [r3, #0]
 800427e:	685b      	ldr	r3, [r3, #4]
 8004280:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8004284:	687b      	ldr	r3, [r7, #4]
 8004286:	681b      	ldr	r3, [r3, #0]
 8004288:	68ba      	ldr	r2, [r7, #8]
 800428a:	430a      	orrs	r2, r1
 800428c:	605a      	str	r2, [r3, #4]
 800428e:	687b      	ldr	r3, [r7, #4]
 8004290:	681b      	ldr	r3, [r3, #0]
 8004292:	6a1b      	ldr	r3, [r3, #32]
 8004294:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8004298:	687b      	ldr	r3, [r7, #4]
 800429a:	685b      	ldr	r3, [r3, #4]
 800429c:	4a6a      	ldr	r2, [pc, #424]	@ (8004448 <HAL_I2C_Init+0x274>)
 800429e:	4293      	cmp	r3, r2
 80042a0:	d802      	bhi.n	80042a8 <HAL_I2C_Init+0xd4>
 80042a2:	68bb      	ldr	r3, [r7, #8]
 80042a4:	3301      	adds	r3, #1
 80042a6:	e009      	b.n	80042bc <HAL_I2C_Init+0xe8>
 80042a8:	68bb      	ldr	r3, [r7, #8]
 80042aa:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 80042ae:	fb02 f303 	mul.w	r3, r2, r3
 80042b2:	4a69      	ldr	r2, [pc, #420]	@ (8004458 <HAL_I2C_Init+0x284>)
 80042b4:	fba2 2303 	umull	r2, r3, r2, r3
 80042b8:	099b      	lsrs	r3, r3, #6
 80042ba:	3301      	adds	r3, #1
 80042bc:	687a      	ldr	r2, [r7, #4]
 80042be:	6812      	ldr	r2, [r2, #0]
 80042c0:	430b      	orrs	r3, r1
 80042c2:	6213      	str	r3, [r2, #32]
 80042c4:	687b      	ldr	r3, [r7, #4]
 80042c6:	681b      	ldr	r3, [r3, #0]
 80042c8:	69db      	ldr	r3, [r3, #28]
 80042ca:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 80042ce:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 80042d2:	687b      	ldr	r3, [r7, #4]
 80042d4:	685b      	ldr	r3, [r3, #4]
 80042d6:	495c      	ldr	r1, [pc, #368]	@ (8004448 <HAL_I2C_Init+0x274>)
 80042d8:	428b      	cmp	r3, r1
 80042da:	d819      	bhi.n	8004310 <HAL_I2C_Init+0x13c>
 80042dc:	68fb      	ldr	r3, [r7, #12]
 80042de:	1e59      	subs	r1, r3, #1
 80042e0:	687b      	ldr	r3, [r7, #4]
 80042e2:	685b      	ldr	r3, [r3, #4]
 80042e4:	005b      	lsls	r3, r3, #1
 80042e6:	fbb1 f3f3 	udiv	r3, r1, r3
 80042ea:	1c59      	adds	r1, r3, #1
 80042ec:	f640 73fc 	movw	r3, #4092	@ 0xffc
 80042f0:	400b      	ands	r3, r1
 80042f2:	2b00      	cmp	r3, #0
 80042f4:	d00a      	beq.n	800430c <HAL_I2C_Init+0x138>
 80042f6:	68fb      	ldr	r3, [r7, #12]
 80042f8:	1e59      	subs	r1, r3, #1
 80042fa:	687b      	ldr	r3, [r7, #4]
 80042fc:	685b      	ldr	r3, [r3, #4]
 80042fe:	005b      	lsls	r3, r3, #1
 8004300:	fbb1 f3f3 	udiv	r3, r1, r3
 8004304:	3301      	adds	r3, #1
 8004306:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800430a:	e051      	b.n	80043b0 <HAL_I2C_Init+0x1dc>
 800430c:	2304      	movs	r3, #4
 800430e:	e04f      	b.n	80043b0 <HAL_I2C_Init+0x1dc>
 8004310:	687b      	ldr	r3, [r7, #4]
 8004312:	689b      	ldr	r3, [r3, #8]
 8004314:	2b00      	cmp	r3, #0
 8004316:	d111      	bne.n	800433c <HAL_I2C_Init+0x168>
 8004318:	68fb      	ldr	r3, [r7, #12]
 800431a:	1e58      	subs	r0, r3, #1
 800431c:	687b      	ldr	r3, [r7, #4]
 800431e:	6859      	ldr	r1, [r3, #4]
 8004320:	460b      	mov	r3, r1
 8004322:	005b      	lsls	r3, r3, #1
 8004324:	440b      	add	r3, r1
 8004326:	fbb0 f3f3 	udiv	r3, r0, r3
 800432a:	3301      	adds	r3, #1
 800432c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004330:	2b00      	cmp	r3, #0
 8004332:	bf0c      	ite	eq
 8004334:	2301      	moveq	r3, #1
 8004336:	2300      	movne	r3, #0
 8004338:	b2db      	uxtb	r3, r3
 800433a:	e012      	b.n	8004362 <HAL_I2C_Init+0x18e>
 800433c:	68fb      	ldr	r3, [r7, #12]
 800433e:	1e58      	subs	r0, r3, #1
 8004340:	687b      	ldr	r3, [r7, #4]
 8004342:	6859      	ldr	r1, [r3, #4]
 8004344:	460b      	mov	r3, r1
 8004346:	009b      	lsls	r3, r3, #2
 8004348:	440b      	add	r3, r1
 800434a:	0099      	lsls	r1, r3, #2
 800434c:	440b      	add	r3, r1
 800434e:	fbb0 f3f3 	udiv	r3, r0, r3
 8004352:	3301      	adds	r3, #1
 8004354:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004358:	2b00      	cmp	r3, #0
 800435a:	bf0c      	ite	eq
 800435c:	2301      	moveq	r3, #1
 800435e:	2300      	movne	r3, #0
 8004360:	b2db      	uxtb	r3, r3
 8004362:	2b00      	cmp	r3, #0
 8004364:	d001      	beq.n	800436a <HAL_I2C_Init+0x196>
 8004366:	2301      	movs	r3, #1
 8004368:	e022      	b.n	80043b0 <HAL_I2C_Init+0x1dc>
 800436a:	687b      	ldr	r3, [r7, #4]
 800436c:	689b      	ldr	r3, [r3, #8]
 800436e:	2b00      	cmp	r3, #0
 8004370:	d10e      	bne.n	8004390 <HAL_I2C_Init+0x1bc>
 8004372:	68fb      	ldr	r3, [r7, #12]
 8004374:	1e58      	subs	r0, r3, #1
 8004376:	687b      	ldr	r3, [r7, #4]
 8004378:	6859      	ldr	r1, [r3, #4]
 800437a:	460b      	mov	r3, r1
 800437c:	005b      	lsls	r3, r3, #1
 800437e:	440b      	add	r3, r1
 8004380:	fbb0 f3f3 	udiv	r3, r0, r3
 8004384:	3301      	adds	r3, #1
 8004386:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800438a:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 800438e:	e00f      	b.n	80043b0 <HAL_I2C_Init+0x1dc>
 8004390:	68fb      	ldr	r3, [r7, #12]
 8004392:	1e58      	subs	r0, r3, #1
 8004394:	687b      	ldr	r3, [r7, #4]
 8004396:	6859      	ldr	r1, [r3, #4]
 8004398:	460b      	mov	r3, r1
 800439a:	009b      	lsls	r3, r3, #2
 800439c:	440b      	add	r3, r1
 800439e:	0099      	lsls	r1, r3, #2
 80043a0:	440b      	add	r3, r1
 80043a2:	fbb0 f3f3 	udiv	r3, r0, r3
 80043a6:	3301      	adds	r3, #1
 80043a8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80043ac:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 80043b0:	6879      	ldr	r1, [r7, #4]
 80043b2:	6809      	ldr	r1, [r1, #0]
 80043b4:	4313      	orrs	r3, r2
 80043b6:	61cb      	str	r3, [r1, #28]
 80043b8:	687b      	ldr	r3, [r7, #4]
 80043ba:	681b      	ldr	r3, [r3, #0]
 80043bc:	681b      	ldr	r3, [r3, #0]
 80043be:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 80043c2:	687b      	ldr	r3, [r7, #4]
 80043c4:	69da      	ldr	r2, [r3, #28]
 80043c6:	687b      	ldr	r3, [r7, #4]
 80043c8:	6a1b      	ldr	r3, [r3, #32]
 80043ca:	431a      	orrs	r2, r3
 80043cc:	687b      	ldr	r3, [r7, #4]
 80043ce:	681b      	ldr	r3, [r3, #0]
 80043d0:	430a      	orrs	r2, r1
 80043d2:	601a      	str	r2, [r3, #0]
 80043d4:	687b      	ldr	r3, [r7, #4]
 80043d6:	681b      	ldr	r3, [r3, #0]
 80043d8:	689b      	ldr	r3, [r3, #8]
 80043da:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 80043de:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 80043e2:	687a      	ldr	r2, [r7, #4]
 80043e4:	6911      	ldr	r1, [r2, #16]
 80043e6:	687a      	ldr	r2, [r7, #4]
 80043e8:	68d2      	ldr	r2, [r2, #12]
 80043ea:	4311      	orrs	r1, r2
 80043ec:	687a      	ldr	r2, [r7, #4]
 80043ee:	6812      	ldr	r2, [r2, #0]
 80043f0:	430b      	orrs	r3, r1
 80043f2:	6093      	str	r3, [r2, #8]
 80043f4:	687b      	ldr	r3, [r7, #4]
 80043f6:	681b      	ldr	r3, [r3, #0]
 80043f8:	68db      	ldr	r3, [r3, #12]
 80043fa:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 80043fe:	687b      	ldr	r3, [r7, #4]
 8004400:	695a      	ldr	r2, [r3, #20]
 8004402:	687b      	ldr	r3, [r7, #4]
 8004404:	699b      	ldr	r3, [r3, #24]
 8004406:	431a      	orrs	r2, r3
 8004408:	687b      	ldr	r3, [r7, #4]
 800440a:	681b      	ldr	r3, [r3, #0]
 800440c:	430a      	orrs	r2, r1
 800440e:	60da      	str	r2, [r3, #12]
 8004410:	687b      	ldr	r3, [r7, #4]
 8004412:	681b      	ldr	r3, [r3, #0]
 8004414:	681a      	ldr	r2, [r3, #0]
 8004416:	687b      	ldr	r3, [r7, #4]
 8004418:	681b      	ldr	r3, [r3, #0]
 800441a:	f042 0201 	orr.w	r2, r2, #1
 800441e:	601a      	str	r2, [r3, #0]
 8004420:	687b      	ldr	r3, [r7, #4]
 8004422:	2200      	movs	r2, #0
 8004424:	641a      	str	r2, [r3, #64]	@ 0x40
 8004426:	687b      	ldr	r3, [r7, #4]
 8004428:	2220      	movs	r2, #32
 800442a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800442e:	687b      	ldr	r3, [r7, #4]
 8004430:	2200      	movs	r2, #0
 8004432:	631a      	str	r2, [r3, #48]	@ 0x30
 8004434:	687b      	ldr	r3, [r7, #4]
 8004436:	2200      	movs	r2, #0
 8004438:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800443c:	2300      	movs	r3, #0
 800443e:	4618      	mov	r0, r3
 8004440:	3710      	adds	r7, #16
 8004442:	46bd      	mov	sp, r7
 8004444:	bd80      	pop	{r7, pc}
 8004446:	bf00      	nop
 8004448:	000186a0 	.word	0x000186a0
 800444c:	001e847f 	.word	0x001e847f
 8004450:	003d08ff 	.word	0x003d08ff
 8004454:	431bde83 	.word	0x431bde83
 8004458:	10624dd3 	.word	0x10624dd3

0800445c <HAL_PWREx_EnableOverDrive>:
 800445c:	b580      	push	{r7, lr}
 800445e:	b082      	sub	sp, #8
 8004460:	af00      	add	r7, sp, #0
 8004462:	2300      	movs	r3, #0
 8004464:	607b      	str	r3, [r7, #4]
 8004466:	2300      	movs	r3, #0
 8004468:	603b      	str	r3, [r7, #0]
 800446a:	4b20      	ldr	r3, [pc, #128]	@ (80044ec <HAL_PWREx_EnableOverDrive+0x90>)
 800446c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800446e:	4a1f      	ldr	r2, [pc, #124]	@ (80044ec <HAL_PWREx_EnableOverDrive+0x90>)
 8004470:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8004474:	6413      	str	r3, [r2, #64]	@ 0x40
 8004476:	4b1d      	ldr	r3, [pc, #116]	@ (80044ec <HAL_PWREx_EnableOverDrive+0x90>)
 8004478:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800447a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800447e:	603b      	str	r3, [r7, #0]
 8004480:	683b      	ldr	r3, [r7, #0]
 8004482:	4b1b      	ldr	r3, [pc, #108]	@ (80044f0 <HAL_PWREx_EnableOverDrive+0x94>)
 8004484:	2201      	movs	r2, #1
 8004486:	601a      	str	r2, [r3, #0]
 8004488:	f7fe f872 	bl	8002570 <HAL_GetTick>
 800448c:	6078      	str	r0, [r7, #4]
 800448e:	e009      	b.n	80044a4 <HAL_PWREx_EnableOverDrive+0x48>
 8004490:	f7fe f86e 	bl	8002570 <HAL_GetTick>
 8004494:	4602      	mov	r2, r0
 8004496:	687b      	ldr	r3, [r7, #4]
 8004498:	1ad3      	subs	r3, r2, r3
 800449a:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 800449e:	d901      	bls.n	80044a4 <HAL_PWREx_EnableOverDrive+0x48>
 80044a0:	2303      	movs	r3, #3
 80044a2:	e01f      	b.n	80044e4 <HAL_PWREx_EnableOverDrive+0x88>
 80044a4:	4b13      	ldr	r3, [pc, #76]	@ (80044f4 <HAL_PWREx_EnableOverDrive+0x98>)
 80044a6:	685b      	ldr	r3, [r3, #4]
 80044a8:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80044ac:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80044b0:	d1ee      	bne.n	8004490 <HAL_PWREx_EnableOverDrive+0x34>
 80044b2:	4b11      	ldr	r3, [pc, #68]	@ (80044f8 <HAL_PWREx_EnableOverDrive+0x9c>)
 80044b4:	2201      	movs	r2, #1
 80044b6:	601a      	str	r2, [r3, #0]
 80044b8:	f7fe f85a 	bl	8002570 <HAL_GetTick>
 80044bc:	6078      	str	r0, [r7, #4]
 80044be:	e009      	b.n	80044d4 <HAL_PWREx_EnableOverDrive+0x78>
 80044c0:	f7fe f856 	bl	8002570 <HAL_GetTick>
 80044c4:	4602      	mov	r2, r0
 80044c6:	687b      	ldr	r3, [r7, #4]
 80044c8:	1ad3      	subs	r3, r2, r3
 80044ca:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80044ce:	d901      	bls.n	80044d4 <HAL_PWREx_EnableOverDrive+0x78>
 80044d0:	2303      	movs	r3, #3
 80044d2:	e007      	b.n	80044e4 <HAL_PWREx_EnableOverDrive+0x88>
 80044d4:	4b07      	ldr	r3, [pc, #28]	@ (80044f4 <HAL_PWREx_EnableOverDrive+0x98>)
 80044d6:	685b      	ldr	r3, [r3, #4]
 80044d8:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80044dc:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 80044e0:	d1ee      	bne.n	80044c0 <HAL_PWREx_EnableOverDrive+0x64>
 80044e2:	2300      	movs	r3, #0
 80044e4:	4618      	mov	r0, r3
 80044e6:	3708      	adds	r7, #8
 80044e8:	46bd      	mov	sp, r7
 80044ea:	bd80      	pop	{r7, pc}
 80044ec:	40023800 	.word	0x40023800
 80044f0:	420e0040 	.word	0x420e0040
 80044f4:	40007000 	.word	0x40007000
 80044f8:	420e0044 	.word	0x420e0044

080044fc <HAL_RCC_ClockConfig>:
 80044fc:	b580      	push	{r7, lr}
 80044fe:	b084      	sub	sp, #16
 8004500:	af00      	add	r7, sp, #0
 8004502:	6078      	str	r0, [r7, #4]
 8004504:	6039      	str	r1, [r7, #0]
 8004506:	687b      	ldr	r3, [r7, #4]
 8004508:	2b00      	cmp	r3, #0
 800450a:	d101      	bne.n	8004510 <HAL_RCC_ClockConfig+0x14>
 800450c:	2301      	movs	r3, #1
 800450e:	e0cc      	b.n	80046aa <HAL_RCC_ClockConfig+0x1ae>
 8004510:	4b68      	ldr	r3, [pc, #416]	@ (80046b4 <HAL_RCC_ClockConfig+0x1b8>)
 8004512:	681b      	ldr	r3, [r3, #0]
 8004514:	f003 030f 	and.w	r3, r3, #15
 8004518:	683a      	ldr	r2, [r7, #0]
 800451a:	429a      	cmp	r2, r3
 800451c:	d90c      	bls.n	8004538 <HAL_RCC_ClockConfig+0x3c>
 800451e:	4b65      	ldr	r3, [pc, #404]	@ (80046b4 <HAL_RCC_ClockConfig+0x1b8>)
 8004520:	683a      	ldr	r2, [r7, #0]
 8004522:	b2d2      	uxtb	r2, r2
 8004524:	701a      	strb	r2, [r3, #0]
 8004526:	4b63      	ldr	r3, [pc, #396]	@ (80046b4 <HAL_RCC_ClockConfig+0x1b8>)
 8004528:	681b      	ldr	r3, [r3, #0]
 800452a:	f003 030f 	and.w	r3, r3, #15
 800452e:	683a      	ldr	r2, [r7, #0]
 8004530:	429a      	cmp	r2, r3
 8004532:	d001      	beq.n	8004538 <HAL_RCC_ClockConfig+0x3c>
 8004534:	2301      	movs	r3, #1
 8004536:	e0b8      	b.n	80046aa <HAL_RCC_ClockConfig+0x1ae>
 8004538:	687b      	ldr	r3, [r7, #4]
 800453a:	681b      	ldr	r3, [r3, #0]
 800453c:	f003 0302 	and.w	r3, r3, #2
 8004540:	2b00      	cmp	r3, #0
 8004542:	d020      	beq.n	8004586 <HAL_RCC_ClockConfig+0x8a>
 8004544:	687b      	ldr	r3, [r7, #4]
 8004546:	681b      	ldr	r3, [r3, #0]
 8004548:	f003 0304 	and.w	r3, r3, #4
 800454c:	2b00      	cmp	r3, #0
 800454e:	d005      	beq.n	800455c <HAL_RCC_ClockConfig+0x60>
 8004550:	4b59      	ldr	r3, [pc, #356]	@ (80046b8 <HAL_RCC_ClockConfig+0x1bc>)
 8004552:	689b      	ldr	r3, [r3, #8]
 8004554:	4a58      	ldr	r2, [pc, #352]	@ (80046b8 <HAL_RCC_ClockConfig+0x1bc>)
 8004556:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 800455a:	6093      	str	r3, [r2, #8]
 800455c:	687b      	ldr	r3, [r7, #4]
 800455e:	681b      	ldr	r3, [r3, #0]
 8004560:	f003 0308 	and.w	r3, r3, #8
 8004564:	2b00      	cmp	r3, #0
 8004566:	d005      	beq.n	8004574 <HAL_RCC_ClockConfig+0x78>
 8004568:	4b53      	ldr	r3, [pc, #332]	@ (80046b8 <HAL_RCC_ClockConfig+0x1bc>)
 800456a:	689b      	ldr	r3, [r3, #8]
 800456c:	4a52      	ldr	r2, [pc, #328]	@ (80046b8 <HAL_RCC_ClockConfig+0x1bc>)
 800456e:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 8004572:	6093      	str	r3, [r2, #8]
 8004574:	4b50      	ldr	r3, [pc, #320]	@ (80046b8 <HAL_RCC_ClockConfig+0x1bc>)
 8004576:	689b      	ldr	r3, [r3, #8]
 8004578:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 800457c:	687b      	ldr	r3, [r7, #4]
 800457e:	689b      	ldr	r3, [r3, #8]
 8004580:	494d      	ldr	r1, [pc, #308]	@ (80046b8 <HAL_RCC_ClockConfig+0x1bc>)
 8004582:	4313      	orrs	r3, r2
 8004584:	608b      	str	r3, [r1, #8]
 8004586:	687b      	ldr	r3, [r7, #4]
 8004588:	681b      	ldr	r3, [r3, #0]
 800458a:	f003 0301 	and.w	r3, r3, #1
 800458e:	2b00      	cmp	r3, #0
 8004590:	d044      	beq.n	800461c <HAL_RCC_ClockConfig+0x120>
 8004592:	687b      	ldr	r3, [r7, #4]
 8004594:	685b      	ldr	r3, [r3, #4]
 8004596:	2b01      	cmp	r3, #1
 8004598:	d107      	bne.n	80045aa <HAL_RCC_ClockConfig+0xae>
 800459a:	4b47      	ldr	r3, [pc, #284]	@ (80046b8 <HAL_RCC_ClockConfig+0x1bc>)
 800459c:	681b      	ldr	r3, [r3, #0]
 800459e:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80045a2:	2b00      	cmp	r3, #0
 80045a4:	d119      	bne.n	80045da <HAL_RCC_ClockConfig+0xde>
 80045a6:	2301      	movs	r3, #1
 80045a8:	e07f      	b.n	80046aa <HAL_RCC_ClockConfig+0x1ae>
 80045aa:	687b      	ldr	r3, [r7, #4]
 80045ac:	685b      	ldr	r3, [r3, #4]
 80045ae:	2b02      	cmp	r3, #2
 80045b0:	d003      	beq.n	80045ba <HAL_RCC_ClockConfig+0xbe>
 80045b2:	687b      	ldr	r3, [r7, #4]
 80045b4:	685b      	ldr	r3, [r3, #4]
 80045b6:	2b03      	cmp	r3, #3
 80045b8:	d107      	bne.n	80045ca <HAL_RCC_ClockConfig+0xce>
 80045ba:	4b3f      	ldr	r3, [pc, #252]	@ (80046b8 <HAL_RCC_ClockConfig+0x1bc>)
 80045bc:	681b      	ldr	r3, [r3, #0]
 80045be:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80045c2:	2b00      	cmp	r3, #0
 80045c4:	d109      	bne.n	80045da <HAL_RCC_ClockConfig+0xde>
 80045c6:	2301      	movs	r3, #1
 80045c8:	e06f      	b.n	80046aa <HAL_RCC_ClockConfig+0x1ae>
 80045ca:	4b3b      	ldr	r3, [pc, #236]	@ (80046b8 <HAL_RCC_ClockConfig+0x1bc>)
 80045cc:	681b      	ldr	r3, [r3, #0]
 80045ce:	f003 0302 	and.w	r3, r3, #2
 80045d2:	2b00      	cmp	r3, #0
 80045d4:	d101      	bne.n	80045da <HAL_RCC_ClockConfig+0xde>
 80045d6:	2301      	movs	r3, #1
 80045d8:	e067      	b.n	80046aa <HAL_RCC_ClockConfig+0x1ae>
 80045da:	4b37      	ldr	r3, [pc, #220]	@ (80046b8 <HAL_RCC_ClockConfig+0x1bc>)
 80045dc:	689b      	ldr	r3, [r3, #8]
 80045de:	f023 0203 	bic.w	r2, r3, #3
 80045e2:	687b      	ldr	r3, [r7, #4]
 80045e4:	685b      	ldr	r3, [r3, #4]
 80045e6:	4934      	ldr	r1, [pc, #208]	@ (80046b8 <HAL_RCC_ClockConfig+0x1bc>)
 80045e8:	4313      	orrs	r3, r2
 80045ea:	608b      	str	r3, [r1, #8]
 80045ec:	f7fd ffc0 	bl	8002570 <HAL_GetTick>
 80045f0:	60f8      	str	r0, [r7, #12]
 80045f2:	e00a      	b.n	800460a <HAL_RCC_ClockConfig+0x10e>
 80045f4:	f7fd ffbc 	bl	8002570 <HAL_GetTick>
 80045f8:	4602      	mov	r2, r0
 80045fa:	68fb      	ldr	r3, [r7, #12]
 80045fc:	1ad3      	subs	r3, r2, r3
 80045fe:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004602:	4293      	cmp	r3, r2
 8004604:	d901      	bls.n	800460a <HAL_RCC_ClockConfig+0x10e>
 8004606:	2303      	movs	r3, #3
 8004608:	e04f      	b.n	80046aa <HAL_RCC_ClockConfig+0x1ae>
 800460a:	4b2b      	ldr	r3, [pc, #172]	@ (80046b8 <HAL_RCC_ClockConfig+0x1bc>)
 800460c:	689b      	ldr	r3, [r3, #8]
 800460e:	f003 020c 	and.w	r2, r3, #12
 8004612:	687b      	ldr	r3, [r7, #4]
 8004614:	685b      	ldr	r3, [r3, #4]
 8004616:	009b      	lsls	r3, r3, #2
 8004618:	429a      	cmp	r2, r3
 800461a:	d1eb      	bne.n	80045f4 <HAL_RCC_ClockConfig+0xf8>
 800461c:	4b25      	ldr	r3, [pc, #148]	@ (80046b4 <HAL_RCC_ClockConfig+0x1b8>)
 800461e:	681b      	ldr	r3, [r3, #0]
 8004620:	f003 030f 	and.w	r3, r3, #15
 8004624:	683a      	ldr	r2, [r7, #0]
 8004626:	429a      	cmp	r2, r3
 8004628:	d20c      	bcs.n	8004644 <HAL_RCC_ClockConfig+0x148>
 800462a:	4b22      	ldr	r3, [pc, #136]	@ (80046b4 <HAL_RCC_ClockConfig+0x1b8>)
 800462c:	683a      	ldr	r2, [r7, #0]
 800462e:	b2d2      	uxtb	r2, r2
 8004630:	701a      	strb	r2, [r3, #0]
 8004632:	4b20      	ldr	r3, [pc, #128]	@ (80046b4 <HAL_RCC_ClockConfig+0x1b8>)
 8004634:	681b      	ldr	r3, [r3, #0]
 8004636:	f003 030f 	and.w	r3, r3, #15
 800463a:	683a      	ldr	r2, [r7, #0]
 800463c:	429a      	cmp	r2, r3
 800463e:	d001      	beq.n	8004644 <HAL_RCC_ClockConfig+0x148>
 8004640:	2301      	movs	r3, #1
 8004642:	e032      	b.n	80046aa <HAL_RCC_ClockConfig+0x1ae>
 8004644:	687b      	ldr	r3, [r7, #4]
 8004646:	681b      	ldr	r3, [r3, #0]
 8004648:	f003 0304 	and.w	r3, r3, #4
 800464c:	2b00      	cmp	r3, #0
 800464e:	d008      	beq.n	8004662 <HAL_RCC_ClockConfig+0x166>
 8004650:	4b19      	ldr	r3, [pc, #100]	@ (80046b8 <HAL_RCC_ClockConfig+0x1bc>)
 8004652:	689b      	ldr	r3, [r3, #8]
 8004654:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8004658:	687b      	ldr	r3, [r7, #4]
 800465a:	68db      	ldr	r3, [r3, #12]
 800465c:	4916      	ldr	r1, [pc, #88]	@ (80046b8 <HAL_RCC_ClockConfig+0x1bc>)
 800465e:	4313      	orrs	r3, r2
 8004660:	608b      	str	r3, [r1, #8]
 8004662:	687b      	ldr	r3, [r7, #4]
 8004664:	681b      	ldr	r3, [r3, #0]
 8004666:	f003 0308 	and.w	r3, r3, #8
 800466a:	2b00      	cmp	r3, #0
 800466c:	d009      	beq.n	8004682 <HAL_RCC_ClockConfig+0x186>
 800466e:	4b12      	ldr	r3, [pc, #72]	@ (80046b8 <HAL_RCC_ClockConfig+0x1bc>)
 8004670:	689b      	ldr	r3, [r3, #8]
 8004672:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8004676:	687b      	ldr	r3, [r7, #4]
 8004678:	691b      	ldr	r3, [r3, #16]
 800467a:	00db      	lsls	r3, r3, #3
 800467c:	490e      	ldr	r1, [pc, #56]	@ (80046b8 <HAL_RCC_ClockConfig+0x1bc>)
 800467e:	4313      	orrs	r3, r2
 8004680:	608b      	str	r3, [r1, #8]
 8004682:	f000 f855 	bl	8004730 <HAL_RCC_GetSysClockFreq>
 8004686:	4602      	mov	r2, r0
 8004688:	4b0b      	ldr	r3, [pc, #44]	@ (80046b8 <HAL_RCC_ClockConfig+0x1bc>)
 800468a:	689b      	ldr	r3, [r3, #8]
 800468c:	091b      	lsrs	r3, r3, #4
 800468e:	f003 030f 	and.w	r3, r3, #15
 8004692:	490a      	ldr	r1, [pc, #40]	@ (80046bc <HAL_RCC_ClockConfig+0x1c0>)
 8004694:	5ccb      	ldrb	r3, [r1, r3]
 8004696:	fa22 f303 	lsr.w	r3, r2, r3
 800469a:	4a09      	ldr	r2, [pc, #36]	@ (80046c0 <HAL_RCC_ClockConfig+0x1c4>)
 800469c:	6013      	str	r3, [r2, #0]
 800469e:	4b09      	ldr	r3, [pc, #36]	@ (80046c4 <HAL_RCC_ClockConfig+0x1c8>)
 80046a0:	681b      	ldr	r3, [r3, #0]
 80046a2:	4618      	mov	r0, r3
 80046a4:	f7fd ff20 	bl	80024e8 <HAL_InitTick>
 80046a8:	2300      	movs	r3, #0
 80046aa:	4618      	mov	r0, r3
 80046ac:	3710      	adds	r7, #16
 80046ae:	46bd      	mov	sp, r7
 80046b0:	bd80      	pop	{r7, pc}
 80046b2:	bf00      	nop
 80046b4:	40023c00 	.word	0x40023c00
 80046b8:	40023800 	.word	0x40023800
 80046bc:	08008700 	.word	0x08008700
 80046c0:	20000000 	.word	0x20000000
 80046c4:	20000004 	.word	0x20000004

080046c8 <HAL_RCC_GetHCLKFreq>:
 80046c8:	b480      	push	{r7}
 80046ca:	af00      	add	r7, sp, #0
 80046cc:	4b03      	ldr	r3, [pc, #12]	@ (80046dc <HAL_RCC_GetHCLKFreq+0x14>)
 80046ce:	681b      	ldr	r3, [r3, #0]
 80046d0:	4618      	mov	r0, r3
 80046d2:	46bd      	mov	sp, r7
 80046d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80046d8:	4770      	bx	lr
 80046da:	bf00      	nop
 80046dc:	20000000 	.word	0x20000000

080046e0 <HAL_RCC_GetPCLK1Freq>:
 80046e0:	b580      	push	{r7, lr}
 80046e2:	af00      	add	r7, sp, #0
 80046e4:	f7ff fff0 	bl	80046c8 <HAL_RCC_GetHCLKFreq>
 80046e8:	4602      	mov	r2, r0
 80046ea:	4b05      	ldr	r3, [pc, #20]	@ (8004700 <HAL_RCC_GetPCLK1Freq+0x20>)
 80046ec:	689b      	ldr	r3, [r3, #8]
 80046ee:	0a9b      	lsrs	r3, r3, #10
 80046f0:	f003 0307 	and.w	r3, r3, #7
 80046f4:	4903      	ldr	r1, [pc, #12]	@ (8004704 <HAL_RCC_GetPCLK1Freq+0x24>)
 80046f6:	5ccb      	ldrb	r3, [r1, r3]
 80046f8:	fa22 f303 	lsr.w	r3, r2, r3
 80046fc:	4618      	mov	r0, r3
 80046fe:	bd80      	pop	{r7, pc}
 8004700:	40023800 	.word	0x40023800
 8004704:	08008710 	.word	0x08008710

08004708 <HAL_RCC_GetPCLK2Freq>:
 8004708:	b580      	push	{r7, lr}
 800470a:	af00      	add	r7, sp, #0
 800470c:	f7ff ffdc 	bl	80046c8 <HAL_RCC_GetHCLKFreq>
 8004710:	4602      	mov	r2, r0
 8004712:	4b05      	ldr	r3, [pc, #20]	@ (8004728 <HAL_RCC_GetPCLK2Freq+0x20>)
 8004714:	689b      	ldr	r3, [r3, #8]
 8004716:	0b5b      	lsrs	r3, r3, #13
 8004718:	f003 0307 	and.w	r3, r3, #7
 800471c:	4903      	ldr	r1, [pc, #12]	@ (800472c <HAL_RCC_GetPCLK2Freq+0x24>)
 800471e:	5ccb      	ldrb	r3, [r1, r3]
 8004720:	fa22 f303 	lsr.w	r3, r2, r3
 8004724:	4618      	mov	r0, r3
 8004726:	bd80      	pop	{r7, pc}
 8004728:	40023800 	.word	0x40023800
 800472c:	08008710 	.word	0x08008710

08004730 <HAL_RCC_GetSysClockFreq>:
 8004730:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8004734:	b0ae      	sub	sp, #184	@ 0xb8
 8004736:	af00      	add	r7, sp, #0
 8004738:	2300      	movs	r3, #0
 800473a:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 800473e:	2300      	movs	r3, #0
 8004740:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8004744:	2300      	movs	r3, #0
 8004746:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 800474a:	2300      	movs	r3, #0
 800474c:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8004750:	2300      	movs	r3, #0
 8004752:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8004756:	4bcb      	ldr	r3, [pc, #812]	@ (8004a84 <HAL_RCC_GetSysClockFreq+0x354>)
 8004758:	689b      	ldr	r3, [r3, #8]
 800475a:	f003 030c 	and.w	r3, r3, #12
 800475e:	2b0c      	cmp	r3, #12
 8004760:	f200 8206 	bhi.w	8004b70 <HAL_RCC_GetSysClockFreq+0x440>
 8004764:	a201      	add	r2, pc, #4	@ (adr r2, 800476c <HAL_RCC_GetSysClockFreq+0x3c>)
 8004766:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800476a:	bf00      	nop
 800476c:	080047a1 	.word	0x080047a1
 8004770:	08004b71 	.word	0x08004b71
 8004774:	08004b71 	.word	0x08004b71
 8004778:	08004b71 	.word	0x08004b71
 800477c:	080047a9 	.word	0x080047a9
 8004780:	08004b71 	.word	0x08004b71
 8004784:	08004b71 	.word	0x08004b71
 8004788:	08004b71 	.word	0x08004b71
 800478c:	080047b1 	.word	0x080047b1
 8004790:	08004b71 	.word	0x08004b71
 8004794:	08004b71 	.word	0x08004b71
 8004798:	08004b71 	.word	0x08004b71
 800479c:	080049a1 	.word	0x080049a1
 80047a0:	4bb9      	ldr	r3, [pc, #740]	@ (8004a88 <HAL_RCC_GetSysClockFreq+0x358>)
 80047a2:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80047a6:	e1e7      	b.n	8004b78 <HAL_RCC_GetSysClockFreq+0x448>
 80047a8:	4bb8      	ldr	r3, [pc, #736]	@ (8004a8c <HAL_RCC_GetSysClockFreq+0x35c>)
 80047aa:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 80047ae:	e1e3      	b.n	8004b78 <HAL_RCC_GetSysClockFreq+0x448>
 80047b0:	4bb4      	ldr	r3, [pc, #720]	@ (8004a84 <HAL_RCC_GetSysClockFreq+0x354>)
 80047b2:	685b      	ldr	r3, [r3, #4]
 80047b4:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80047b8:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 80047bc:	4bb1      	ldr	r3, [pc, #708]	@ (8004a84 <HAL_RCC_GetSysClockFreq+0x354>)
 80047be:	685b      	ldr	r3, [r3, #4]
 80047c0:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80047c4:	2b00      	cmp	r3, #0
 80047c6:	d071      	beq.n	80048ac <HAL_RCC_GetSysClockFreq+0x17c>
 80047c8:	4bae      	ldr	r3, [pc, #696]	@ (8004a84 <HAL_RCC_GetSysClockFreq+0x354>)
 80047ca:	685b      	ldr	r3, [r3, #4]
 80047cc:	099b      	lsrs	r3, r3, #6
 80047ce:	2200      	movs	r2, #0
 80047d0:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 80047d4:	f8c7 209c 	str.w	r2, [r7, #156]	@ 0x9c
 80047d8:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 80047dc:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80047e0:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80047e4:	2300      	movs	r3, #0
 80047e6:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 80047ea:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 80047ee:	4622      	mov	r2, r4
 80047f0:	462b      	mov	r3, r5
 80047f2:	f04f 0000 	mov.w	r0, #0
 80047f6:	f04f 0100 	mov.w	r1, #0
 80047fa:	0159      	lsls	r1, r3, #5
 80047fc:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8004800:	0150      	lsls	r0, r2, #5
 8004802:	4602      	mov	r2, r0
 8004804:	460b      	mov	r3, r1
 8004806:	4621      	mov	r1, r4
 8004808:	1a51      	subs	r1, r2, r1
 800480a:	6439      	str	r1, [r7, #64]	@ 0x40
 800480c:	4629      	mov	r1, r5
 800480e:	eb63 0301 	sbc.w	r3, r3, r1
 8004812:	647b      	str	r3, [r7, #68]	@ 0x44
 8004814:	f04f 0200 	mov.w	r2, #0
 8004818:	f04f 0300 	mov.w	r3, #0
 800481c:	e9d7 8910 	ldrd	r8, r9, [r7, #64]	@ 0x40
 8004820:	4649      	mov	r1, r9
 8004822:	018b      	lsls	r3, r1, #6
 8004824:	4641      	mov	r1, r8
 8004826:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 800482a:	4641      	mov	r1, r8
 800482c:	018a      	lsls	r2, r1, #6
 800482e:	4641      	mov	r1, r8
 8004830:	1a51      	subs	r1, r2, r1
 8004832:	63b9      	str	r1, [r7, #56]	@ 0x38
 8004834:	4649      	mov	r1, r9
 8004836:	eb63 0301 	sbc.w	r3, r3, r1
 800483a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800483c:	f04f 0200 	mov.w	r2, #0
 8004840:	f04f 0300 	mov.w	r3, #0
 8004844:	e9d7 890e 	ldrd	r8, r9, [r7, #56]	@ 0x38
 8004848:	4649      	mov	r1, r9
 800484a:	00cb      	lsls	r3, r1, #3
 800484c:	4641      	mov	r1, r8
 800484e:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8004852:	4641      	mov	r1, r8
 8004854:	00ca      	lsls	r2, r1, #3
 8004856:	4610      	mov	r0, r2
 8004858:	4619      	mov	r1, r3
 800485a:	4603      	mov	r3, r0
 800485c:	4622      	mov	r2, r4
 800485e:	189b      	adds	r3, r3, r2
 8004860:	633b      	str	r3, [r7, #48]	@ 0x30
 8004862:	462b      	mov	r3, r5
 8004864:	460a      	mov	r2, r1
 8004866:	eb42 0303 	adc.w	r3, r2, r3
 800486a:	637b      	str	r3, [r7, #52]	@ 0x34
 800486c:	f04f 0200 	mov.w	r2, #0
 8004870:	f04f 0300 	mov.w	r3, #0
 8004874:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	@ 0x30
 8004878:	4629      	mov	r1, r5
 800487a:	024b      	lsls	r3, r1, #9
 800487c:	4621      	mov	r1, r4
 800487e:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8004882:	4621      	mov	r1, r4
 8004884:	024a      	lsls	r2, r1, #9
 8004886:	4610      	mov	r0, r2
 8004888:	4619      	mov	r1, r3
 800488a:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800488e:	2200      	movs	r2, #0
 8004890:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8004894:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8004898:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	@ 0x88
 800489c:	f7fc f9f4 	bl	8000c88 <__aeabi_uldivmod>
 80048a0:	4602      	mov	r2, r0
 80048a2:	460b      	mov	r3, r1
 80048a4:	4613      	mov	r3, r2
 80048a6:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 80048aa:	e067      	b.n	800497c <HAL_RCC_GetSysClockFreq+0x24c>
 80048ac:	4b75      	ldr	r3, [pc, #468]	@ (8004a84 <HAL_RCC_GetSysClockFreq+0x354>)
 80048ae:	685b      	ldr	r3, [r3, #4]
 80048b0:	099b      	lsrs	r3, r3, #6
 80048b2:	2200      	movs	r2, #0
 80048b4:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 80048b8:	f8c7 2084 	str.w	r2, [r7, #132]	@ 0x84
 80048bc:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 80048c0:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80048c4:	67bb      	str	r3, [r7, #120]	@ 0x78
 80048c6:	2300      	movs	r3, #0
 80048c8:	67fb      	str	r3, [r7, #124]	@ 0x7c
 80048ca:	e9d7 451e 	ldrd	r4, r5, [r7, #120]	@ 0x78
 80048ce:	4622      	mov	r2, r4
 80048d0:	462b      	mov	r3, r5
 80048d2:	f04f 0000 	mov.w	r0, #0
 80048d6:	f04f 0100 	mov.w	r1, #0
 80048da:	0159      	lsls	r1, r3, #5
 80048dc:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80048e0:	0150      	lsls	r0, r2, #5
 80048e2:	4602      	mov	r2, r0
 80048e4:	460b      	mov	r3, r1
 80048e6:	4621      	mov	r1, r4
 80048e8:	1a51      	subs	r1, r2, r1
 80048ea:	62b9      	str	r1, [r7, #40]	@ 0x28
 80048ec:	4629      	mov	r1, r5
 80048ee:	eb63 0301 	sbc.w	r3, r3, r1
 80048f2:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80048f4:	f04f 0200 	mov.w	r2, #0
 80048f8:	f04f 0300 	mov.w	r3, #0
 80048fc:	e9d7 890a 	ldrd	r8, r9, [r7, #40]	@ 0x28
 8004900:	4649      	mov	r1, r9
 8004902:	018b      	lsls	r3, r1, #6
 8004904:	4641      	mov	r1, r8
 8004906:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 800490a:	4641      	mov	r1, r8
 800490c:	018a      	lsls	r2, r1, #6
 800490e:	4641      	mov	r1, r8
 8004910:	ebb2 0a01 	subs.w	sl, r2, r1
 8004914:	4649      	mov	r1, r9
 8004916:	eb63 0b01 	sbc.w	fp, r3, r1
 800491a:	f04f 0200 	mov.w	r2, #0
 800491e:	f04f 0300 	mov.w	r3, #0
 8004922:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8004926:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 800492a:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800492e:	4692      	mov	sl, r2
 8004930:	469b      	mov	fp, r3
 8004932:	4623      	mov	r3, r4
 8004934:	eb1a 0303 	adds.w	r3, sl, r3
 8004938:	623b      	str	r3, [r7, #32]
 800493a:	462b      	mov	r3, r5
 800493c:	eb4b 0303 	adc.w	r3, fp, r3
 8004940:	627b      	str	r3, [r7, #36]	@ 0x24
 8004942:	f04f 0200 	mov.w	r2, #0
 8004946:	f04f 0300 	mov.w	r3, #0
 800494a:	e9d7 4508 	ldrd	r4, r5, [r7, #32]
 800494e:	4629      	mov	r1, r5
 8004950:	028b      	lsls	r3, r1, #10
 8004952:	4621      	mov	r1, r4
 8004954:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8004958:	4621      	mov	r1, r4
 800495a:	028a      	lsls	r2, r1, #10
 800495c:	4610      	mov	r0, r2
 800495e:	4619      	mov	r1, r3
 8004960:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8004964:	2200      	movs	r2, #0
 8004966:	673b      	str	r3, [r7, #112]	@ 0x70
 8004968:	677a      	str	r2, [r7, #116]	@ 0x74
 800496a:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	@ 0x70
 800496e:	f7fc f98b 	bl	8000c88 <__aeabi_uldivmod>
 8004972:	4602      	mov	r2, r0
 8004974:	460b      	mov	r3, r1
 8004976:	4613      	mov	r3, r2
 8004978:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 800497c:	4b41      	ldr	r3, [pc, #260]	@ (8004a84 <HAL_RCC_GetSysClockFreq+0x354>)
 800497e:	685b      	ldr	r3, [r3, #4]
 8004980:	0c1b      	lsrs	r3, r3, #16
 8004982:	f003 0303 	and.w	r3, r3, #3
 8004986:	3301      	adds	r3, #1
 8004988:	005b      	lsls	r3, r3, #1
 800498a:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 800498e:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8004992:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 8004996:	fbb2 f3f3 	udiv	r3, r2, r3
 800499a:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 800499e:	e0eb      	b.n	8004b78 <HAL_RCC_GetSysClockFreq+0x448>
 80049a0:	4b38      	ldr	r3, [pc, #224]	@ (8004a84 <HAL_RCC_GetSysClockFreq+0x354>)
 80049a2:	685b      	ldr	r3, [r3, #4]
 80049a4:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80049a8:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 80049ac:	4b35      	ldr	r3, [pc, #212]	@ (8004a84 <HAL_RCC_GetSysClockFreq+0x354>)
 80049ae:	685b      	ldr	r3, [r3, #4]
 80049b0:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80049b4:	2b00      	cmp	r3, #0
 80049b6:	d06b      	beq.n	8004a90 <HAL_RCC_GetSysClockFreq+0x360>
 80049b8:	4b32      	ldr	r3, [pc, #200]	@ (8004a84 <HAL_RCC_GetSysClockFreq+0x354>)
 80049ba:	685b      	ldr	r3, [r3, #4]
 80049bc:	099b      	lsrs	r3, r3, #6
 80049be:	2200      	movs	r2, #0
 80049c0:	66bb      	str	r3, [r7, #104]	@ 0x68
 80049c2:	66fa      	str	r2, [r7, #108]	@ 0x6c
 80049c4:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 80049c6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80049ca:	663b      	str	r3, [r7, #96]	@ 0x60
 80049cc:	2300      	movs	r3, #0
 80049ce:	667b      	str	r3, [r7, #100]	@ 0x64
 80049d0:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	@ 0x60
 80049d4:	4622      	mov	r2, r4
 80049d6:	462b      	mov	r3, r5
 80049d8:	f04f 0000 	mov.w	r0, #0
 80049dc:	f04f 0100 	mov.w	r1, #0
 80049e0:	0159      	lsls	r1, r3, #5
 80049e2:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80049e6:	0150      	lsls	r0, r2, #5
 80049e8:	4602      	mov	r2, r0
 80049ea:	460b      	mov	r3, r1
 80049ec:	4621      	mov	r1, r4
 80049ee:	1a51      	subs	r1, r2, r1
 80049f0:	61b9      	str	r1, [r7, #24]
 80049f2:	4629      	mov	r1, r5
 80049f4:	eb63 0301 	sbc.w	r3, r3, r1
 80049f8:	61fb      	str	r3, [r7, #28]
 80049fa:	f04f 0200 	mov.w	r2, #0
 80049fe:	f04f 0300 	mov.w	r3, #0
 8004a02:	e9d7 ab06 	ldrd	sl, fp, [r7, #24]
 8004a06:	4659      	mov	r1, fp
 8004a08:	018b      	lsls	r3, r1, #6
 8004a0a:	4651      	mov	r1, sl
 8004a0c:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8004a10:	4651      	mov	r1, sl
 8004a12:	018a      	lsls	r2, r1, #6
 8004a14:	4651      	mov	r1, sl
 8004a16:	ebb2 0801 	subs.w	r8, r2, r1
 8004a1a:	4659      	mov	r1, fp
 8004a1c:	eb63 0901 	sbc.w	r9, r3, r1
 8004a20:	f04f 0200 	mov.w	r2, #0
 8004a24:	f04f 0300 	mov.w	r3, #0
 8004a28:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8004a2c:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8004a30:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8004a34:	4690      	mov	r8, r2
 8004a36:	4699      	mov	r9, r3
 8004a38:	4623      	mov	r3, r4
 8004a3a:	eb18 0303 	adds.w	r3, r8, r3
 8004a3e:	613b      	str	r3, [r7, #16]
 8004a40:	462b      	mov	r3, r5
 8004a42:	eb49 0303 	adc.w	r3, r9, r3
 8004a46:	617b      	str	r3, [r7, #20]
 8004a48:	f04f 0200 	mov.w	r2, #0
 8004a4c:	f04f 0300 	mov.w	r3, #0
 8004a50:	e9d7 4504 	ldrd	r4, r5, [r7, #16]
 8004a54:	4629      	mov	r1, r5
 8004a56:	024b      	lsls	r3, r1, #9
 8004a58:	4621      	mov	r1, r4
 8004a5a:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8004a5e:	4621      	mov	r1, r4
 8004a60:	024a      	lsls	r2, r1, #9
 8004a62:	4610      	mov	r0, r2
 8004a64:	4619      	mov	r1, r3
 8004a66:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8004a6a:	2200      	movs	r2, #0
 8004a6c:	65bb      	str	r3, [r7, #88]	@ 0x58
 8004a6e:	65fa      	str	r2, [r7, #92]	@ 0x5c
 8004a70:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8004a74:	f7fc f908 	bl	8000c88 <__aeabi_uldivmod>
 8004a78:	4602      	mov	r2, r0
 8004a7a:	460b      	mov	r3, r1
 8004a7c:	4613      	mov	r3, r2
 8004a7e:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8004a82:	e065      	b.n	8004b50 <HAL_RCC_GetSysClockFreq+0x420>
 8004a84:	40023800 	.word	0x40023800
 8004a88:	00f42400 	.word	0x00f42400
 8004a8c:	007a1200 	.word	0x007a1200
 8004a90:	4b3d      	ldr	r3, [pc, #244]	@ (8004b88 <HAL_RCC_GetSysClockFreq+0x458>)
 8004a92:	685b      	ldr	r3, [r3, #4]
 8004a94:	099b      	lsrs	r3, r3, #6
 8004a96:	2200      	movs	r2, #0
 8004a98:	4618      	mov	r0, r3
 8004a9a:	4611      	mov	r1, r2
 8004a9c:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8004aa0:	653b      	str	r3, [r7, #80]	@ 0x50
 8004aa2:	2300      	movs	r3, #0
 8004aa4:	657b      	str	r3, [r7, #84]	@ 0x54
 8004aa6:	e9d7 8914 	ldrd	r8, r9, [r7, #80]	@ 0x50
 8004aaa:	4642      	mov	r2, r8
 8004aac:	464b      	mov	r3, r9
 8004aae:	f04f 0000 	mov.w	r0, #0
 8004ab2:	f04f 0100 	mov.w	r1, #0
 8004ab6:	0159      	lsls	r1, r3, #5
 8004ab8:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8004abc:	0150      	lsls	r0, r2, #5
 8004abe:	4602      	mov	r2, r0
 8004ac0:	460b      	mov	r3, r1
 8004ac2:	4641      	mov	r1, r8
 8004ac4:	1a51      	subs	r1, r2, r1
 8004ac6:	60b9      	str	r1, [r7, #8]
 8004ac8:	4649      	mov	r1, r9
 8004aca:	eb63 0301 	sbc.w	r3, r3, r1
 8004ace:	60fb      	str	r3, [r7, #12]
 8004ad0:	f04f 0200 	mov.w	r2, #0
 8004ad4:	f04f 0300 	mov.w	r3, #0
 8004ad8:	e9d7 ab02 	ldrd	sl, fp, [r7, #8]
 8004adc:	4659      	mov	r1, fp
 8004ade:	018b      	lsls	r3, r1, #6
 8004ae0:	4651      	mov	r1, sl
 8004ae2:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8004ae6:	4651      	mov	r1, sl
 8004ae8:	018a      	lsls	r2, r1, #6
 8004aea:	4651      	mov	r1, sl
 8004aec:	1a54      	subs	r4, r2, r1
 8004aee:	4659      	mov	r1, fp
 8004af0:	eb63 0501 	sbc.w	r5, r3, r1
 8004af4:	f04f 0200 	mov.w	r2, #0
 8004af8:	f04f 0300 	mov.w	r3, #0
 8004afc:	00eb      	lsls	r3, r5, #3
 8004afe:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8004b02:	00e2      	lsls	r2, r4, #3
 8004b04:	4614      	mov	r4, r2
 8004b06:	461d      	mov	r5, r3
 8004b08:	4643      	mov	r3, r8
 8004b0a:	18e3      	adds	r3, r4, r3
 8004b0c:	603b      	str	r3, [r7, #0]
 8004b0e:	464b      	mov	r3, r9
 8004b10:	eb45 0303 	adc.w	r3, r5, r3
 8004b14:	607b      	str	r3, [r7, #4]
 8004b16:	f04f 0200 	mov.w	r2, #0
 8004b1a:	f04f 0300 	mov.w	r3, #0
 8004b1e:	e9d7 4500 	ldrd	r4, r5, [r7]
 8004b22:	4629      	mov	r1, r5
 8004b24:	028b      	lsls	r3, r1, #10
 8004b26:	4621      	mov	r1, r4
 8004b28:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8004b2c:	4621      	mov	r1, r4
 8004b2e:	028a      	lsls	r2, r1, #10
 8004b30:	4610      	mov	r0, r2
 8004b32:	4619      	mov	r1, r3
 8004b34:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8004b38:	2200      	movs	r2, #0
 8004b3a:	64bb      	str	r3, [r7, #72]	@ 0x48
 8004b3c:	64fa      	str	r2, [r7, #76]	@ 0x4c
 8004b3e:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8004b42:	f7fc f8a1 	bl	8000c88 <__aeabi_uldivmod>
 8004b46:	4602      	mov	r2, r0
 8004b48:	460b      	mov	r3, r1
 8004b4a:	4613      	mov	r3, r2
 8004b4c:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8004b50:	4b0d      	ldr	r3, [pc, #52]	@ (8004b88 <HAL_RCC_GetSysClockFreq+0x458>)
 8004b52:	685b      	ldr	r3, [r3, #4]
 8004b54:	0f1b      	lsrs	r3, r3, #28
 8004b56:	f003 0307 	and.w	r3, r3, #7
 8004b5a:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 8004b5e:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8004b62:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8004b66:	fbb2 f3f3 	udiv	r3, r2, r3
 8004b6a:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8004b6e:	e003      	b.n	8004b78 <HAL_RCC_GetSysClockFreq+0x448>
 8004b70:	4b06      	ldr	r3, [pc, #24]	@ (8004b8c <HAL_RCC_GetSysClockFreq+0x45c>)
 8004b72:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8004b76:	bf00      	nop
 8004b78:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 8004b7c:	4618      	mov	r0, r3
 8004b7e:	37b8      	adds	r7, #184	@ 0xb8
 8004b80:	46bd      	mov	sp, r7
 8004b82:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8004b86:	bf00      	nop
 8004b88:	40023800 	.word	0x40023800
 8004b8c:	00f42400 	.word	0x00f42400

08004b90 <HAL_RCC_OscConfig>:
 8004b90:	b580      	push	{r7, lr}
 8004b92:	b086      	sub	sp, #24
 8004b94:	af00      	add	r7, sp, #0
 8004b96:	6078      	str	r0, [r7, #4]
 8004b98:	687b      	ldr	r3, [r7, #4]
 8004b9a:	2b00      	cmp	r3, #0
 8004b9c:	d101      	bne.n	8004ba2 <HAL_RCC_OscConfig+0x12>
 8004b9e:	2301      	movs	r3, #1
 8004ba0:	e28d      	b.n	80050be <HAL_RCC_OscConfig+0x52e>
 8004ba2:	687b      	ldr	r3, [r7, #4]
 8004ba4:	681b      	ldr	r3, [r3, #0]
 8004ba6:	f003 0301 	and.w	r3, r3, #1
 8004baa:	2b00      	cmp	r3, #0
 8004bac:	f000 8083 	beq.w	8004cb6 <HAL_RCC_OscConfig+0x126>
 8004bb0:	4b94      	ldr	r3, [pc, #592]	@ (8004e04 <HAL_RCC_OscConfig+0x274>)
 8004bb2:	689b      	ldr	r3, [r3, #8]
 8004bb4:	f003 030c 	and.w	r3, r3, #12
 8004bb8:	2b04      	cmp	r3, #4
 8004bba:	d019      	beq.n	8004bf0 <HAL_RCC_OscConfig+0x60>
 8004bbc:	4b91      	ldr	r3, [pc, #580]	@ (8004e04 <HAL_RCC_OscConfig+0x274>)
 8004bbe:	689b      	ldr	r3, [r3, #8]
 8004bc0:	f003 030c 	and.w	r3, r3, #12
 8004bc4:	2b08      	cmp	r3, #8
 8004bc6:	d106      	bne.n	8004bd6 <HAL_RCC_OscConfig+0x46>
 8004bc8:	4b8e      	ldr	r3, [pc, #568]	@ (8004e04 <HAL_RCC_OscConfig+0x274>)
 8004bca:	685b      	ldr	r3, [r3, #4]
 8004bcc:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004bd0:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8004bd4:	d00c      	beq.n	8004bf0 <HAL_RCC_OscConfig+0x60>
 8004bd6:	4b8b      	ldr	r3, [pc, #556]	@ (8004e04 <HAL_RCC_OscConfig+0x274>)
 8004bd8:	689b      	ldr	r3, [r3, #8]
 8004bda:	f003 030c 	and.w	r3, r3, #12
 8004bde:	2b0c      	cmp	r3, #12
 8004be0:	d112      	bne.n	8004c08 <HAL_RCC_OscConfig+0x78>
 8004be2:	4b88      	ldr	r3, [pc, #544]	@ (8004e04 <HAL_RCC_OscConfig+0x274>)
 8004be4:	685b      	ldr	r3, [r3, #4]
 8004be6:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004bea:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8004bee:	d10b      	bne.n	8004c08 <HAL_RCC_OscConfig+0x78>
 8004bf0:	4b84      	ldr	r3, [pc, #528]	@ (8004e04 <HAL_RCC_OscConfig+0x274>)
 8004bf2:	681b      	ldr	r3, [r3, #0]
 8004bf4:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004bf8:	2b00      	cmp	r3, #0
 8004bfa:	d05b      	beq.n	8004cb4 <HAL_RCC_OscConfig+0x124>
 8004bfc:	687b      	ldr	r3, [r7, #4]
 8004bfe:	685b      	ldr	r3, [r3, #4]
 8004c00:	2b00      	cmp	r3, #0
 8004c02:	d157      	bne.n	8004cb4 <HAL_RCC_OscConfig+0x124>
 8004c04:	2301      	movs	r3, #1
 8004c06:	e25a      	b.n	80050be <HAL_RCC_OscConfig+0x52e>
 8004c08:	687b      	ldr	r3, [r7, #4]
 8004c0a:	685b      	ldr	r3, [r3, #4]
 8004c0c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8004c10:	d106      	bne.n	8004c20 <HAL_RCC_OscConfig+0x90>
 8004c12:	4b7c      	ldr	r3, [pc, #496]	@ (8004e04 <HAL_RCC_OscConfig+0x274>)
 8004c14:	681b      	ldr	r3, [r3, #0]
 8004c16:	4a7b      	ldr	r2, [pc, #492]	@ (8004e04 <HAL_RCC_OscConfig+0x274>)
 8004c18:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004c1c:	6013      	str	r3, [r2, #0]
 8004c1e:	e01d      	b.n	8004c5c <HAL_RCC_OscConfig+0xcc>
 8004c20:	687b      	ldr	r3, [r7, #4]
 8004c22:	685b      	ldr	r3, [r3, #4]
 8004c24:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8004c28:	d10c      	bne.n	8004c44 <HAL_RCC_OscConfig+0xb4>
 8004c2a:	4b76      	ldr	r3, [pc, #472]	@ (8004e04 <HAL_RCC_OscConfig+0x274>)
 8004c2c:	681b      	ldr	r3, [r3, #0]
 8004c2e:	4a75      	ldr	r2, [pc, #468]	@ (8004e04 <HAL_RCC_OscConfig+0x274>)
 8004c30:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8004c34:	6013      	str	r3, [r2, #0]
 8004c36:	4b73      	ldr	r3, [pc, #460]	@ (8004e04 <HAL_RCC_OscConfig+0x274>)
 8004c38:	681b      	ldr	r3, [r3, #0]
 8004c3a:	4a72      	ldr	r2, [pc, #456]	@ (8004e04 <HAL_RCC_OscConfig+0x274>)
 8004c3c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004c40:	6013      	str	r3, [r2, #0]
 8004c42:	e00b      	b.n	8004c5c <HAL_RCC_OscConfig+0xcc>
 8004c44:	4b6f      	ldr	r3, [pc, #444]	@ (8004e04 <HAL_RCC_OscConfig+0x274>)
 8004c46:	681b      	ldr	r3, [r3, #0]
 8004c48:	4a6e      	ldr	r2, [pc, #440]	@ (8004e04 <HAL_RCC_OscConfig+0x274>)
 8004c4a:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8004c4e:	6013      	str	r3, [r2, #0]
 8004c50:	4b6c      	ldr	r3, [pc, #432]	@ (8004e04 <HAL_RCC_OscConfig+0x274>)
 8004c52:	681b      	ldr	r3, [r3, #0]
 8004c54:	4a6b      	ldr	r2, [pc, #428]	@ (8004e04 <HAL_RCC_OscConfig+0x274>)
 8004c56:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8004c5a:	6013      	str	r3, [r2, #0]
 8004c5c:	687b      	ldr	r3, [r7, #4]
 8004c5e:	685b      	ldr	r3, [r3, #4]
 8004c60:	2b00      	cmp	r3, #0
 8004c62:	d013      	beq.n	8004c8c <HAL_RCC_OscConfig+0xfc>
 8004c64:	f7fd fc84 	bl	8002570 <HAL_GetTick>
 8004c68:	6138      	str	r0, [r7, #16]
 8004c6a:	e008      	b.n	8004c7e <HAL_RCC_OscConfig+0xee>
 8004c6c:	f7fd fc80 	bl	8002570 <HAL_GetTick>
 8004c70:	4602      	mov	r2, r0
 8004c72:	693b      	ldr	r3, [r7, #16]
 8004c74:	1ad3      	subs	r3, r2, r3
 8004c76:	2b64      	cmp	r3, #100	@ 0x64
 8004c78:	d901      	bls.n	8004c7e <HAL_RCC_OscConfig+0xee>
 8004c7a:	2303      	movs	r3, #3
 8004c7c:	e21f      	b.n	80050be <HAL_RCC_OscConfig+0x52e>
 8004c7e:	4b61      	ldr	r3, [pc, #388]	@ (8004e04 <HAL_RCC_OscConfig+0x274>)
 8004c80:	681b      	ldr	r3, [r3, #0]
 8004c82:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004c86:	2b00      	cmp	r3, #0
 8004c88:	d0f0      	beq.n	8004c6c <HAL_RCC_OscConfig+0xdc>
 8004c8a:	e014      	b.n	8004cb6 <HAL_RCC_OscConfig+0x126>
 8004c8c:	f7fd fc70 	bl	8002570 <HAL_GetTick>
 8004c90:	6138      	str	r0, [r7, #16]
 8004c92:	e008      	b.n	8004ca6 <HAL_RCC_OscConfig+0x116>
 8004c94:	f7fd fc6c 	bl	8002570 <HAL_GetTick>
 8004c98:	4602      	mov	r2, r0
 8004c9a:	693b      	ldr	r3, [r7, #16]
 8004c9c:	1ad3      	subs	r3, r2, r3
 8004c9e:	2b64      	cmp	r3, #100	@ 0x64
 8004ca0:	d901      	bls.n	8004ca6 <HAL_RCC_OscConfig+0x116>
 8004ca2:	2303      	movs	r3, #3
 8004ca4:	e20b      	b.n	80050be <HAL_RCC_OscConfig+0x52e>
 8004ca6:	4b57      	ldr	r3, [pc, #348]	@ (8004e04 <HAL_RCC_OscConfig+0x274>)
 8004ca8:	681b      	ldr	r3, [r3, #0]
 8004caa:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004cae:	2b00      	cmp	r3, #0
 8004cb0:	d1f0      	bne.n	8004c94 <HAL_RCC_OscConfig+0x104>
 8004cb2:	e000      	b.n	8004cb6 <HAL_RCC_OscConfig+0x126>
 8004cb4:	bf00      	nop
 8004cb6:	687b      	ldr	r3, [r7, #4]
 8004cb8:	681b      	ldr	r3, [r3, #0]
 8004cba:	f003 0302 	and.w	r3, r3, #2
 8004cbe:	2b00      	cmp	r3, #0
 8004cc0:	d06f      	beq.n	8004da2 <HAL_RCC_OscConfig+0x212>
 8004cc2:	4b50      	ldr	r3, [pc, #320]	@ (8004e04 <HAL_RCC_OscConfig+0x274>)
 8004cc4:	689b      	ldr	r3, [r3, #8]
 8004cc6:	f003 030c 	and.w	r3, r3, #12
 8004cca:	2b00      	cmp	r3, #0
 8004ccc:	d017      	beq.n	8004cfe <HAL_RCC_OscConfig+0x16e>
 8004cce:	4b4d      	ldr	r3, [pc, #308]	@ (8004e04 <HAL_RCC_OscConfig+0x274>)
 8004cd0:	689b      	ldr	r3, [r3, #8]
 8004cd2:	f003 030c 	and.w	r3, r3, #12
 8004cd6:	2b08      	cmp	r3, #8
 8004cd8:	d105      	bne.n	8004ce6 <HAL_RCC_OscConfig+0x156>
 8004cda:	4b4a      	ldr	r3, [pc, #296]	@ (8004e04 <HAL_RCC_OscConfig+0x274>)
 8004cdc:	685b      	ldr	r3, [r3, #4]
 8004cde:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004ce2:	2b00      	cmp	r3, #0
 8004ce4:	d00b      	beq.n	8004cfe <HAL_RCC_OscConfig+0x16e>
 8004ce6:	4b47      	ldr	r3, [pc, #284]	@ (8004e04 <HAL_RCC_OscConfig+0x274>)
 8004ce8:	689b      	ldr	r3, [r3, #8]
 8004cea:	f003 030c 	and.w	r3, r3, #12
 8004cee:	2b0c      	cmp	r3, #12
 8004cf0:	d11c      	bne.n	8004d2c <HAL_RCC_OscConfig+0x19c>
 8004cf2:	4b44      	ldr	r3, [pc, #272]	@ (8004e04 <HAL_RCC_OscConfig+0x274>)
 8004cf4:	685b      	ldr	r3, [r3, #4]
 8004cf6:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004cfa:	2b00      	cmp	r3, #0
 8004cfc:	d116      	bne.n	8004d2c <HAL_RCC_OscConfig+0x19c>
 8004cfe:	4b41      	ldr	r3, [pc, #260]	@ (8004e04 <HAL_RCC_OscConfig+0x274>)
 8004d00:	681b      	ldr	r3, [r3, #0]
 8004d02:	f003 0302 	and.w	r3, r3, #2
 8004d06:	2b00      	cmp	r3, #0
 8004d08:	d005      	beq.n	8004d16 <HAL_RCC_OscConfig+0x186>
 8004d0a:	687b      	ldr	r3, [r7, #4]
 8004d0c:	68db      	ldr	r3, [r3, #12]
 8004d0e:	2b01      	cmp	r3, #1
 8004d10:	d001      	beq.n	8004d16 <HAL_RCC_OscConfig+0x186>
 8004d12:	2301      	movs	r3, #1
 8004d14:	e1d3      	b.n	80050be <HAL_RCC_OscConfig+0x52e>
 8004d16:	4b3b      	ldr	r3, [pc, #236]	@ (8004e04 <HAL_RCC_OscConfig+0x274>)
 8004d18:	681b      	ldr	r3, [r3, #0]
 8004d1a:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8004d1e:	687b      	ldr	r3, [r7, #4]
 8004d20:	691b      	ldr	r3, [r3, #16]
 8004d22:	00db      	lsls	r3, r3, #3
 8004d24:	4937      	ldr	r1, [pc, #220]	@ (8004e04 <HAL_RCC_OscConfig+0x274>)
 8004d26:	4313      	orrs	r3, r2
 8004d28:	600b      	str	r3, [r1, #0]
 8004d2a:	e03a      	b.n	8004da2 <HAL_RCC_OscConfig+0x212>
 8004d2c:	687b      	ldr	r3, [r7, #4]
 8004d2e:	68db      	ldr	r3, [r3, #12]
 8004d30:	2b00      	cmp	r3, #0
 8004d32:	d020      	beq.n	8004d76 <HAL_RCC_OscConfig+0x1e6>
 8004d34:	4b34      	ldr	r3, [pc, #208]	@ (8004e08 <HAL_RCC_OscConfig+0x278>)
 8004d36:	2201      	movs	r2, #1
 8004d38:	601a      	str	r2, [r3, #0]
 8004d3a:	f7fd fc19 	bl	8002570 <HAL_GetTick>
 8004d3e:	6138      	str	r0, [r7, #16]
 8004d40:	e008      	b.n	8004d54 <HAL_RCC_OscConfig+0x1c4>
 8004d42:	f7fd fc15 	bl	8002570 <HAL_GetTick>
 8004d46:	4602      	mov	r2, r0
 8004d48:	693b      	ldr	r3, [r7, #16]
 8004d4a:	1ad3      	subs	r3, r2, r3
 8004d4c:	2b02      	cmp	r3, #2
 8004d4e:	d901      	bls.n	8004d54 <HAL_RCC_OscConfig+0x1c4>
 8004d50:	2303      	movs	r3, #3
 8004d52:	e1b4      	b.n	80050be <HAL_RCC_OscConfig+0x52e>
 8004d54:	4b2b      	ldr	r3, [pc, #172]	@ (8004e04 <HAL_RCC_OscConfig+0x274>)
 8004d56:	681b      	ldr	r3, [r3, #0]
 8004d58:	f003 0302 	and.w	r3, r3, #2
 8004d5c:	2b00      	cmp	r3, #0
 8004d5e:	d0f0      	beq.n	8004d42 <HAL_RCC_OscConfig+0x1b2>
 8004d60:	4b28      	ldr	r3, [pc, #160]	@ (8004e04 <HAL_RCC_OscConfig+0x274>)
 8004d62:	681b      	ldr	r3, [r3, #0]
 8004d64:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8004d68:	687b      	ldr	r3, [r7, #4]
 8004d6a:	691b      	ldr	r3, [r3, #16]
 8004d6c:	00db      	lsls	r3, r3, #3
 8004d6e:	4925      	ldr	r1, [pc, #148]	@ (8004e04 <HAL_RCC_OscConfig+0x274>)
 8004d70:	4313      	orrs	r3, r2
 8004d72:	600b      	str	r3, [r1, #0]
 8004d74:	e015      	b.n	8004da2 <HAL_RCC_OscConfig+0x212>
 8004d76:	4b24      	ldr	r3, [pc, #144]	@ (8004e08 <HAL_RCC_OscConfig+0x278>)
 8004d78:	2200      	movs	r2, #0
 8004d7a:	601a      	str	r2, [r3, #0]
 8004d7c:	f7fd fbf8 	bl	8002570 <HAL_GetTick>
 8004d80:	6138      	str	r0, [r7, #16]
 8004d82:	e008      	b.n	8004d96 <HAL_RCC_OscConfig+0x206>
 8004d84:	f7fd fbf4 	bl	8002570 <HAL_GetTick>
 8004d88:	4602      	mov	r2, r0
 8004d8a:	693b      	ldr	r3, [r7, #16]
 8004d8c:	1ad3      	subs	r3, r2, r3
 8004d8e:	2b02      	cmp	r3, #2
 8004d90:	d901      	bls.n	8004d96 <HAL_RCC_OscConfig+0x206>
 8004d92:	2303      	movs	r3, #3
 8004d94:	e193      	b.n	80050be <HAL_RCC_OscConfig+0x52e>
 8004d96:	4b1b      	ldr	r3, [pc, #108]	@ (8004e04 <HAL_RCC_OscConfig+0x274>)
 8004d98:	681b      	ldr	r3, [r3, #0]
 8004d9a:	f003 0302 	and.w	r3, r3, #2
 8004d9e:	2b00      	cmp	r3, #0
 8004da0:	d1f0      	bne.n	8004d84 <HAL_RCC_OscConfig+0x1f4>
 8004da2:	687b      	ldr	r3, [r7, #4]
 8004da4:	681b      	ldr	r3, [r3, #0]
 8004da6:	f003 0308 	and.w	r3, r3, #8
 8004daa:	2b00      	cmp	r3, #0
 8004dac:	d036      	beq.n	8004e1c <HAL_RCC_OscConfig+0x28c>
 8004dae:	687b      	ldr	r3, [r7, #4]
 8004db0:	695b      	ldr	r3, [r3, #20]
 8004db2:	2b00      	cmp	r3, #0
 8004db4:	d016      	beq.n	8004de4 <HAL_RCC_OscConfig+0x254>
 8004db6:	4b15      	ldr	r3, [pc, #84]	@ (8004e0c <HAL_RCC_OscConfig+0x27c>)
 8004db8:	2201      	movs	r2, #1
 8004dba:	601a      	str	r2, [r3, #0]
 8004dbc:	f7fd fbd8 	bl	8002570 <HAL_GetTick>
 8004dc0:	6138      	str	r0, [r7, #16]
 8004dc2:	e008      	b.n	8004dd6 <HAL_RCC_OscConfig+0x246>
 8004dc4:	f7fd fbd4 	bl	8002570 <HAL_GetTick>
 8004dc8:	4602      	mov	r2, r0
 8004dca:	693b      	ldr	r3, [r7, #16]
 8004dcc:	1ad3      	subs	r3, r2, r3
 8004dce:	2b02      	cmp	r3, #2
 8004dd0:	d901      	bls.n	8004dd6 <HAL_RCC_OscConfig+0x246>
 8004dd2:	2303      	movs	r3, #3
 8004dd4:	e173      	b.n	80050be <HAL_RCC_OscConfig+0x52e>
 8004dd6:	4b0b      	ldr	r3, [pc, #44]	@ (8004e04 <HAL_RCC_OscConfig+0x274>)
 8004dd8:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8004dda:	f003 0302 	and.w	r3, r3, #2
 8004dde:	2b00      	cmp	r3, #0
 8004de0:	d0f0      	beq.n	8004dc4 <HAL_RCC_OscConfig+0x234>
 8004de2:	e01b      	b.n	8004e1c <HAL_RCC_OscConfig+0x28c>
 8004de4:	4b09      	ldr	r3, [pc, #36]	@ (8004e0c <HAL_RCC_OscConfig+0x27c>)
 8004de6:	2200      	movs	r2, #0
 8004de8:	601a      	str	r2, [r3, #0]
 8004dea:	f7fd fbc1 	bl	8002570 <HAL_GetTick>
 8004dee:	6138      	str	r0, [r7, #16]
 8004df0:	e00e      	b.n	8004e10 <HAL_RCC_OscConfig+0x280>
 8004df2:	f7fd fbbd 	bl	8002570 <HAL_GetTick>
 8004df6:	4602      	mov	r2, r0
 8004df8:	693b      	ldr	r3, [r7, #16]
 8004dfa:	1ad3      	subs	r3, r2, r3
 8004dfc:	2b02      	cmp	r3, #2
 8004dfe:	d907      	bls.n	8004e10 <HAL_RCC_OscConfig+0x280>
 8004e00:	2303      	movs	r3, #3
 8004e02:	e15c      	b.n	80050be <HAL_RCC_OscConfig+0x52e>
 8004e04:	40023800 	.word	0x40023800
 8004e08:	42470000 	.word	0x42470000
 8004e0c:	42470e80 	.word	0x42470e80
 8004e10:	4b8a      	ldr	r3, [pc, #552]	@ (800503c <HAL_RCC_OscConfig+0x4ac>)
 8004e12:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8004e14:	f003 0302 	and.w	r3, r3, #2
 8004e18:	2b00      	cmp	r3, #0
 8004e1a:	d1ea      	bne.n	8004df2 <HAL_RCC_OscConfig+0x262>
 8004e1c:	687b      	ldr	r3, [r7, #4]
 8004e1e:	681b      	ldr	r3, [r3, #0]
 8004e20:	f003 0304 	and.w	r3, r3, #4
 8004e24:	2b00      	cmp	r3, #0
 8004e26:	f000 8097 	beq.w	8004f58 <HAL_RCC_OscConfig+0x3c8>
 8004e2a:	2300      	movs	r3, #0
 8004e2c:	75fb      	strb	r3, [r7, #23]
 8004e2e:	4b83      	ldr	r3, [pc, #524]	@ (800503c <HAL_RCC_OscConfig+0x4ac>)
 8004e30:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004e32:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004e36:	2b00      	cmp	r3, #0
 8004e38:	d10f      	bne.n	8004e5a <HAL_RCC_OscConfig+0x2ca>
 8004e3a:	2300      	movs	r3, #0
 8004e3c:	60bb      	str	r3, [r7, #8]
 8004e3e:	4b7f      	ldr	r3, [pc, #508]	@ (800503c <HAL_RCC_OscConfig+0x4ac>)
 8004e40:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004e42:	4a7e      	ldr	r2, [pc, #504]	@ (800503c <HAL_RCC_OscConfig+0x4ac>)
 8004e44:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8004e48:	6413      	str	r3, [r2, #64]	@ 0x40
 8004e4a:	4b7c      	ldr	r3, [pc, #496]	@ (800503c <HAL_RCC_OscConfig+0x4ac>)
 8004e4c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004e4e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8004e52:	60bb      	str	r3, [r7, #8]
 8004e54:	68bb      	ldr	r3, [r7, #8]
 8004e56:	2301      	movs	r3, #1
 8004e58:	75fb      	strb	r3, [r7, #23]
 8004e5a:	4b79      	ldr	r3, [pc, #484]	@ (8005040 <HAL_RCC_OscConfig+0x4b0>)
 8004e5c:	681b      	ldr	r3, [r3, #0]
 8004e5e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004e62:	2b00      	cmp	r3, #0
 8004e64:	d118      	bne.n	8004e98 <HAL_RCC_OscConfig+0x308>
 8004e66:	4b76      	ldr	r3, [pc, #472]	@ (8005040 <HAL_RCC_OscConfig+0x4b0>)
 8004e68:	681b      	ldr	r3, [r3, #0]
 8004e6a:	4a75      	ldr	r2, [pc, #468]	@ (8005040 <HAL_RCC_OscConfig+0x4b0>)
 8004e6c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8004e70:	6013      	str	r3, [r2, #0]
 8004e72:	f7fd fb7d 	bl	8002570 <HAL_GetTick>
 8004e76:	6138      	str	r0, [r7, #16]
 8004e78:	e008      	b.n	8004e8c <HAL_RCC_OscConfig+0x2fc>
 8004e7a:	f7fd fb79 	bl	8002570 <HAL_GetTick>
 8004e7e:	4602      	mov	r2, r0
 8004e80:	693b      	ldr	r3, [r7, #16]
 8004e82:	1ad3      	subs	r3, r2, r3
 8004e84:	2b02      	cmp	r3, #2
 8004e86:	d901      	bls.n	8004e8c <HAL_RCC_OscConfig+0x2fc>
 8004e88:	2303      	movs	r3, #3
 8004e8a:	e118      	b.n	80050be <HAL_RCC_OscConfig+0x52e>
 8004e8c:	4b6c      	ldr	r3, [pc, #432]	@ (8005040 <HAL_RCC_OscConfig+0x4b0>)
 8004e8e:	681b      	ldr	r3, [r3, #0]
 8004e90:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004e94:	2b00      	cmp	r3, #0
 8004e96:	d0f0      	beq.n	8004e7a <HAL_RCC_OscConfig+0x2ea>
 8004e98:	687b      	ldr	r3, [r7, #4]
 8004e9a:	689b      	ldr	r3, [r3, #8]
 8004e9c:	2b01      	cmp	r3, #1
 8004e9e:	d106      	bne.n	8004eae <HAL_RCC_OscConfig+0x31e>
 8004ea0:	4b66      	ldr	r3, [pc, #408]	@ (800503c <HAL_RCC_OscConfig+0x4ac>)
 8004ea2:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004ea4:	4a65      	ldr	r2, [pc, #404]	@ (800503c <HAL_RCC_OscConfig+0x4ac>)
 8004ea6:	f043 0301 	orr.w	r3, r3, #1
 8004eaa:	6713      	str	r3, [r2, #112]	@ 0x70
 8004eac:	e01c      	b.n	8004ee8 <HAL_RCC_OscConfig+0x358>
 8004eae:	687b      	ldr	r3, [r7, #4]
 8004eb0:	689b      	ldr	r3, [r3, #8]
 8004eb2:	2b05      	cmp	r3, #5
 8004eb4:	d10c      	bne.n	8004ed0 <HAL_RCC_OscConfig+0x340>
 8004eb6:	4b61      	ldr	r3, [pc, #388]	@ (800503c <HAL_RCC_OscConfig+0x4ac>)
 8004eb8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004eba:	4a60      	ldr	r2, [pc, #384]	@ (800503c <HAL_RCC_OscConfig+0x4ac>)
 8004ebc:	f043 0304 	orr.w	r3, r3, #4
 8004ec0:	6713      	str	r3, [r2, #112]	@ 0x70
 8004ec2:	4b5e      	ldr	r3, [pc, #376]	@ (800503c <HAL_RCC_OscConfig+0x4ac>)
 8004ec4:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004ec6:	4a5d      	ldr	r2, [pc, #372]	@ (800503c <HAL_RCC_OscConfig+0x4ac>)
 8004ec8:	f043 0301 	orr.w	r3, r3, #1
 8004ecc:	6713      	str	r3, [r2, #112]	@ 0x70
 8004ece:	e00b      	b.n	8004ee8 <HAL_RCC_OscConfig+0x358>
 8004ed0:	4b5a      	ldr	r3, [pc, #360]	@ (800503c <HAL_RCC_OscConfig+0x4ac>)
 8004ed2:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004ed4:	4a59      	ldr	r2, [pc, #356]	@ (800503c <HAL_RCC_OscConfig+0x4ac>)
 8004ed6:	f023 0301 	bic.w	r3, r3, #1
 8004eda:	6713      	str	r3, [r2, #112]	@ 0x70
 8004edc:	4b57      	ldr	r3, [pc, #348]	@ (800503c <HAL_RCC_OscConfig+0x4ac>)
 8004ede:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004ee0:	4a56      	ldr	r2, [pc, #344]	@ (800503c <HAL_RCC_OscConfig+0x4ac>)
 8004ee2:	f023 0304 	bic.w	r3, r3, #4
 8004ee6:	6713      	str	r3, [r2, #112]	@ 0x70
 8004ee8:	687b      	ldr	r3, [r7, #4]
 8004eea:	689b      	ldr	r3, [r3, #8]
 8004eec:	2b00      	cmp	r3, #0
 8004eee:	d015      	beq.n	8004f1c <HAL_RCC_OscConfig+0x38c>
 8004ef0:	f7fd fb3e 	bl	8002570 <HAL_GetTick>
 8004ef4:	6138      	str	r0, [r7, #16]
 8004ef6:	e00a      	b.n	8004f0e <HAL_RCC_OscConfig+0x37e>
 8004ef8:	f7fd fb3a 	bl	8002570 <HAL_GetTick>
 8004efc:	4602      	mov	r2, r0
 8004efe:	693b      	ldr	r3, [r7, #16]
 8004f00:	1ad3      	subs	r3, r2, r3
 8004f02:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004f06:	4293      	cmp	r3, r2
 8004f08:	d901      	bls.n	8004f0e <HAL_RCC_OscConfig+0x37e>
 8004f0a:	2303      	movs	r3, #3
 8004f0c:	e0d7      	b.n	80050be <HAL_RCC_OscConfig+0x52e>
 8004f0e:	4b4b      	ldr	r3, [pc, #300]	@ (800503c <HAL_RCC_OscConfig+0x4ac>)
 8004f10:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004f12:	f003 0302 	and.w	r3, r3, #2
 8004f16:	2b00      	cmp	r3, #0
 8004f18:	d0ee      	beq.n	8004ef8 <HAL_RCC_OscConfig+0x368>
 8004f1a:	e014      	b.n	8004f46 <HAL_RCC_OscConfig+0x3b6>
 8004f1c:	f7fd fb28 	bl	8002570 <HAL_GetTick>
 8004f20:	6138      	str	r0, [r7, #16]
 8004f22:	e00a      	b.n	8004f3a <HAL_RCC_OscConfig+0x3aa>
 8004f24:	f7fd fb24 	bl	8002570 <HAL_GetTick>
 8004f28:	4602      	mov	r2, r0
 8004f2a:	693b      	ldr	r3, [r7, #16]
 8004f2c:	1ad3      	subs	r3, r2, r3
 8004f2e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8004f32:	4293      	cmp	r3, r2
 8004f34:	d901      	bls.n	8004f3a <HAL_RCC_OscConfig+0x3aa>
 8004f36:	2303      	movs	r3, #3
 8004f38:	e0c1      	b.n	80050be <HAL_RCC_OscConfig+0x52e>
 8004f3a:	4b40      	ldr	r3, [pc, #256]	@ (800503c <HAL_RCC_OscConfig+0x4ac>)
 8004f3c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004f3e:	f003 0302 	and.w	r3, r3, #2
 8004f42:	2b00      	cmp	r3, #0
 8004f44:	d1ee      	bne.n	8004f24 <HAL_RCC_OscConfig+0x394>
 8004f46:	7dfb      	ldrb	r3, [r7, #23]
 8004f48:	2b01      	cmp	r3, #1
 8004f4a:	d105      	bne.n	8004f58 <HAL_RCC_OscConfig+0x3c8>
 8004f4c:	4b3b      	ldr	r3, [pc, #236]	@ (800503c <HAL_RCC_OscConfig+0x4ac>)
 8004f4e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004f50:	4a3a      	ldr	r2, [pc, #232]	@ (800503c <HAL_RCC_OscConfig+0x4ac>)
 8004f52:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8004f56:	6413      	str	r3, [r2, #64]	@ 0x40
 8004f58:	687b      	ldr	r3, [r7, #4]
 8004f5a:	699b      	ldr	r3, [r3, #24]
 8004f5c:	2b00      	cmp	r3, #0
 8004f5e:	f000 80ad 	beq.w	80050bc <HAL_RCC_OscConfig+0x52c>
 8004f62:	4b36      	ldr	r3, [pc, #216]	@ (800503c <HAL_RCC_OscConfig+0x4ac>)
 8004f64:	689b      	ldr	r3, [r3, #8]
 8004f66:	f003 030c 	and.w	r3, r3, #12
 8004f6a:	2b08      	cmp	r3, #8
 8004f6c:	d060      	beq.n	8005030 <HAL_RCC_OscConfig+0x4a0>
 8004f6e:	687b      	ldr	r3, [r7, #4]
 8004f70:	699b      	ldr	r3, [r3, #24]
 8004f72:	2b02      	cmp	r3, #2
 8004f74:	d145      	bne.n	8005002 <HAL_RCC_OscConfig+0x472>
 8004f76:	4b33      	ldr	r3, [pc, #204]	@ (8005044 <HAL_RCC_OscConfig+0x4b4>)
 8004f78:	2200      	movs	r2, #0
 8004f7a:	601a      	str	r2, [r3, #0]
 8004f7c:	f7fd faf8 	bl	8002570 <HAL_GetTick>
 8004f80:	6138      	str	r0, [r7, #16]
 8004f82:	e008      	b.n	8004f96 <HAL_RCC_OscConfig+0x406>
 8004f84:	f7fd faf4 	bl	8002570 <HAL_GetTick>
 8004f88:	4602      	mov	r2, r0
 8004f8a:	693b      	ldr	r3, [r7, #16]
 8004f8c:	1ad3      	subs	r3, r2, r3
 8004f8e:	2b02      	cmp	r3, #2
 8004f90:	d901      	bls.n	8004f96 <HAL_RCC_OscConfig+0x406>
 8004f92:	2303      	movs	r3, #3
 8004f94:	e093      	b.n	80050be <HAL_RCC_OscConfig+0x52e>
 8004f96:	4b29      	ldr	r3, [pc, #164]	@ (800503c <HAL_RCC_OscConfig+0x4ac>)
 8004f98:	681b      	ldr	r3, [r3, #0]
 8004f9a:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004f9e:	2b00      	cmp	r3, #0
 8004fa0:	d1f0      	bne.n	8004f84 <HAL_RCC_OscConfig+0x3f4>
 8004fa2:	687b      	ldr	r3, [r7, #4]
 8004fa4:	69da      	ldr	r2, [r3, #28]
 8004fa6:	687b      	ldr	r3, [r7, #4]
 8004fa8:	6a1b      	ldr	r3, [r3, #32]
 8004faa:	431a      	orrs	r2, r3
 8004fac:	687b      	ldr	r3, [r7, #4]
 8004fae:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004fb0:	019b      	lsls	r3, r3, #6
 8004fb2:	431a      	orrs	r2, r3
 8004fb4:	687b      	ldr	r3, [r7, #4]
 8004fb6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004fb8:	085b      	lsrs	r3, r3, #1
 8004fba:	3b01      	subs	r3, #1
 8004fbc:	041b      	lsls	r3, r3, #16
 8004fbe:	431a      	orrs	r2, r3
 8004fc0:	687b      	ldr	r3, [r7, #4]
 8004fc2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004fc4:	061b      	lsls	r3, r3, #24
 8004fc6:	431a      	orrs	r2, r3
 8004fc8:	687b      	ldr	r3, [r7, #4]
 8004fca:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004fcc:	071b      	lsls	r3, r3, #28
 8004fce:	491b      	ldr	r1, [pc, #108]	@ (800503c <HAL_RCC_OscConfig+0x4ac>)
 8004fd0:	4313      	orrs	r3, r2
 8004fd2:	604b      	str	r3, [r1, #4]
 8004fd4:	4b1b      	ldr	r3, [pc, #108]	@ (8005044 <HAL_RCC_OscConfig+0x4b4>)
 8004fd6:	2201      	movs	r2, #1
 8004fd8:	601a      	str	r2, [r3, #0]
 8004fda:	f7fd fac9 	bl	8002570 <HAL_GetTick>
 8004fde:	6138      	str	r0, [r7, #16]
 8004fe0:	e008      	b.n	8004ff4 <HAL_RCC_OscConfig+0x464>
 8004fe2:	f7fd fac5 	bl	8002570 <HAL_GetTick>
 8004fe6:	4602      	mov	r2, r0
 8004fe8:	693b      	ldr	r3, [r7, #16]
 8004fea:	1ad3      	subs	r3, r2, r3
 8004fec:	2b02      	cmp	r3, #2
 8004fee:	d901      	bls.n	8004ff4 <HAL_RCC_OscConfig+0x464>
 8004ff0:	2303      	movs	r3, #3
 8004ff2:	e064      	b.n	80050be <HAL_RCC_OscConfig+0x52e>
 8004ff4:	4b11      	ldr	r3, [pc, #68]	@ (800503c <HAL_RCC_OscConfig+0x4ac>)
 8004ff6:	681b      	ldr	r3, [r3, #0]
 8004ff8:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004ffc:	2b00      	cmp	r3, #0
 8004ffe:	d0f0      	beq.n	8004fe2 <HAL_RCC_OscConfig+0x452>
 8005000:	e05c      	b.n	80050bc <HAL_RCC_OscConfig+0x52c>
 8005002:	4b10      	ldr	r3, [pc, #64]	@ (8005044 <HAL_RCC_OscConfig+0x4b4>)
 8005004:	2200      	movs	r2, #0
 8005006:	601a      	str	r2, [r3, #0]
 8005008:	f7fd fab2 	bl	8002570 <HAL_GetTick>
 800500c:	6138      	str	r0, [r7, #16]
 800500e:	e008      	b.n	8005022 <HAL_RCC_OscConfig+0x492>
 8005010:	f7fd faae 	bl	8002570 <HAL_GetTick>
 8005014:	4602      	mov	r2, r0
 8005016:	693b      	ldr	r3, [r7, #16]
 8005018:	1ad3      	subs	r3, r2, r3
 800501a:	2b02      	cmp	r3, #2
 800501c:	d901      	bls.n	8005022 <HAL_RCC_OscConfig+0x492>
 800501e:	2303      	movs	r3, #3
 8005020:	e04d      	b.n	80050be <HAL_RCC_OscConfig+0x52e>
 8005022:	4b06      	ldr	r3, [pc, #24]	@ (800503c <HAL_RCC_OscConfig+0x4ac>)
 8005024:	681b      	ldr	r3, [r3, #0]
 8005026:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800502a:	2b00      	cmp	r3, #0
 800502c:	d1f0      	bne.n	8005010 <HAL_RCC_OscConfig+0x480>
 800502e:	e045      	b.n	80050bc <HAL_RCC_OscConfig+0x52c>
 8005030:	687b      	ldr	r3, [r7, #4]
 8005032:	699b      	ldr	r3, [r3, #24]
 8005034:	2b01      	cmp	r3, #1
 8005036:	d107      	bne.n	8005048 <HAL_RCC_OscConfig+0x4b8>
 8005038:	2301      	movs	r3, #1
 800503a:	e040      	b.n	80050be <HAL_RCC_OscConfig+0x52e>
 800503c:	40023800 	.word	0x40023800
 8005040:	40007000 	.word	0x40007000
 8005044:	42470060 	.word	0x42470060
 8005048:	4b1f      	ldr	r3, [pc, #124]	@ (80050c8 <HAL_RCC_OscConfig+0x538>)
 800504a:	685b      	ldr	r3, [r3, #4]
 800504c:	60fb      	str	r3, [r7, #12]
 800504e:	687b      	ldr	r3, [r7, #4]
 8005050:	699b      	ldr	r3, [r3, #24]
 8005052:	2b01      	cmp	r3, #1
 8005054:	d030      	beq.n	80050b8 <HAL_RCC_OscConfig+0x528>
 8005056:	68fb      	ldr	r3, [r7, #12]
 8005058:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 800505c:	687b      	ldr	r3, [r7, #4]
 800505e:	69db      	ldr	r3, [r3, #28]
 8005060:	429a      	cmp	r2, r3
 8005062:	d129      	bne.n	80050b8 <HAL_RCC_OscConfig+0x528>
 8005064:	68fb      	ldr	r3, [r7, #12]
 8005066:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 800506a:	687b      	ldr	r3, [r7, #4]
 800506c:	6a1b      	ldr	r3, [r3, #32]
 800506e:	429a      	cmp	r2, r3
 8005070:	d122      	bne.n	80050b8 <HAL_RCC_OscConfig+0x528>
 8005072:	68fa      	ldr	r2, [r7, #12]
 8005074:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8005078:	4013      	ands	r3, r2
 800507a:	687a      	ldr	r2, [r7, #4]
 800507c:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 800507e:	0192      	lsls	r2, r2, #6
 8005080:	4293      	cmp	r3, r2
 8005082:	d119      	bne.n	80050b8 <HAL_RCC_OscConfig+0x528>
 8005084:	68fb      	ldr	r3, [r7, #12]
 8005086:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 800508a:	687b      	ldr	r3, [r7, #4]
 800508c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800508e:	085b      	lsrs	r3, r3, #1
 8005090:	3b01      	subs	r3, #1
 8005092:	041b      	lsls	r3, r3, #16
 8005094:	429a      	cmp	r2, r3
 8005096:	d10f      	bne.n	80050b8 <HAL_RCC_OscConfig+0x528>
 8005098:	68fb      	ldr	r3, [r7, #12]
 800509a:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 800509e:	687b      	ldr	r3, [r7, #4]
 80050a0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80050a2:	061b      	lsls	r3, r3, #24
 80050a4:	429a      	cmp	r2, r3
 80050a6:	d107      	bne.n	80050b8 <HAL_RCC_OscConfig+0x528>
 80050a8:	68fb      	ldr	r3, [r7, #12]
 80050aa:	f003 42e0 	and.w	r2, r3, #1879048192	@ 0x70000000
 80050ae:	687b      	ldr	r3, [r7, #4]
 80050b0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80050b2:	071b      	lsls	r3, r3, #28
 80050b4:	429a      	cmp	r2, r3
 80050b6:	d001      	beq.n	80050bc <HAL_RCC_OscConfig+0x52c>
 80050b8:	2301      	movs	r3, #1
 80050ba:	e000      	b.n	80050be <HAL_RCC_OscConfig+0x52e>
 80050bc:	2300      	movs	r3, #0
 80050be:	4618      	mov	r0, r3
 80050c0:	3718      	adds	r7, #24
 80050c2:	46bd      	mov	sp, r7
 80050c4:	bd80      	pop	{r7, pc}
 80050c6:	bf00      	nop
 80050c8:	40023800 	.word	0x40023800

080050cc <HAL_UART_Init>:
 80050cc:	b580      	push	{r7, lr}
 80050ce:	b082      	sub	sp, #8
 80050d0:	af00      	add	r7, sp, #0
 80050d2:	6078      	str	r0, [r7, #4]
 80050d4:	687b      	ldr	r3, [r7, #4]
 80050d6:	2b00      	cmp	r3, #0
 80050d8:	d101      	bne.n	80050de <HAL_UART_Init+0x12>
 80050da:	2301      	movs	r3, #1
 80050dc:	e042      	b.n	8005164 <HAL_UART_Init+0x98>
 80050de:	687b      	ldr	r3, [r7, #4]
 80050e0:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80050e4:	b2db      	uxtb	r3, r3
 80050e6:	2b00      	cmp	r3, #0
 80050e8:	d106      	bne.n	80050f8 <HAL_UART_Init+0x2c>
 80050ea:	687b      	ldr	r3, [r7, #4]
 80050ec:	2200      	movs	r2, #0
 80050ee:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80050f2:	6878      	ldr	r0, [r7, #4]
 80050f4:	f7fd f848 	bl	8002188 <HAL_UART_MspInit>
 80050f8:	687b      	ldr	r3, [r7, #4]
 80050fa:	2224      	movs	r2, #36	@ 0x24
 80050fc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005100:	687b      	ldr	r3, [r7, #4]
 8005102:	681b      	ldr	r3, [r3, #0]
 8005104:	68da      	ldr	r2, [r3, #12]
 8005106:	687b      	ldr	r3, [r7, #4]
 8005108:	681b      	ldr	r3, [r3, #0]
 800510a:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 800510e:	60da      	str	r2, [r3, #12]
 8005110:	6878      	ldr	r0, [r7, #4]
 8005112:	f000 f973 	bl	80053fc <UART_SetConfig>
 8005116:	687b      	ldr	r3, [r7, #4]
 8005118:	681b      	ldr	r3, [r3, #0]
 800511a:	691a      	ldr	r2, [r3, #16]
 800511c:	687b      	ldr	r3, [r7, #4]
 800511e:	681b      	ldr	r3, [r3, #0]
 8005120:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 8005124:	611a      	str	r2, [r3, #16]
 8005126:	687b      	ldr	r3, [r7, #4]
 8005128:	681b      	ldr	r3, [r3, #0]
 800512a:	695a      	ldr	r2, [r3, #20]
 800512c:	687b      	ldr	r3, [r7, #4]
 800512e:	681b      	ldr	r3, [r3, #0]
 8005130:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 8005134:	615a      	str	r2, [r3, #20]
 8005136:	687b      	ldr	r3, [r7, #4]
 8005138:	681b      	ldr	r3, [r3, #0]
 800513a:	68da      	ldr	r2, [r3, #12]
 800513c:	687b      	ldr	r3, [r7, #4]
 800513e:	681b      	ldr	r3, [r3, #0]
 8005140:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8005144:	60da      	str	r2, [r3, #12]
 8005146:	687b      	ldr	r3, [r7, #4]
 8005148:	2200      	movs	r2, #0
 800514a:	645a      	str	r2, [r3, #68]	@ 0x44
 800514c:	687b      	ldr	r3, [r7, #4]
 800514e:	2220      	movs	r2, #32
 8005150:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005154:	687b      	ldr	r3, [r7, #4]
 8005156:	2220      	movs	r2, #32
 8005158:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800515c:	687b      	ldr	r3, [r7, #4]
 800515e:	2200      	movs	r2, #0
 8005160:	635a      	str	r2, [r3, #52]	@ 0x34
 8005162:	2300      	movs	r3, #0
 8005164:	4618      	mov	r0, r3
 8005166:	3708      	adds	r7, #8
 8005168:	46bd      	mov	sp, r7
 800516a:	bd80      	pop	{r7, pc}

0800516c <HAL_UART_Transmit>:
 800516c:	b580      	push	{r7, lr}
 800516e:	b08a      	sub	sp, #40	@ 0x28
 8005170:	af02      	add	r7, sp, #8
 8005172:	60f8      	str	r0, [r7, #12]
 8005174:	60b9      	str	r1, [r7, #8]
 8005176:	603b      	str	r3, [r7, #0]
 8005178:	4613      	mov	r3, r2
 800517a:	80fb      	strh	r3, [r7, #6]
 800517c:	2300      	movs	r3, #0
 800517e:	617b      	str	r3, [r7, #20]
 8005180:	68fb      	ldr	r3, [r7, #12]
 8005182:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8005186:	b2db      	uxtb	r3, r3
 8005188:	2b20      	cmp	r3, #32
 800518a:	d175      	bne.n	8005278 <HAL_UART_Transmit+0x10c>
 800518c:	68bb      	ldr	r3, [r7, #8]
 800518e:	2b00      	cmp	r3, #0
 8005190:	d002      	beq.n	8005198 <HAL_UART_Transmit+0x2c>
 8005192:	88fb      	ldrh	r3, [r7, #6]
 8005194:	2b00      	cmp	r3, #0
 8005196:	d101      	bne.n	800519c <HAL_UART_Transmit+0x30>
 8005198:	2301      	movs	r3, #1
 800519a:	e06e      	b.n	800527a <HAL_UART_Transmit+0x10e>
 800519c:	68fb      	ldr	r3, [r7, #12]
 800519e:	2200      	movs	r2, #0
 80051a0:	645a      	str	r2, [r3, #68]	@ 0x44
 80051a2:	68fb      	ldr	r3, [r7, #12]
 80051a4:	2221      	movs	r2, #33	@ 0x21
 80051a6:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80051aa:	f7fd f9e1 	bl	8002570 <HAL_GetTick>
 80051ae:	6178      	str	r0, [r7, #20]
 80051b0:	68fb      	ldr	r3, [r7, #12]
 80051b2:	88fa      	ldrh	r2, [r7, #6]
 80051b4:	849a      	strh	r2, [r3, #36]	@ 0x24
 80051b6:	68fb      	ldr	r3, [r7, #12]
 80051b8:	88fa      	ldrh	r2, [r7, #6]
 80051ba:	84da      	strh	r2, [r3, #38]	@ 0x26
 80051bc:	68fb      	ldr	r3, [r7, #12]
 80051be:	689b      	ldr	r3, [r3, #8]
 80051c0:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80051c4:	d108      	bne.n	80051d8 <HAL_UART_Transmit+0x6c>
 80051c6:	68fb      	ldr	r3, [r7, #12]
 80051c8:	691b      	ldr	r3, [r3, #16]
 80051ca:	2b00      	cmp	r3, #0
 80051cc:	d104      	bne.n	80051d8 <HAL_UART_Transmit+0x6c>
 80051ce:	2300      	movs	r3, #0
 80051d0:	61fb      	str	r3, [r7, #28]
 80051d2:	68bb      	ldr	r3, [r7, #8]
 80051d4:	61bb      	str	r3, [r7, #24]
 80051d6:	e003      	b.n	80051e0 <HAL_UART_Transmit+0x74>
 80051d8:	68bb      	ldr	r3, [r7, #8]
 80051da:	61fb      	str	r3, [r7, #28]
 80051dc:	2300      	movs	r3, #0
 80051de:	61bb      	str	r3, [r7, #24]
 80051e0:	e02e      	b.n	8005240 <HAL_UART_Transmit+0xd4>
 80051e2:	683b      	ldr	r3, [r7, #0]
 80051e4:	9300      	str	r3, [sp, #0]
 80051e6:	697b      	ldr	r3, [r7, #20]
 80051e8:	2200      	movs	r2, #0
 80051ea:	2180      	movs	r1, #128	@ 0x80
 80051ec:	68f8      	ldr	r0, [r7, #12]
 80051ee:	f000 f848 	bl	8005282 <UART_WaitOnFlagUntilTimeout>
 80051f2:	4603      	mov	r3, r0
 80051f4:	2b00      	cmp	r3, #0
 80051f6:	d005      	beq.n	8005204 <HAL_UART_Transmit+0x98>
 80051f8:	68fb      	ldr	r3, [r7, #12]
 80051fa:	2220      	movs	r2, #32
 80051fc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005200:	2303      	movs	r3, #3
 8005202:	e03a      	b.n	800527a <HAL_UART_Transmit+0x10e>
 8005204:	69fb      	ldr	r3, [r7, #28]
 8005206:	2b00      	cmp	r3, #0
 8005208:	d10b      	bne.n	8005222 <HAL_UART_Transmit+0xb6>
 800520a:	69bb      	ldr	r3, [r7, #24]
 800520c:	881b      	ldrh	r3, [r3, #0]
 800520e:	461a      	mov	r2, r3
 8005210:	68fb      	ldr	r3, [r7, #12]
 8005212:	681b      	ldr	r3, [r3, #0]
 8005214:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8005218:	605a      	str	r2, [r3, #4]
 800521a:	69bb      	ldr	r3, [r7, #24]
 800521c:	3302      	adds	r3, #2
 800521e:	61bb      	str	r3, [r7, #24]
 8005220:	e007      	b.n	8005232 <HAL_UART_Transmit+0xc6>
 8005222:	69fb      	ldr	r3, [r7, #28]
 8005224:	781a      	ldrb	r2, [r3, #0]
 8005226:	68fb      	ldr	r3, [r7, #12]
 8005228:	681b      	ldr	r3, [r3, #0]
 800522a:	605a      	str	r2, [r3, #4]
 800522c:	69fb      	ldr	r3, [r7, #28]
 800522e:	3301      	adds	r3, #1
 8005230:	61fb      	str	r3, [r7, #28]
 8005232:	68fb      	ldr	r3, [r7, #12]
 8005234:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8005236:	b29b      	uxth	r3, r3
 8005238:	3b01      	subs	r3, #1
 800523a:	b29a      	uxth	r2, r3
 800523c:	68fb      	ldr	r3, [r7, #12]
 800523e:	84da      	strh	r2, [r3, #38]	@ 0x26
 8005240:	68fb      	ldr	r3, [r7, #12]
 8005242:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 8005244:	b29b      	uxth	r3, r3
 8005246:	2b00      	cmp	r3, #0
 8005248:	d1cb      	bne.n	80051e2 <HAL_UART_Transmit+0x76>
 800524a:	683b      	ldr	r3, [r7, #0]
 800524c:	9300      	str	r3, [sp, #0]
 800524e:	697b      	ldr	r3, [r7, #20]
 8005250:	2200      	movs	r2, #0
 8005252:	2140      	movs	r1, #64	@ 0x40
 8005254:	68f8      	ldr	r0, [r7, #12]
 8005256:	f000 f814 	bl	8005282 <UART_WaitOnFlagUntilTimeout>
 800525a:	4603      	mov	r3, r0
 800525c:	2b00      	cmp	r3, #0
 800525e:	d005      	beq.n	800526c <HAL_UART_Transmit+0x100>
 8005260:	68fb      	ldr	r3, [r7, #12]
 8005262:	2220      	movs	r2, #32
 8005264:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005268:	2303      	movs	r3, #3
 800526a:	e006      	b.n	800527a <HAL_UART_Transmit+0x10e>
 800526c:	68fb      	ldr	r3, [r7, #12]
 800526e:	2220      	movs	r2, #32
 8005270:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8005274:	2300      	movs	r3, #0
 8005276:	e000      	b.n	800527a <HAL_UART_Transmit+0x10e>
 8005278:	2302      	movs	r3, #2
 800527a:	4618      	mov	r0, r3
 800527c:	3720      	adds	r7, #32
 800527e:	46bd      	mov	sp, r7
 8005280:	bd80      	pop	{r7, pc}

08005282 <UART_WaitOnFlagUntilTimeout>:
 8005282:	b580      	push	{r7, lr}
 8005284:	b086      	sub	sp, #24
 8005286:	af00      	add	r7, sp, #0
 8005288:	60f8      	str	r0, [r7, #12]
 800528a:	60b9      	str	r1, [r7, #8]
 800528c:	603b      	str	r3, [r7, #0]
 800528e:	4613      	mov	r3, r2
 8005290:	71fb      	strb	r3, [r7, #7]
 8005292:	e03b      	b.n	800530c <UART_WaitOnFlagUntilTimeout+0x8a>
 8005294:	6a3b      	ldr	r3, [r7, #32]
 8005296:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 800529a:	d037      	beq.n	800530c <UART_WaitOnFlagUntilTimeout+0x8a>
 800529c:	f7fd f968 	bl	8002570 <HAL_GetTick>
 80052a0:	4602      	mov	r2, r0
 80052a2:	683b      	ldr	r3, [r7, #0]
 80052a4:	1ad3      	subs	r3, r2, r3
 80052a6:	6a3a      	ldr	r2, [r7, #32]
 80052a8:	429a      	cmp	r2, r3
 80052aa:	d302      	bcc.n	80052b2 <UART_WaitOnFlagUntilTimeout+0x30>
 80052ac:	6a3b      	ldr	r3, [r7, #32]
 80052ae:	2b00      	cmp	r3, #0
 80052b0:	d101      	bne.n	80052b6 <UART_WaitOnFlagUntilTimeout+0x34>
 80052b2:	2303      	movs	r3, #3
 80052b4:	e03a      	b.n	800532c <UART_WaitOnFlagUntilTimeout+0xaa>
 80052b6:	68fb      	ldr	r3, [r7, #12]
 80052b8:	681b      	ldr	r3, [r3, #0]
 80052ba:	68db      	ldr	r3, [r3, #12]
 80052bc:	f003 0304 	and.w	r3, r3, #4
 80052c0:	2b00      	cmp	r3, #0
 80052c2:	d023      	beq.n	800530c <UART_WaitOnFlagUntilTimeout+0x8a>
 80052c4:	68bb      	ldr	r3, [r7, #8]
 80052c6:	2b80      	cmp	r3, #128	@ 0x80
 80052c8:	d020      	beq.n	800530c <UART_WaitOnFlagUntilTimeout+0x8a>
 80052ca:	68bb      	ldr	r3, [r7, #8]
 80052cc:	2b40      	cmp	r3, #64	@ 0x40
 80052ce:	d01d      	beq.n	800530c <UART_WaitOnFlagUntilTimeout+0x8a>
 80052d0:	68fb      	ldr	r3, [r7, #12]
 80052d2:	681b      	ldr	r3, [r3, #0]
 80052d4:	681b      	ldr	r3, [r3, #0]
 80052d6:	f003 0308 	and.w	r3, r3, #8
 80052da:	2b08      	cmp	r3, #8
 80052dc:	d116      	bne.n	800530c <UART_WaitOnFlagUntilTimeout+0x8a>
 80052de:	2300      	movs	r3, #0
 80052e0:	617b      	str	r3, [r7, #20]
 80052e2:	68fb      	ldr	r3, [r7, #12]
 80052e4:	681b      	ldr	r3, [r3, #0]
 80052e6:	681b      	ldr	r3, [r3, #0]
 80052e8:	617b      	str	r3, [r7, #20]
 80052ea:	68fb      	ldr	r3, [r7, #12]
 80052ec:	681b      	ldr	r3, [r3, #0]
 80052ee:	685b      	ldr	r3, [r3, #4]
 80052f0:	617b      	str	r3, [r7, #20]
 80052f2:	697b      	ldr	r3, [r7, #20]
 80052f4:	68f8      	ldr	r0, [r7, #12]
 80052f6:	f000 f81d 	bl	8005334 <UART_EndRxTransfer>
 80052fa:	68fb      	ldr	r3, [r7, #12]
 80052fc:	2208      	movs	r2, #8
 80052fe:	645a      	str	r2, [r3, #68]	@ 0x44
 8005300:	68fb      	ldr	r3, [r7, #12]
 8005302:	2200      	movs	r2, #0
 8005304:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005308:	2301      	movs	r3, #1
 800530a:	e00f      	b.n	800532c <UART_WaitOnFlagUntilTimeout+0xaa>
 800530c:	68fb      	ldr	r3, [r7, #12]
 800530e:	681b      	ldr	r3, [r3, #0]
 8005310:	681a      	ldr	r2, [r3, #0]
 8005312:	68bb      	ldr	r3, [r7, #8]
 8005314:	4013      	ands	r3, r2
 8005316:	68ba      	ldr	r2, [r7, #8]
 8005318:	429a      	cmp	r2, r3
 800531a:	bf0c      	ite	eq
 800531c:	2301      	moveq	r3, #1
 800531e:	2300      	movne	r3, #0
 8005320:	b2db      	uxtb	r3, r3
 8005322:	461a      	mov	r2, r3
 8005324:	79fb      	ldrb	r3, [r7, #7]
 8005326:	429a      	cmp	r2, r3
 8005328:	d0b4      	beq.n	8005294 <UART_WaitOnFlagUntilTimeout+0x12>
 800532a:	2300      	movs	r3, #0
 800532c:	4618      	mov	r0, r3
 800532e:	3718      	adds	r7, #24
 8005330:	46bd      	mov	sp, r7
 8005332:	bd80      	pop	{r7, pc}

08005334 <UART_EndRxTransfer>:
 8005334:	b480      	push	{r7}
 8005336:	b095      	sub	sp, #84	@ 0x54
 8005338:	af00      	add	r7, sp, #0
 800533a:	6078      	str	r0, [r7, #4]
 800533c:	687b      	ldr	r3, [r7, #4]
 800533e:	681b      	ldr	r3, [r3, #0]
 8005340:	330c      	adds	r3, #12
 8005342:	637b      	str	r3, [r7, #52]	@ 0x34
 8005344:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8005346:	e853 3f00 	ldrex	r3, [r3]
 800534a:	633b      	str	r3, [r7, #48]	@ 0x30
 800534c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800534e:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 8005352:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8005354:	687b      	ldr	r3, [r7, #4]
 8005356:	681b      	ldr	r3, [r3, #0]
 8005358:	330c      	adds	r3, #12
 800535a:	6cfa      	ldr	r2, [r7, #76]	@ 0x4c
 800535c:	643a      	str	r2, [r7, #64]	@ 0x40
 800535e:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8005360:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 8005362:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 8005364:	e841 2300 	strex	r3, r2, [r1]
 8005368:	63bb      	str	r3, [r7, #56]	@ 0x38
 800536a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800536c:	2b00      	cmp	r3, #0
 800536e:	d1e5      	bne.n	800533c <UART_EndRxTransfer+0x8>
 8005370:	687b      	ldr	r3, [r7, #4]
 8005372:	681b      	ldr	r3, [r3, #0]
 8005374:	3314      	adds	r3, #20
 8005376:	623b      	str	r3, [r7, #32]
 8005378:	6a3b      	ldr	r3, [r7, #32]
 800537a:	e853 3f00 	ldrex	r3, [r3]
 800537e:	61fb      	str	r3, [r7, #28]
 8005380:	69fb      	ldr	r3, [r7, #28]
 8005382:	f023 0301 	bic.w	r3, r3, #1
 8005386:	64bb      	str	r3, [r7, #72]	@ 0x48
 8005388:	687b      	ldr	r3, [r7, #4]
 800538a:	681b      	ldr	r3, [r3, #0]
 800538c:	3314      	adds	r3, #20
 800538e:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8005390:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8005392:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005394:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8005396:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8005398:	e841 2300 	strex	r3, r2, [r1]
 800539c:	627b      	str	r3, [r7, #36]	@ 0x24
 800539e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80053a0:	2b00      	cmp	r3, #0
 80053a2:	d1e5      	bne.n	8005370 <UART_EndRxTransfer+0x3c>
 80053a4:	687b      	ldr	r3, [r7, #4]
 80053a6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80053a8:	2b01      	cmp	r3, #1
 80053aa:	d119      	bne.n	80053e0 <UART_EndRxTransfer+0xac>
 80053ac:	687b      	ldr	r3, [r7, #4]
 80053ae:	681b      	ldr	r3, [r3, #0]
 80053b0:	330c      	adds	r3, #12
 80053b2:	60fb      	str	r3, [r7, #12]
 80053b4:	68fb      	ldr	r3, [r7, #12]
 80053b6:	e853 3f00 	ldrex	r3, [r3]
 80053ba:	60bb      	str	r3, [r7, #8]
 80053bc:	68bb      	ldr	r3, [r7, #8]
 80053be:	f023 0310 	bic.w	r3, r3, #16
 80053c2:	647b      	str	r3, [r7, #68]	@ 0x44
 80053c4:	687b      	ldr	r3, [r7, #4]
 80053c6:	681b      	ldr	r3, [r3, #0]
 80053c8:	330c      	adds	r3, #12
 80053ca:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80053cc:	61ba      	str	r2, [r7, #24]
 80053ce:	617b      	str	r3, [r7, #20]
 80053d0:	6979      	ldr	r1, [r7, #20]
 80053d2:	69ba      	ldr	r2, [r7, #24]
 80053d4:	e841 2300 	strex	r3, r2, [r1]
 80053d8:	613b      	str	r3, [r7, #16]
 80053da:	693b      	ldr	r3, [r7, #16]
 80053dc:	2b00      	cmp	r3, #0
 80053de:	d1e5      	bne.n	80053ac <UART_EndRxTransfer+0x78>
 80053e0:	687b      	ldr	r3, [r7, #4]
 80053e2:	2220      	movs	r2, #32
 80053e4:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80053e8:	687b      	ldr	r3, [r7, #4]
 80053ea:	2200      	movs	r2, #0
 80053ec:	631a      	str	r2, [r3, #48]	@ 0x30
 80053ee:	bf00      	nop
 80053f0:	3754      	adds	r7, #84	@ 0x54
 80053f2:	46bd      	mov	sp, r7
 80053f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80053f8:	4770      	bx	lr
	...

080053fc <UART_SetConfig>:
 80053fc:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8005400:	b0c0      	sub	sp, #256	@ 0x100
 8005402:	af00      	add	r7, sp, #0
 8005404:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 8005408:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800540c:	681b      	ldr	r3, [r3, #0]
 800540e:	691b      	ldr	r3, [r3, #16]
 8005410:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 8005414:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005418:	68d9      	ldr	r1, [r3, #12]
 800541a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800541e:	681a      	ldr	r2, [r3, #0]
 8005420:	ea40 0301 	orr.w	r3, r0, r1
 8005424:	6113      	str	r3, [r2, #16]
 8005426:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800542a:	689a      	ldr	r2, [r3, #8]
 800542c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005430:	691b      	ldr	r3, [r3, #16]
 8005432:	431a      	orrs	r2, r3
 8005434:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005438:	695b      	ldr	r3, [r3, #20]
 800543a:	431a      	orrs	r2, r3
 800543c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005440:	69db      	ldr	r3, [r3, #28]
 8005442:	4313      	orrs	r3, r2
 8005444:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8005448:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800544c:	681b      	ldr	r3, [r3, #0]
 800544e:	68db      	ldr	r3, [r3, #12]
 8005450:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 8005454:	f021 010c 	bic.w	r1, r1, #12
 8005458:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800545c:	681a      	ldr	r2, [r3, #0]
 800545e:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 8005462:	430b      	orrs	r3, r1
 8005464:	60d3      	str	r3, [r2, #12]
 8005466:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800546a:	681b      	ldr	r3, [r3, #0]
 800546c:	695b      	ldr	r3, [r3, #20]
 800546e:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 8005472:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005476:	6999      	ldr	r1, [r3, #24]
 8005478:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800547c:	681a      	ldr	r2, [r3, #0]
 800547e:	ea40 0301 	orr.w	r3, r0, r1
 8005482:	6153      	str	r3, [r2, #20]
 8005484:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005488:	681a      	ldr	r2, [r3, #0]
 800548a:	4b8f      	ldr	r3, [pc, #572]	@ (80056c8 <UART_SetConfig+0x2cc>)
 800548c:	429a      	cmp	r2, r3
 800548e:	d005      	beq.n	800549c <UART_SetConfig+0xa0>
 8005490:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8005494:	681a      	ldr	r2, [r3, #0]
 8005496:	4b8d      	ldr	r3, [pc, #564]	@ (80056cc <UART_SetConfig+0x2d0>)
 8005498:	429a      	cmp	r2, r3
 800549a:	d104      	bne.n	80054a6 <UART_SetConfig+0xaa>
 800549c:	f7ff f934 	bl	8004708 <HAL_RCC_GetPCLK2Freq>
 80054a0:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 80054a4:	e003      	b.n	80054ae <UART_SetConfig+0xb2>
 80054a6:	f7ff f91b 	bl	80046e0 <HAL_RCC_GetPCLK1Freq>
 80054aa:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 80054ae:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80054b2:	69db      	ldr	r3, [r3, #28]
 80054b4:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80054b8:	f040 810c 	bne.w	80056d4 <UART_SetConfig+0x2d8>
 80054bc:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80054c0:	2200      	movs	r2, #0
 80054c2:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 80054c6:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 80054ca:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 80054ce:	4622      	mov	r2, r4
 80054d0:	462b      	mov	r3, r5
 80054d2:	1891      	adds	r1, r2, r2
 80054d4:	65b9      	str	r1, [r7, #88]	@ 0x58
 80054d6:	415b      	adcs	r3, r3
 80054d8:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80054da:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 80054de:	4621      	mov	r1, r4
 80054e0:	eb12 0801 	adds.w	r8, r2, r1
 80054e4:	4629      	mov	r1, r5
 80054e6:	eb43 0901 	adc.w	r9, r3, r1
 80054ea:	f04f 0200 	mov.w	r2, #0
 80054ee:	f04f 0300 	mov.w	r3, #0
 80054f2:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 80054f6:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 80054fa:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 80054fe:	4690      	mov	r8, r2
 8005500:	4699      	mov	r9, r3
 8005502:	4623      	mov	r3, r4
 8005504:	eb18 0303 	adds.w	r3, r8, r3
 8005508:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 800550c:	462b      	mov	r3, r5
 800550e:	eb49 0303 	adc.w	r3, r9, r3
 8005512:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8005516:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800551a:	685b      	ldr	r3, [r3, #4]
 800551c:	2200      	movs	r2, #0
 800551e:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8005522:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 8005526:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 800552a:	460b      	mov	r3, r1
 800552c:	18db      	adds	r3, r3, r3
 800552e:	653b      	str	r3, [r7, #80]	@ 0x50
 8005530:	4613      	mov	r3, r2
 8005532:	eb42 0303 	adc.w	r3, r2, r3
 8005536:	657b      	str	r3, [r7, #84]	@ 0x54
 8005538:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 800553c:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8005540:	f7fb fba2 	bl	8000c88 <__aeabi_uldivmod>
 8005544:	4602      	mov	r2, r0
 8005546:	460b      	mov	r3, r1
 8005548:	4b61      	ldr	r3, [pc, #388]	@ (80056d0 <UART_SetConfig+0x2d4>)
 800554a:	fba3 2302 	umull	r2, r3, r3, r2
 800554e:	095b      	lsrs	r3, r3, #5
 8005550:	011c      	lsls	r4, r3, #4
 8005552:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8005556:	2200      	movs	r2, #0
 8005558:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 800555c:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 8005560:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 8005564:	4642      	mov	r2, r8
 8005566:	464b      	mov	r3, r9
 8005568:	1891      	adds	r1, r2, r2
 800556a:	64b9      	str	r1, [r7, #72]	@ 0x48
 800556c:	415b      	adcs	r3, r3
 800556e:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8005570:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8005574:	4641      	mov	r1, r8
 8005576:	eb12 0a01 	adds.w	sl, r2, r1
 800557a:	4649      	mov	r1, r9
 800557c:	eb43 0b01 	adc.w	fp, r3, r1
 8005580:	f04f 0200 	mov.w	r2, #0
 8005584:	f04f 0300 	mov.w	r3, #0
 8005588:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 800558c:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8005590:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8005594:	4692      	mov	sl, r2
 8005596:	469b      	mov	fp, r3
 8005598:	4643      	mov	r3, r8
 800559a:	eb1a 0303 	adds.w	r3, sl, r3
 800559e:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 80055a2:	464b      	mov	r3, r9
 80055a4:	eb4b 0303 	adc.w	r3, fp, r3
 80055a8:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 80055ac:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80055b0:	685b      	ldr	r3, [r3, #4]
 80055b2:	2200      	movs	r2, #0
 80055b4:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 80055b8:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 80055bc:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 80055c0:	460b      	mov	r3, r1
 80055c2:	18db      	adds	r3, r3, r3
 80055c4:	643b      	str	r3, [r7, #64]	@ 0x40
 80055c6:	4613      	mov	r3, r2
 80055c8:	eb42 0303 	adc.w	r3, r2, r3
 80055cc:	647b      	str	r3, [r7, #68]	@ 0x44
 80055ce:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 80055d2:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 80055d6:	f7fb fb57 	bl	8000c88 <__aeabi_uldivmod>
 80055da:	4602      	mov	r2, r0
 80055dc:	460b      	mov	r3, r1
 80055de:	4611      	mov	r1, r2
 80055e0:	4b3b      	ldr	r3, [pc, #236]	@ (80056d0 <UART_SetConfig+0x2d4>)
 80055e2:	fba3 2301 	umull	r2, r3, r3, r1
 80055e6:	095b      	lsrs	r3, r3, #5
 80055e8:	2264      	movs	r2, #100	@ 0x64
 80055ea:	fb02 f303 	mul.w	r3, r2, r3
 80055ee:	1acb      	subs	r3, r1, r3
 80055f0:	00db      	lsls	r3, r3, #3
 80055f2:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 80055f6:	4b36      	ldr	r3, [pc, #216]	@ (80056d0 <UART_SetConfig+0x2d4>)
 80055f8:	fba3 2302 	umull	r2, r3, r3, r2
 80055fc:	095b      	lsrs	r3, r3, #5
 80055fe:	005b      	lsls	r3, r3, #1
 8005600:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 8005604:	441c      	add	r4, r3
 8005606:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 800560a:	2200      	movs	r2, #0
 800560c:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8005610:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 8005614:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 8005618:	4642      	mov	r2, r8
 800561a:	464b      	mov	r3, r9
 800561c:	1891      	adds	r1, r2, r2
 800561e:	63b9      	str	r1, [r7, #56]	@ 0x38
 8005620:	415b      	adcs	r3, r3
 8005622:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8005624:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8005628:	4641      	mov	r1, r8
 800562a:	1851      	adds	r1, r2, r1
 800562c:	6339      	str	r1, [r7, #48]	@ 0x30
 800562e:	4649      	mov	r1, r9
 8005630:	414b      	adcs	r3, r1
 8005632:	637b      	str	r3, [r7, #52]	@ 0x34
 8005634:	f04f 0200 	mov.w	r2, #0
 8005638:	f04f 0300 	mov.w	r3, #0
 800563c:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 8005640:	4659      	mov	r1, fp
 8005642:	00cb      	lsls	r3, r1, #3
 8005644:	4651      	mov	r1, sl
 8005646:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800564a:	4651      	mov	r1, sl
 800564c:	00ca      	lsls	r2, r1, #3
 800564e:	4610      	mov	r0, r2
 8005650:	4619      	mov	r1, r3
 8005652:	4603      	mov	r3, r0
 8005654:	4642      	mov	r2, r8
 8005656:	189b      	adds	r3, r3, r2
 8005658:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 800565c:	464b      	mov	r3, r9
 800565e:	460a      	mov	r2, r1
 8005660:	eb42 0303 	adc.w	r3, r2, r3
 8005664:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8005668:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800566c:	685b      	ldr	r3, [r3, #4]
 800566e:	2200      	movs	r2, #0
 8005670:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 8005674:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 8005678:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 800567c:	460b      	mov	r3, r1
 800567e:	18db      	adds	r3, r3, r3
 8005680:	62bb      	str	r3, [r7, #40]	@ 0x28
 8005682:	4613      	mov	r3, r2
 8005684:	eb42 0303 	adc.w	r3, r2, r3
 8005688:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800568a:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 800568e:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 8005692:	f7fb faf9 	bl	8000c88 <__aeabi_uldivmod>
 8005696:	4602      	mov	r2, r0
 8005698:	460b      	mov	r3, r1
 800569a:	4b0d      	ldr	r3, [pc, #52]	@ (80056d0 <UART_SetConfig+0x2d4>)
 800569c:	fba3 1302 	umull	r1, r3, r3, r2
 80056a0:	095b      	lsrs	r3, r3, #5
 80056a2:	2164      	movs	r1, #100	@ 0x64
 80056a4:	fb01 f303 	mul.w	r3, r1, r3
 80056a8:	1ad3      	subs	r3, r2, r3
 80056aa:	00db      	lsls	r3, r3, #3
 80056ac:	3332      	adds	r3, #50	@ 0x32
 80056ae:	4a08      	ldr	r2, [pc, #32]	@ (80056d0 <UART_SetConfig+0x2d4>)
 80056b0:	fba2 2303 	umull	r2, r3, r2, r3
 80056b4:	095b      	lsrs	r3, r3, #5
 80056b6:	f003 0207 	and.w	r2, r3, #7
 80056ba:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80056be:	681b      	ldr	r3, [r3, #0]
 80056c0:	4422      	add	r2, r4
 80056c2:	609a      	str	r2, [r3, #8]
 80056c4:	e106      	b.n	80058d4 <UART_SetConfig+0x4d8>
 80056c6:	bf00      	nop
 80056c8:	40011000 	.word	0x40011000
 80056cc:	40011400 	.word	0x40011400
 80056d0:	51eb851f 	.word	0x51eb851f
 80056d4:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80056d8:	2200      	movs	r2, #0
 80056da:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 80056de:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 80056e2:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 80056e6:	4642      	mov	r2, r8
 80056e8:	464b      	mov	r3, r9
 80056ea:	1891      	adds	r1, r2, r2
 80056ec:	6239      	str	r1, [r7, #32]
 80056ee:	415b      	adcs	r3, r3
 80056f0:	627b      	str	r3, [r7, #36]	@ 0x24
 80056f2:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 80056f6:	4641      	mov	r1, r8
 80056f8:	1854      	adds	r4, r2, r1
 80056fa:	4649      	mov	r1, r9
 80056fc:	eb43 0501 	adc.w	r5, r3, r1
 8005700:	f04f 0200 	mov.w	r2, #0
 8005704:	f04f 0300 	mov.w	r3, #0
 8005708:	00eb      	lsls	r3, r5, #3
 800570a:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800570e:	00e2      	lsls	r2, r4, #3
 8005710:	4614      	mov	r4, r2
 8005712:	461d      	mov	r5, r3
 8005714:	4643      	mov	r3, r8
 8005716:	18e3      	adds	r3, r4, r3
 8005718:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 800571c:	464b      	mov	r3, r9
 800571e:	eb45 0303 	adc.w	r3, r5, r3
 8005722:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8005726:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800572a:	685b      	ldr	r3, [r3, #4]
 800572c:	2200      	movs	r2, #0
 800572e:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8005732:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 8005736:	f04f 0200 	mov.w	r2, #0
 800573a:	f04f 0300 	mov.w	r3, #0
 800573e:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 8005742:	4629      	mov	r1, r5
 8005744:	008b      	lsls	r3, r1, #2
 8005746:	4621      	mov	r1, r4
 8005748:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800574c:	4621      	mov	r1, r4
 800574e:	008a      	lsls	r2, r1, #2
 8005750:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 8005754:	f7fb fa98 	bl	8000c88 <__aeabi_uldivmod>
 8005758:	4602      	mov	r2, r0
 800575a:	460b      	mov	r3, r1
 800575c:	4b60      	ldr	r3, [pc, #384]	@ (80058e0 <UART_SetConfig+0x4e4>)
 800575e:	fba3 2302 	umull	r2, r3, r3, r2
 8005762:	095b      	lsrs	r3, r3, #5
 8005764:	011c      	lsls	r4, r3, #4
 8005766:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 800576a:	2200      	movs	r2, #0
 800576c:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8005770:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8005774:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 8005778:	4642      	mov	r2, r8
 800577a:	464b      	mov	r3, r9
 800577c:	1891      	adds	r1, r2, r2
 800577e:	61b9      	str	r1, [r7, #24]
 8005780:	415b      	adcs	r3, r3
 8005782:	61fb      	str	r3, [r7, #28]
 8005784:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8005788:	4641      	mov	r1, r8
 800578a:	1851      	adds	r1, r2, r1
 800578c:	6139      	str	r1, [r7, #16]
 800578e:	4649      	mov	r1, r9
 8005790:	414b      	adcs	r3, r1
 8005792:	617b      	str	r3, [r7, #20]
 8005794:	f04f 0200 	mov.w	r2, #0
 8005798:	f04f 0300 	mov.w	r3, #0
 800579c:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 80057a0:	4659      	mov	r1, fp
 80057a2:	00cb      	lsls	r3, r1, #3
 80057a4:	4651      	mov	r1, sl
 80057a6:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80057aa:	4651      	mov	r1, sl
 80057ac:	00ca      	lsls	r2, r1, #3
 80057ae:	4610      	mov	r0, r2
 80057b0:	4619      	mov	r1, r3
 80057b2:	4603      	mov	r3, r0
 80057b4:	4642      	mov	r2, r8
 80057b6:	189b      	adds	r3, r3, r2
 80057b8:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 80057bc:	464b      	mov	r3, r9
 80057be:	460a      	mov	r2, r1
 80057c0:	eb42 0303 	adc.w	r3, r2, r3
 80057c4:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80057c8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80057cc:	685b      	ldr	r3, [r3, #4]
 80057ce:	2200      	movs	r2, #0
 80057d0:	67bb      	str	r3, [r7, #120]	@ 0x78
 80057d2:	67fa      	str	r2, [r7, #124]	@ 0x7c
 80057d4:	f04f 0200 	mov.w	r2, #0
 80057d8:	f04f 0300 	mov.w	r3, #0
 80057dc:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 80057e0:	4649      	mov	r1, r9
 80057e2:	008b      	lsls	r3, r1, #2
 80057e4:	4641      	mov	r1, r8
 80057e6:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80057ea:	4641      	mov	r1, r8
 80057ec:	008a      	lsls	r2, r1, #2
 80057ee:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 80057f2:	f7fb fa49 	bl	8000c88 <__aeabi_uldivmod>
 80057f6:	4602      	mov	r2, r0
 80057f8:	460b      	mov	r3, r1
 80057fa:	4611      	mov	r1, r2
 80057fc:	4b38      	ldr	r3, [pc, #224]	@ (80058e0 <UART_SetConfig+0x4e4>)
 80057fe:	fba3 2301 	umull	r2, r3, r3, r1
 8005802:	095b      	lsrs	r3, r3, #5
 8005804:	2264      	movs	r2, #100	@ 0x64
 8005806:	fb02 f303 	mul.w	r3, r2, r3
 800580a:	1acb      	subs	r3, r1, r3
 800580c:	011b      	lsls	r3, r3, #4
 800580e:	3332      	adds	r3, #50	@ 0x32
 8005810:	4a33      	ldr	r2, [pc, #204]	@ (80058e0 <UART_SetConfig+0x4e4>)
 8005812:	fba2 2303 	umull	r2, r3, r2, r3
 8005816:	095b      	lsrs	r3, r3, #5
 8005818:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 800581c:	441c      	add	r4, r3
 800581e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8005822:	2200      	movs	r2, #0
 8005824:	673b      	str	r3, [r7, #112]	@ 0x70
 8005826:	677a      	str	r2, [r7, #116]	@ 0x74
 8005828:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 800582c:	4642      	mov	r2, r8
 800582e:	464b      	mov	r3, r9
 8005830:	1891      	adds	r1, r2, r2
 8005832:	60b9      	str	r1, [r7, #8]
 8005834:	415b      	adcs	r3, r3
 8005836:	60fb      	str	r3, [r7, #12]
 8005838:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800583c:	4641      	mov	r1, r8
 800583e:	1851      	adds	r1, r2, r1
 8005840:	6039      	str	r1, [r7, #0]
 8005842:	4649      	mov	r1, r9
 8005844:	414b      	adcs	r3, r1
 8005846:	607b      	str	r3, [r7, #4]
 8005848:	f04f 0200 	mov.w	r2, #0
 800584c:	f04f 0300 	mov.w	r3, #0
 8005850:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8005854:	4659      	mov	r1, fp
 8005856:	00cb      	lsls	r3, r1, #3
 8005858:	4651      	mov	r1, sl
 800585a:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800585e:	4651      	mov	r1, sl
 8005860:	00ca      	lsls	r2, r1, #3
 8005862:	4610      	mov	r0, r2
 8005864:	4619      	mov	r1, r3
 8005866:	4603      	mov	r3, r0
 8005868:	4642      	mov	r2, r8
 800586a:	189b      	adds	r3, r3, r2
 800586c:	66bb      	str	r3, [r7, #104]	@ 0x68
 800586e:	464b      	mov	r3, r9
 8005870:	460a      	mov	r2, r1
 8005872:	eb42 0303 	adc.w	r3, r2, r3
 8005876:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8005878:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800587c:	685b      	ldr	r3, [r3, #4]
 800587e:	2200      	movs	r2, #0
 8005880:	663b      	str	r3, [r7, #96]	@ 0x60
 8005882:	667a      	str	r2, [r7, #100]	@ 0x64
 8005884:	f04f 0200 	mov.w	r2, #0
 8005888:	f04f 0300 	mov.w	r3, #0
 800588c:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 8005890:	4649      	mov	r1, r9
 8005892:	008b      	lsls	r3, r1, #2
 8005894:	4641      	mov	r1, r8
 8005896:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800589a:	4641      	mov	r1, r8
 800589c:	008a      	lsls	r2, r1, #2
 800589e:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 80058a2:	f7fb f9f1 	bl	8000c88 <__aeabi_uldivmod>
 80058a6:	4602      	mov	r2, r0
 80058a8:	460b      	mov	r3, r1
 80058aa:	4b0d      	ldr	r3, [pc, #52]	@ (80058e0 <UART_SetConfig+0x4e4>)
 80058ac:	fba3 1302 	umull	r1, r3, r3, r2
 80058b0:	095b      	lsrs	r3, r3, #5
 80058b2:	2164      	movs	r1, #100	@ 0x64
 80058b4:	fb01 f303 	mul.w	r3, r1, r3
 80058b8:	1ad3      	subs	r3, r2, r3
 80058ba:	011b      	lsls	r3, r3, #4
 80058bc:	3332      	adds	r3, #50	@ 0x32
 80058be:	4a08      	ldr	r2, [pc, #32]	@ (80058e0 <UART_SetConfig+0x4e4>)
 80058c0:	fba2 2303 	umull	r2, r3, r2, r3
 80058c4:	095b      	lsrs	r3, r3, #5
 80058c6:	f003 020f 	and.w	r2, r3, #15
 80058ca:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80058ce:	681b      	ldr	r3, [r3, #0]
 80058d0:	4422      	add	r2, r4
 80058d2:	609a      	str	r2, [r3, #8]
 80058d4:	bf00      	nop
 80058d6:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 80058da:	46bd      	mov	sp, r7
 80058dc:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80058e0:	51eb851f 	.word	0x51eb851f

080058e4 <_calloc_r>:
 80058e4:	b570      	push	{r4, r5, r6, lr}
 80058e6:	fba1 5402 	umull	r5, r4, r1, r2
 80058ea:	b93c      	cbnz	r4, 80058fc <_calloc_r+0x18>
 80058ec:	4629      	mov	r1, r5
 80058ee:	f000 fb01 	bl	8005ef4 <_malloc_r>
 80058f2:	4606      	mov	r6, r0
 80058f4:	b928      	cbnz	r0, 8005902 <_calloc_r+0x1e>
 80058f6:	2600      	movs	r6, #0
 80058f8:	4630      	mov	r0, r6
 80058fa:	bd70      	pop	{r4, r5, r6, pc}
 80058fc:	220c      	movs	r2, #12
 80058fe:	6002      	str	r2, [r0, #0]
 8005900:	e7f9      	b.n	80058f6 <_calloc_r+0x12>
 8005902:	462a      	mov	r2, r5
 8005904:	4621      	mov	r1, r4
 8005906:	f000 fdf1 	bl	80064ec <memset>
 800590a:	e7f5      	b.n	80058f8 <_calloc_r+0x14>

0800590c <__cvt>:
 800590c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8005910:	ec57 6b10 	vmov	r6, r7, d0
 8005914:	2f00      	cmp	r7, #0
 8005916:	460c      	mov	r4, r1
 8005918:	4619      	mov	r1, r3
 800591a:	463b      	mov	r3, r7
 800591c:	bfbb      	ittet	lt
 800591e:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 8005922:	461f      	movlt	r7, r3
 8005924:	2300      	movge	r3, #0
 8005926:	232d      	movlt	r3, #45	@ 0x2d
 8005928:	700b      	strb	r3, [r1, #0]
 800592a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800592c:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 8005930:	4691      	mov	r9, r2
 8005932:	f023 0820 	bic.w	r8, r3, #32
 8005936:	bfbc      	itt	lt
 8005938:	4632      	movlt	r2, r6
 800593a:	4616      	movlt	r6, r2
 800593c:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8005940:	d005      	beq.n	800594e <__cvt+0x42>
 8005942:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8005946:	d100      	bne.n	800594a <__cvt+0x3e>
 8005948:	3401      	adds	r4, #1
 800594a:	2102      	movs	r1, #2
 800594c:	e000      	b.n	8005950 <__cvt+0x44>
 800594e:	2103      	movs	r1, #3
 8005950:	ab03      	add	r3, sp, #12
 8005952:	9301      	str	r3, [sp, #4]
 8005954:	ab02      	add	r3, sp, #8
 8005956:	9300      	str	r3, [sp, #0]
 8005958:	ec47 6b10 	vmov	d0, r6, r7
 800595c:	4653      	mov	r3, sl
 800595e:	4622      	mov	r2, r4
 8005960:	f000 fe96 	bl	8006690 <_dtoa_r>
 8005964:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8005968:	4605      	mov	r5, r0
 800596a:	d119      	bne.n	80059a0 <__cvt+0x94>
 800596c:	f019 0f01 	tst.w	r9, #1
 8005970:	d00e      	beq.n	8005990 <__cvt+0x84>
 8005972:	eb00 0904 	add.w	r9, r0, r4
 8005976:	2200      	movs	r2, #0
 8005978:	2300      	movs	r3, #0
 800597a:	4630      	mov	r0, r6
 800597c:	4639      	mov	r1, r7
 800597e:	f7fb f8c3 	bl	8000b08 <__aeabi_dcmpeq>
 8005982:	b108      	cbz	r0, 8005988 <__cvt+0x7c>
 8005984:	f8cd 900c 	str.w	r9, [sp, #12]
 8005988:	2230      	movs	r2, #48	@ 0x30
 800598a:	9b03      	ldr	r3, [sp, #12]
 800598c:	454b      	cmp	r3, r9
 800598e:	d31e      	bcc.n	80059ce <__cvt+0xc2>
 8005990:	9b03      	ldr	r3, [sp, #12]
 8005992:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8005994:	1b5b      	subs	r3, r3, r5
 8005996:	4628      	mov	r0, r5
 8005998:	6013      	str	r3, [r2, #0]
 800599a:	b004      	add	sp, #16
 800599c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80059a0:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 80059a4:	eb00 0904 	add.w	r9, r0, r4
 80059a8:	d1e5      	bne.n	8005976 <__cvt+0x6a>
 80059aa:	7803      	ldrb	r3, [r0, #0]
 80059ac:	2b30      	cmp	r3, #48	@ 0x30
 80059ae:	d10a      	bne.n	80059c6 <__cvt+0xba>
 80059b0:	2200      	movs	r2, #0
 80059b2:	2300      	movs	r3, #0
 80059b4:	4630      	mov	r0, r6
 80059b6:	4639      	mov	r1, r7
 80059b8:	f7fb f8a6 	bl	8000b08 <__aeabi_dcmpeq>
 80059bc:	b918      	cbnz	r0, 80059c6 <__cvt+0xba>
 80059be:	f1c4 0401 	rsb	r4, r4, #1
 80059c2:	f8ca 4000 	str.w	r4, [sl]
 80059c6:	f8da 3000 	ldr.w	r3, [sl]
 80059ca:	4499      	add	r9, r3
 80059cc:	e7d3      	b.n	8005976 <__cvt+0x6a>
 80059ce:	1c59      	adds	r1, r3, #1
 80059d0:	9103      	str	r1, [sp, #12]
 80059d2:	701a      	strb	r2, [r3, #0]
 80059d4:	e7d9      	b.n	800598a <__cvt+0x7e>

080059d6 <__exponent>:
 80059d6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80059d8:	2900      	cmp	r1, #0
 80059da:	bfba      	itte	lt
 80059dc:	4249      	neglt	r1, r1
 80059de:	232d      	movlt	r3, #45	@ 0x2d
 80059e0:	232b      	movge	r3, #43	@ 0x2b
 80059e2:	2909      	cmp	r1, #9
 80059e4:	7002      	strb	r2, [r0, #0]
 80059e6:	7043      	strb	r3, [r0, #1]
 80059e8:	dd29      	ble.n	8005a3e <__exponent+0x68>
 80059ea:	f10d 0307 	add.w	r3, sp, #7
 80059ee:	461d      	mov	r5, r3
 80059f0:	270a      	movs	r7, #10
 80059f2:	461a      	mov	r2, r3
 80059f4:	fbb1 f6f7 	udiv	r6, r1, r7
 80059f8:	fb07 1416 	mls	r4, r7, r6, r1
 80059fc:	3430      	adds	r4, #48	@ 0x30
 80059fe:	f802 4c01 	strb.w	r4, [r2, #-1]
 8005a02:	460c      	mov	r4, r1
 8005a04:	2c63      	cmp	r4, #99	@ 0x63
 8005a06:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
 8005a0a:	4631      	mov	r1, r6
 8005a0c:	dcf1      	bgt.n	80059f2 <__exponent+0x1c>
 8005a0e:	3130      	adds	r1, #48	@ 0x30
 8005a10:	1e94      	subs	r4, r2, #2
 8005a12:	f803 1c01 	strb.w	r1, [r3, #-1]
 8005a16:	1c41      	adds	r1, r0, #1
 8005a18:	4623      	mov	r3, r4
 8005a1a:	42ab      	cmp	r3, r5
 8005a1c:	d30a      	bcc.n	8005a34 <__exponent+0x5e>
 8005a1e:	f10d 0309 	add.w	r3, sp, #9
 8005a22:	1a9b      	subs	r3, r3, r2
 8005a24:	42ac      	cmp	r4, r5
 8005a26:	bf88      	it	hi
 8005a28:	2300      	movhi	r3, #0
 8005a2a:	3302      	adds	r3, #2
 8005a2c:	4403      	add	r3, r0
 8005a2e:	1a18      	subs	r0, r3, r0
 8005a30:	b003      	add	sp, #12
 8005a32:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005a34:	f813 6b01 	ldrb.w	r6, [r3], #1
 8005a38:	f801 6f01 	strb.w	r6, [r1, #1]!
 8005a3c:	e7ed      	b.n	8005a1a <__exponent+0x44>
 8005a3e:	2330      	movs	r3, #48	@ 0x30
 8005a40:	3130      	adds	r1, #48	@ 0x30
 8005a42:	7083      	strb	r3, [r0, #2]
 8005a44:	70c1      	strb	r1, [r0, #3]
 8005a46:	1d03      	adds	r3, r0, #4
 8005a48:	e7f1      	b.n	8005a2e <__exponent+0x58>
	...

08005a4c <_printf_float>:
 8005a4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005a50:	b08d      	sub	sp, #52	@ 0x34
 8005a52:	460c      	mov	r4, r1
 8005a54:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8005a58:	4616      	mov	r6, r2
 8005a5a:	461f      	mov	r7, r3
 8005a5c:	4605      	mov	r5, r0
 8005a5e:	f000 fd4d 	bl	80064fc <_localeconv_r>
 8005a62:	6803      	ldr	r3, [r0, #0]
 8005a64:	9304      	str	r3, [sp, #16]
 8005a66:	4618      	mov	r0, r3
 8005a68:	f7fa fc22 	bl	80002b0 <strlen>
 8005a6c:	2300      	movs	r3, #0
 8005a6e:	930a      	str	r3, [sp, #40]	@ 0x28
 8005a70:	f8d8 3000 	ldr.w	r3, [r8]
 8005a74:	9005      	str	r0, [sp, #20]
 8005a76:	3307      	adds	r3, #7
 8005a78:	f023 0307 	bic.w	r3, r3, #7
 8005a7c:	f103 0208 	add.w	r2, r3, #8
 8005a80:	f894 a018 	ldrb.w	sl, [r4, #24]
 8005a84:	f8d4 b000 	ldr.w	fp, [r4]
 8005a88:	f8c8 2000 	str.w	r2, [r8]
 8005a8c:	e9d3 8900 	ldrd	r8, r9, [r3]
 8005a90:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8005a94:	9307      	str	r3, [sp, #28]
 8005a96:	f8cd 8018 	str.w	r8, [sp, #24]
 8005a9a:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 8005a9e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8005aa2:	4b9c      	ldr	r3, [pc, #624]	@ (8005d14 <_printf_float+0x2c8>)
 8005aa4:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8005aa8:	f7fb f860 	bl	8000b6c <__aeabi_dcmpun>
 8005aac:	bb70      	cbnz	r0, 8005b0c <_printf_float+0xc0>
 8005aae:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8005ab2:	4b98      	ldr	r3, [pc, #608]	@ (8005d14 <_printf_float+0x2c8>)
 8005ab4:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8005ab8:	f7fb f83a 	bl	8000b30 <__aeabi_dcmple>
 8005abc:	bb30      	cbnz	r0, 8005b0c <_printf_float+0xc0>
 8005abe:	2200      	movs	r2, #0
 8005ac0:	2300      	movs	r3, #0
 8005ac2:	4640      	mov	r0, r8
 8005ac4:	4649      	mov	r1, r9
 8005ac6:	f7fb f829 	bl	8000b1c <__aeabi_dcmplt>
 8005aca:	b110      	cbz	r0, 8005ad2 <_printf_float+0x86>
 8005acc:	232d      	movs	r3, #45	@ 0x2d
 8005ace:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8005ad2:	4a91      	ldr	r2, [pc, #580]	@ (8005d18 <_printf_float+0x2cc>)
 8005ad4:	4b91      	ldr	r3, [pc, #580]	@ (8005d1c <_printf_float+0x2d0>)
 8005ad6:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8005ada:	bf94      	ite	ls
 8005adc:	4690      	movls	r8, r2
 8005ade:	4698      	movhi	r8, r3
 8005ae0:	2303      	movs	r3, #3
 8005ae2:	6123      	str	r3, [r4, #16]
 8005ae4:	f02b 0304 	bic.w	r3, fp, #4
 8005ae8:	6023      	str	r3, [r4, #0]
 8005aea:	f04f 0900 	mov.w	r9, #0
 8005aee:	9700      	str	r7, [sp, #0]
 8005af0:	4633      	mov	r3, r6
 8005af2:	aa0b      	add	r2, sp, #44	@ 0x2c
 8005af4:	4621      	mov	r1, r4
 8005af6:	4628      	mov	r0, r5
 8005af8:	f000 fa7c 	bl	8005ff4 <_printf_common>
 8005afc:	3001      	adds	r0, #1
 8005afe:	f040 808d 	bne.w	8005c1c <_printf_float+0x1d0>
 8005b02:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8005b06:	b00d      	add	sp, #52	@ 0x34
 8005b08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005b0c:	4642      	mov	r2, r8
 8005b0e:	464b      	mov	r3, r9
 8005b10:	4640      	mov	r0, r8
 8005b12:	4649      	mov	r1, r9
 8005b14:	f7fb f82a 	bl	8000b6c <__aeabi_dcmpun>
 8005b18:	b140      	cbz	r0, 8005b2c <_printf_float+0xe0>
 8005b1a:	464b      	mov	r3, r9
 8005b1c:	2b00      	cmp	r3, #0
 8005b1e:	bfbc      	itt	lt
 8005b20:	232d      	movlt	r3, #45	@ 0x2d
 8005b22:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 8005b26:	4a7e      	ldr	r2, [pc, #504]	@ (8005d20 <_printf_float+0x2d4>)
 8005b28:	4b7e      	ldr	r3, [pc, #504]	@ (8005d24 <_printf_float+0x2d8>)
 8005b2a:	e7d4      	b.n	8005ad6 <_printf_float+0x8a>
 8005b2c:	6863      	ldr	r3, [r4, #4]
 8005b2e:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 8005b32:	9206      	str	r2, [sp, #24]
 8005b34:	1c5a      	adds	r2, r3, #1
 8005b36:	d13b      	bne.n	8005bb0 <_printf_float+0x164>
 8005b38:	2306      	movs	r3, #6
 8005b3a:	6063      	str	r3, [r4, #4]
 8005b3c:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 8005b40:	2300      	movs	r3, #0
 8005b42:	6022      	str	r2, [r4, #0]
 8005b44:	9303      	str	r3, [sp, #12]
 8005b46:	ab0a      	add	r3, sp, #40	@ 0x28
 8005b48:	e9cd a301 	strd	sl, r3, [sp, #4]
 8005b4c:	ab09      	add	r3, sp, #36	@ 0x24
 8005b4e:	9300      	str	r3, [sp, #0]
 8005b50:	6861      	ldr	r1, [r4, #4]
 8005b52:	ec49 8b10 	vmov	d0, r8, r9
 8005b56:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 8005b5a:	4628      	mov	r0, r5
 8005b5c:	f7ff fed6 	bl	800590c <__cvt>
 8005b60:	9b06      	ldr	r3, [sp, #24]
 8005b62:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8005b64:	2b47      	cmp	r3, #71	@ 0x47
 8005b66:	4680      	mov	r8, r0
 8005b68:	d129      	bne.n	8005bbe <_printf_float+0x172>
 8005b6a:	1cc8      	adds	r0, r1, #3
 8005b6c:	db02      	blt.n	8005b74 <_printf_float+0x128>
 8005b6e:	6863      	ldr	r3, [r4, #4]
 8005b70:	4299      	cmp	r1, r3
 8005b72:	dd41      	ble.n	8005bf8 <_printf_float+0x1ac>
 8005b74:	f1aa 0a02 	sub.w	sl, sl, #2
 8005b78:	fa5f fa8a 	uxtb.w	sl, sl
 8005b7c:	3901      	subs	r1, #1
 8005b7e:	4652      	mov	r2, sl
 8005b80:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8005b84:	9109      	str	r1, [sp, #36]	@ 0x24
 8005b86:	f7ff ff26 	bl	80059d6 <__exponent>
 8005b8a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8005b8c:	1813      	adds	r3, r2, r0
 8005b8e:	2a01      	cmp	r2, #1
 8005b90:	4681      	mov	r9, r0
 8005b92:	6123      	str	r3, [r4, #16]
 8005b94:	dc02      	bgt.n	8005b9c <_printf_float+0x150>
 8005b96:	6822      	ldr	r2, [r4, #0]
 8005b98:	07d2      	lsls	r2, r2, #31
 8005b9a:	d501      	bpl.n	8005ba0 <_printf_float+0x154>
 8005b9c:	3301      	adds	r3, #1
 8005b9e:	6123      	str	r3, [r4, #16]
 8005ba0:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 8005ba4:	2b00      	cmp	r3, #0
 8005ba6:	d0a2      	beq.n	8005aee <_printf_float+0xa2>
 8005ba8:	232d      	movs	r3, #45	@ 0x2d
 8005baa:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8005bae:	e79e      	b.n	8005aee <_printf_float+0xa2>
 8005bb0:	9a06      	ldr	r2, [sp, #24]
 8005bb2:	2a47      	cmp	r2, #71	@ 0x47
 8005bb4:	d1c2      	bne.n	8005b3c <_printf_float+0xf0>
 8005bb6:	2b00      	cmp	r3, #0
 8005bb8:	d1c0      	bne.n	8005b3c <_printf_float+0xf0>
 8005bba:	2301      	movs	r3, #1
 8005bbc:	e7bd      	b.n	8005b3a <_printf_float+0xee>
 8005bbe:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8005bc2:	d9db      	bls.n	8005b7c <_printf_float+0x130>
 8005bc4:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8005bc8:	d118      	bne.n	8005bfc <_printf_float+0x1b0>
 8005bca:	2900      	cmp	r1, #0
 8005bcc:	6863      	ldr	r3, [r4, #4]
 8005bce:	dd0b      	ble.n	8005be8 <_printf_float+0x19c>
 8005bd0:	6121      	str	r1, [r4, #16]
 8005bd2:	b913      	cbnz	r3, 8005bda <_printf_float+0x18e>
 8005bd4:	6822      	ldr	r2, [r4, #0]
 8005bd6:	07d0      	lsls	r0, r2, #31
 8005bd8:	d502      	bpl.n	8005be0 <_printf_float+0x194>
 8005bda:	3301      	adds	r3, #1
 8005bdc:	440b      	add	r3, r1
 8005bde:	6123      	str	r3, [r4, #16]
 8005be0:	65a1      	str	r1, [r4, #88]	@ 0x58
 8005be2:	f04f 0900 	mov.w	r9, #0
 8005be6:	e7db      	b.n	8005ba0 <_printf_float+0x154>
 8005be8:	b913      	cbnz	r3, 8005bf0 <_printf_float+0x1a4>
 8005bea:	6822      	ldr	r2, [r4, #0]
 8005bec:	07d2      	lsls	r2, r2, #31
 8005bee:	d501      	bpl.n	8005bf4 <_printf_float+0x1a8>
 8005bf0:	3302      	adds	r3, #2
 8005bf2:	e7f4      	b.n	8005bde <_printf_float+0x192>
 8005bf4:	2301      	movs	r3, #1
 8005bf6:	e7f2      	b.n	8005bde <_printf_float+0x192>
 8005bf8:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 8005bfc:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8005bfe:	4299      	cmp	r1, r3
 8005c00:	db05      	blt.n	8005c0e <_printf_float+0x1c2>
 8005c02:	6823      	ldr	r3, [r4, #0]
 8005c04:	6121      	str	r1, [r4, #16]
 8005c06:	07d8      	lsls	r0, r3, #31
 8005c08:	d5ea      	bpl.n	8005be0 <_printf_float+0x194>
 8005c0a:	1c4b      	adds	r3, r1, #1
 8005c0c:	e7e7      	b.n	8005bde <_printf_float+0x192>
 8005c0e:	2900      	cmp	r1, #0
 8005c10:	bfd4      	ite	le
 8005c12:	f1c1 0202 	rsble	r2, r1, #2
 8005c16:	2201      	movgt	r2, #1
 8005c18:	4413      	add	r3, r2
 8005c1a:	e7e0      	b.n	8005bde <_printf_float+0x192>
 8005c1c:	6823      	ldr	r3, [r4, #0]
 8005c1e:	055a      	lsls	r2, r3, #21
 8005c20:	d407      	bmi.n	8005c32 <_printf_float+0x1e6>
 8005c22:	6923      	ldr	r3, [r4, #16]
 8005c24:	4642      	mov	r2, r8
 8005c26:	4631      	mov	r1, r6
 8005c28:	4628      	mov	r0, r5
 8005c2a:	47b8      	blx	r7
 8005c2c:	3001      	adds	r0, #1
 8005c2e:	d12b      	bne.n	8005c88 <_printf_float+0x23c>
 8005c30:	e767      	b.n	8005b02 <_printf_float+0xb6>
 8005c32:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8005c36:	f240 80dd 	bls.w	8005df4 <_printf_float+0x3a8>
 8005c3a:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8005c3e:	2200      	movs	r2, #0
 8005c40:	2300      	movs	r3, #0
 8005c42:	f7fa ff61 	bl	8000b08 <__aeabi_dcmpeq>
 8005c46:	2800      	cmp	r0, #0
 8005c48:	d033      	beq.n	8005cb2 <_printf_float+0x266>
 8005c4a:	4a37      	ldr	r2, [pc, #220]	@ (8005d28 <_printf_float+0x2dc>)
 8005c4c:	2301      	movs	r3, #1
 8005c4e:	4631      	mov	r1, r6
 8005c50:	4628      	mov	r0, r5
 8005c52:	47b8      	blx	r7
 8005c54:	3001      	adds	r0, #1
 8005c56:	f43f af54 	beq.w	8005b02 <_printf_float+0xb6>
 8005c5a:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 8005c5e:	4543      	cmp	r3, r8
 8005c60:	db02      	blt.n	8005c68 <_printf_float+0x21c>
 8005c62:	6823      	ldr	r3, [r4, #0]
 8005c64:	07d8      	lsls	r0, r3, #31
 8005c66:	d50f      	bpl.n	8005c88 <_printf_float+0x23c>
 8005c68:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8005c6c:	4631      	mov	r1, r6
 8005c6e:	4628      	mov	r0, r5
 8005c70:	47b8      	blx	r7
 8005c72:	3001      	adds	r0, #1
 8005c74:	f43f af45 	beq.w	8005b02 <_printf_float+0xb6>
 8005c78:	f04f 0900 	mov.w	r9, #0
 8005c7c:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
 8005c80:	f104 0a1a 	add.w	sl, r4, #26
 8005c84:	45c8      	cmp	r8, r9
 8005c86:	dc09      	bgt.n	8005c9c <_printf_float+0x250>
 8005c88:	6823      	ldr	r3, [r4, #0]
 8005c8a:	079b      	lsls	r3, r3, #30
 8005c8c:	f100 8103 	bmi.w	8005e96 <_printf_float+0x44a>
 8005c90:	68e0      	ldr	r0, [r4, #12]
 8005c92:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8005c94:	4298      	cmp	r0, r3
 8005c96:	bfb8      	it	lt
 8005c98:	4618      	movlt	r0, r3
 8005c9a:	e734      	b.n	8005b06 <_printf_float+0xba>
 8005c9c:	2301      	movs	r3, #1
 8005c9e:	4652      	mov	r2, sl
 8005ca0:	4631      	mov	r1, r6
 8005ca2:	4628      	mov	r0, r5
 8005ca4:	47b8      	blx	r7
 8005ca6:	3001      	adds	r0, #1
 8005ca8:	f43f af2b 	beq.w	8005b02 <_printf_float+0xb6>
 8005cac:	f109 0901 	add.w	r9, r9, #1
 8005cb0:	e7e8      	b.n	8005c84 <_printf_float+0x238>
 8005cb2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005cb4:	2b00      	cmp	r3, #0
 8005cb6:	dc39      	bgt.n	8005d2c <_printf_float+0x2e0>
 8005cb8:	4a1b      	ldr	r2, [pc, #108]	@ (8005d28 <_printf_float+0x2dc>)
 8005cba:	2301      	movs	r3, #1
 8005cbc:	4631      	mov	r1, r6
 8005cbe:	4628      	mov	r0, r5
 8005cc0:	47b8      	blx	r7
 8005cc2:	3001      	adds	r0, #1
 8005cc4:	f43f af1d 	beq.w	8005b02 <_printf_float+0xb6>
 8005cc8:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 8005ccc:	ea59 0303 	orrs.w	r3, r9, r3
 8005cd0:	d102      	bne.n	8005cd8 <_printf_float+0x28c>
 8005cd2:	6823      	ldr	r3, [r4, #0]
 8005cd4:	07d9      	lsls	r1, r3, #31
 8005cd6:	d5d7      	bpl.n	8005c88 <_printf_float+0x23c>
 8005cd8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8005cdc:	4631      	mov	r1, r6
 8005cde:	4628      	mov	r0, r5
 8005ce0:	47b8      	blx	r7
 8005ce2:	3001      	adds	r0, #1
 8005ce4:	f43f af0d 	beq.w	8005b02 <_printf_float+0xb6>
 8005ce8:	f04f 0a00 	mov.w	sl, #0
 8005cec:	f104 0b1a 	add.w	fp, r4, #26
 8005cf0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005cf2:	425b      	negs	r3, r3
 8005cf4:	4553      	cmp	r3, sl
 8005cf6:	dc01      	bgt.n	8005cfc <_printf_float+0x2b0>
 8005cf8:	464b      	mov	r3, r9
 8005cfa:	e793      	b.n	8005c24 <_printf_float+0x1d8>
 8005cfc:	2301      	movs	r3, #1
 8005cfe:	465a      	mov	r2, fp
 8005d00:	4631      	mov	r1, r6
 8005d02:	4628      	mov	r0, r5
 8005d04:	47b8      	blx	r7
 8005d06:	3001      	adds	r0, #1
 8005d08:	f43f aefb 	beq.w	8005b02 <_printf_float+0xb6>
 8005d0c:	f10a 0a01 	add.w	sl, sl, #1
 8005d10:	e7ee      	b.n	8005cf0 <_printf_float+0x2a4>
 8005d12:	bf00      	nop
 8005d14:	7fefffff 	.word	0x7fefffff
 8005d18:	08008718 	.word	0x08008718
 8005d1c:	0800871c 	.word	0x0800871c
 8005d20:	08008720 	.word	0x08008720
 8005d24:	08008724 	.word	0x08008724
 8005d28:	08008728 	.word	0x08008728
 8005d2c:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8005d2e:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8005d32:	4553      	cmp	r3, sl
 8005d34:	bfa8      	it	ge
 8005d36:	4653      	movge	r3, sl
 8005d38:	2b00      	cmp	r3, #0
 8005d3a:	4699      	mov	r9, r3
 8005d3c:	dc36      	bgt.n	8005dac <_printf_float+0x360>
 8005d3e:	f04f 0b00 	mov.w	fp, #0
 8005d42:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8005d46:	f104 021a 	add.w	r2, r4, #26
 8005d4a:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8005d4c:	9306      	str	r3, [sp, #24]
 8005d4e:	eba3 0309 	sub.w	r3, r3, r9
 8005d52:	455b      	cmp	r3, fp
 8005d54:	dc31      	bgt.n	8005dba <_printf_float+0x36e>
 8005d56:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005d58:	459a      	cmp	sl, r3
 8005d5a:	dc3a      	bgt.n	8005dd2 <_printf_float+0x386>
 8005d5c:	6823      	ldr	r3, [r4, #0]
 8005d5e:	07da      	lsls	r2, r3, #31
 8005d60:	d437      	bmi.n	8005dd2 <_printf_float+0x386>
 8005d62:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005d64:	ebaa 0903 	sub.w	r9, sl, r3
 8005d68:	9b06      	ldr	r3, [sp, #24]
 8005d6a:	ebaa 0303 	sub.w	r3, sl, r3
 8005d6e:	4599      	cmp	r9, r3
 8005d70:	bfa8      	it	ge
 8005d72:	4699      	movge	r9, r3
 8005d74:	f1b9 0f00 	cmp.w	r9, #0
 8005d78:	dc33      	bgt.n	8005de2 <_printf_float+0x396>
 8005d7a:	f04f 0800 	mov.w	r8, #0
 8005d7e:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8005d82:	f104 0b1a 	add.w	fp, r4, #26
 8005d86:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005d88:	ebaa 0303 	sub.w	r3, sl, r3
 8005d8c:	eba3 0309 	sub.w	r3, r3, r9
 8005d90:	4543      	cmp	r3, r8
 8005d92:	f77f af79 	ble.w	8005c88 <_printf_float+0x23c>
 8005d96:	2301      	movs	r3, #1
 8005d98:	465a      	mov	r2, fp
 8005d9a:	4631      	mov	r1, r6
 8005d9c:	4628      	mov	r0, r5
 8005d9e:	47b8      	blx	r7
 8005da0:	3001      	adds	r0, #1
 8005da2:	f43f aeae 	beq.w	8005b02 <_printf_float+0xb6>
 8005da6:	f108 0801 	add.w	r8, r8, #1
 8005daa:	e7ec      	b.n	8005d86 <_printf_float+0x33a>
 8005dac:	4642      	mov	r2, r8
 8005dae:	4631      	mov	r1, r6
 8005db0:	4628      	mov	r0, r5
 8005db2:	47b8      	blx	r7
 8005db4:	3001      	adds	r0, #1
 8005db6:	d1c2      	bne.n	8005d3e <_printf_float+0x2f2>
 8005db8:	e6a3      	b.n	8005b02 <_printf_float+0xb6>
 8005dba:	2301      	movs	r3, #1
 8005dbc:	4631      	mov	r1, r6
 8005dbe:	4628      	mov	r0, r5
 8005dc0:	9206      	str	r2, [sp, #24]
 8005dc2:	47b8      	blx	r7
 8005dc4:	3001      	adds	r0, #1
 8005dc6:	f43f ae9c 	beq.w	8005b02 <_printf_float+0xb6>
 8005dca:	9a06      	ldr	r2, [sp, #24]
 8005dcc:	f10b 0b01 	add.w	fp, fp, #1
 8005dd0:	e7bb      	b.n	8005d4a <_printf_float+0x2fe>
 8005dd2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8005dd6:	4631      	mov	r1, r6
 8005dd8:	4628      	mov	r0, r5
 8005dda:	47b8      	blx	r7
 8005ddc:	3001      	adds	r0, #1
 8005dde:	d1c0      	bne.n	8005d62 <_printf_float+0x316>
 8005de0:	e68f      	b.n	8005b02 <_printf_float+0xb6>
 8005de2:	9a06      	ldr	r2, [sp, #24]
 8005de4:	464b      	mov	r3, r9
 8005de6:	4442      	add	r2, r8
 8005de8:	4631      	mov	r1, r6
 8005dea:	4628      	mov	r0, r5
 8005dec:	47b8      	blx	r7
 8005dee:	3001      	adds	r0, #1
 8005df0:	d1c3      	bne.n	8005d7a <_printf_float+0x32e>
 8005df2:	e686      	b.n	8005b02 <_printf_float+0xb6>
 8005df4:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 8005df8:	f1ba 0f01 	cmp.w	sl, #1
 8005dfc:	dc01      	bgt.n	8005e02 <_printf_float+0x3b6>
 8005dfe:	07db      	lsls	r3, r3, #31
 8005e00:	d536      	bpl.n	8005e70 <_printf_float+0x424>
 8005e02:	2301      	movs	r3, #1
 8005e04:	4642      	mov	r2, r8
 8005e06:	4631      	mov	r1, r6
 8005e08:	4628      	mov	r0, r5
 8005e0a:	47b8      	blx	r7
 8005e0c:	3001      	adds	r0, #1
 8005e0e:	f43f ae78 	beq.w	8005b02 <_printf_float+0xb6>
 8005e12:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8005e16:	4631      	mov	r1, r6
 8005e18:	4628      	mov	r0, r5
 8005e1a:	47b8      	blx	r7
 8005e1c:	3001      	adds	r0, #1
 8005e1e:	f43f ae70 	beq.w	8005b02 <_printf_float+0xb6>
 8005e22:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8005e26:	2200      	movs	r2, #0
 8005e28:	2300      	movs	r3, #0
 8005e2a:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
 8005e2e:	f7fa fe6b 	bl	8000b08 <__aeabi_dcmpeq>
 8005e32:	b9c0      	cbnz	r0, 8005e66 <_printf_float+0x41a>
 8005e34:	4653      	mov	r3, sl
 8005e36:	f108 0201 	add.w	r2, r8, #1
 8005e3a:	4631      	mov	r1, r6
 8005e3c:	4628      	mov	r0, r5
 8005e3e:	47b8      	blx	r7
 8005e40:	3001      	adds	r0, #1
 8005e42:	d10c      	bne.n	8005e5e <_printf_float+0x412>
 8005e44:	e65d      	b.n	8005b02 <_printf_float+0xb6>
 8005e46:	2301      	movs	r3, #1
 8005e48:	465a      	mov	r2, fp
 8005e4a:	4631      	mov	r1, r6
 8005e4c:	4628      	mov	r0, r5
 8005e4e:	47b8      	blx	r7
 8005e50:	3001      	adds	r0, #1
 8005e52:	f43f ae56 	beq.w	8005b02 <_printf_float+0xb6>
 8005e56:	f108 0801 	add.w	r8, r8, #1
 8005e5a:	45d0      	cmp	r8, sl
 8005e5c:	dbf3      	blt.n	8005e46 <_printf_float+0x3fa>
 8005e5e:	464b      	mov	r3, r9
 8005e60:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8005e64:	e6df      	b.n	8005c26 <_printf_float+0x1da>
 8005e66:	f04f 0800 	mov.w	r8, #0
 8005e6a:	f104 0b1a 	add.w	fp, r4, #26
 8005e6e:	e7f4      	b.n	8005e5a <_printf_float+0x40e>
 8005e70:	2301      	movs	r3, #1
 8005e72:	4642      	mov	r2, r8
 8005e74:	e7e1      	b.n	8005e3a <_printf_float+0x3ee>
 8005e76:	2301      	movs	r3, #1
 8005e78:	464a      	mov	r2, r9
 8005e7a:	4631      	mov	r1, r6
 8005e7c:	4628      	mov	r0, r5
 8005e7e:	47b8      	blx	r7
 8005e80:	3001      	adds	r0, #1
 8005e82:	f43f ae3e 	beq.w	8005b02 <_printf_float+0xb6>
 8005e86:	f108 0801 	add.w	r8, r8, #1
 8005e8a:	68e3      	ldr	r3, [r4, #12]
 8005e8c:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8005e8e:	1a5b      	subs	r3, r3, r1
 8005e90:	4543      	cmp	r3, r8
 8005e92:	dcf0      	bgt.n	8005e76 <_printf_float+0x42a>
 8005e94:	e6fc      	b.n	8005c90 <_printf_float+0x244>
 8005e96:	f04f 0800 	mov.w	r8, #0
 8005e9a:	f104 0919 	add.w	r9, r4, #25
 8005e9e:	e7f4      	b.n	8005e8a <_printf_float+0x43e>

08005ea0 <malloc>:
 8005ea0:	4b02      	ldr	r3, [pc, #8]	@ (8005eac <malloc+0xc>)
 8005ea2:	4601      	mov	r1, r0
 8005ea4:	6818      	ldr	r0, [r3, #0]
 8005ea6:	f000 b825 	b.w	8005ef4 <_malloc_r>
 8005eaa:	bf00      	nop
 8005eac:	20000018 	.word	0x20000018

08005eb0 <sbrk_aligned>:
 8005eb0:	b570      	push	{r4, r5, r6, lr}
 8005eb2:	4e0f      	ldr	r6, [pc, #60]	@ (8005ef0 <sbrk_aligned+0x40>)
 8005eb4:	460c      	mov	r4, r1
 8005eb6:	6831      	ldr	r1, [r6, #0]
 8005eb8:	4605      	mov	r5, r0
 8005eba:	b911      	cbnz	r1, 8005ec2 <sbrk_aligned+0x12>
 8005ebc:	f000 fb22 	bl	8006504 <_sbrk_r>
 8005ec0:	6030      	str	r0, [r6, #0]
 8005ec2:	4621      	mov	r1, r4
 8005ec4:	4628      	mov	r0, r5
 8005ec6:	f000 fb1d 	bl	8006504 <_sbrk_r>
 8005eca:	1c43      	adds	r3, r0, #1
 8005ecc:	d103      	bne.n	8005ed6 <sbrk_aligned+0x26>
 8005ece:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 8005ed2:	4620      	mov	r0, r4
 8005ed4:	bd70      	pop	{r4, r5, r6, pc}
 8005ed6:	1cc4      	adds	r4, r0, #3
 8005ed8:	f024 0403 	bic.w	r4, r4, #3
 8005edc:	42a0      	cmp	r0, r4
 8005ede:	d0f8      	beq.n	8005ed2 <sbrk_aligned+0x22>
 8005ee0:	1a21      	subs	r1, r4, r0
 8005ee2:	4628      	mov	r0, r5
 8005ee4:	f000 fb0e 	bl	8006504 <_sbrk_r>
 8005ee8:	3001      	adds	r0, #1
 8005eea:	d1f2      	bne.n	8005ed2 <sbrk_aligned+0x22>
 8005eec:	e7ef      	b.n	8005ece <sbrk_aligned+0x1e>
 8005eee:	bf00      	nop
 8005ef0:	20000370 	.word	0x20000370

08005ef4 <_malloc_r>:
 8005ef4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005ef8:	1ccd      	adds	r5, r1, #3
 8005efa:	f025 0503 	bic.w	r5, r5, #3
 8005efe:	3508      	adds	r5, #8
 8005f00:	2d0c      	cmp	r5, #12
 8005f02:	bf38      	it	cc
 8005f04:	250c      	movcc	r5, #12
 8005f06:	2d00      	cmp	r5, #0
 8005f08:	4606      	mov	r6, r0
 8005f0a:	db01      	blt.n	8005f10 <_malloc_r+0x1c>
 8005f0c:	42a9      	cmp	r1, r5
 8005f0e:	d904      	bls.n	8005f1a <_malloc_r+0x26>
 8005f10:	230c      	movs	r3, #12
 8005f12:	6033      	str	r3, [r6, #0]
 8005f14:	2000      	movs	r0, #0
 8005f16:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005f1a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8005ff0 <_malloc_r+0xfc>
 8005f1e:	f000 f9f7 	bl	8006310 <__malloc_lock>
 8005f22:	f8d8 3000 	ldr.w	r3, [r8]
 8005f26:	461c      	mov	r4, r3
 8005f28:	bb44      	cbnz	r4, 8005f7c <_malloc_r+0x88>
 8005f2a:	4629      	mov	r1, r5
 8005f2c:	4630      	mov	r0, r6
 8005f2e:	f7ff ffbf 	bl	8005eb0 <sbrk_aligned>
 8005f32:	1c43      	adds	r3, r0, #1
 8005f34:	4604      	mov	r4, r0
 8005f36:	d158      	bne.n	8005fea <_malloc_r+0xf6>
 8005f38:	f8d8 4000 	ldr.w	r4, [r8]
 8005f3c:	4627      	mov	r7, r4
 8005f3e:	2f00      	cmp	r7, #0
 8005f40:	d143      	bne.n	8005fca <_malloc_r+0xd6>
 8005f42:	2c00      	cmp	r4, #0
 8005f44:	d04b      	beq.n	8005fde <_malloc_r+0xea>
 8005f46:	6823      	ldr	r3, [r4, #0]
 8005f48:	4639      	mov	r1, r7
 8005f4a:	4630      	mov	r0, r6
 8005f4c:	eb04 0903 	add.w	r9, r4, r3
 8005f50:	f000 fad8 	bl	8006504 <_sbrk_r>
 8005f54:	4581      	cmp	r9, r0
 8005f56:	d142      	bne.n	8005fde <_malloc_r+0xea>
 8005f58:	6821      	ldr	r1, [r4, #0]
 8005f5a:	1a6d      	subs	r5, r5, r1
 8005f5c:	4629      	mov	r1, r5
 8005f5e:	4630      	mov	r0, r6
 8005f60:	f7ff ffa6 	bl	8005eb0 <sbrk_aligned>
 8005f64:	3001      	adds	r0, #1
 8005f66:	d03a      	beq.n	8005fde <_malloc_r+0xea>
 8005f68:	6823      	ldr	r3, [r4, #0]
 8005f6a:	442b      	add	r3, r5
 8005f6c:	6023      	str	r3, [r4, #0]
 8005f6e:	f8d8 3000 	ldr.w	r3, [r8]
 8005f72:	685a      	ldr	r2, [r3, #4]
 8005f74:	bb62      	cbnz	r2, 8005fd0 <_malloc_r+0xdc>
 8005f76:	f8c8 7000 	str.w	r7, [r8]
 8005f7a:	e00f      	b.n	8005f9c <_malloc_r+0xa8>
 8005f7c:	6822      	ldr	r2, [r4, #0]
 8005f7e:	1b52      	subs	r2, r2, r5
 8005f80:	d420      	bmi.n	8005fc4 <_malloc_r+0xd0>
 8005f82:	2a0b      	cmp	r2, #11
 8005f84:	d917      	bls.n	8005fb6 <_malloc_r+0xc2>
 8005f86:	1961      	adds	r1, r4, r5
 8005f88:	42a3      	cmp	r3, r4
 8005f8a:	6025      	str	r5, [r4, #0]
 8005f8c:	bf18      	it	ne
 8005f8e:	6059      	strne	r1, [r3, #4]
 8005f90:	6863      	ldr	r3, [r4, #4]
 8005f92:	bf08      	it	eq
 8005f94:	f8c8 1000 	streq.w	r1, [r8]
 8005f98:	5162      	str	r2, [r4, r5]
 8005f9a:	604b      	str	r3, [r1, #4]
 8005f9c:	4630      	mov	r0, r6
 8005f9e:	f000 f9bd 	bl	800631c <__malloc_unlock>
 8005fa2:	f104 000b 	add.w	r0, r4, #11
 8005fa6:	1d23      	adds	r3, r4, #4
 8005fa8:	f020 0007 	bic.w	r0, r0, #7
 8005fac:	1ac2      	subs	r2, r0, r3
 8005fae:	bf1c      	itt	ne
 8005fb0:	1a1b      	subne	r3, r3, r0
 8005fb2:	50a3      	strne	r3, [r4, r2]
 8005fb4:	e7af      	b.n	8005f16 <_malloc_r+0x22>
 8005fb6:	6862      	ldr	r2, [r4, #4]
 8005fb8:	42a3      	cmp	r3, r4
 8005fba:	bf0c      	ite	eq
 8005fbc:	f8c8 2000 	streq.w	r2, [r8]
 8005fc0:	605a      	strne	r2, [r3, #4]
 8005fc2:	e7eb      	b.n	8005f9c <_malloc_r+0xa8>
 8005fc4:	4623      	mov	r3, r4
 8005fc6:	6864      	ldr	r4, [r4, #4]
 8005fc8:	e7ae      	b.n	8005f28 <_malloc_r+0x34>
 8005fca:	463c      	mov	r4, r7
 8005fcc:	687f      	ldr	r7, [r7, #4]
 8005fce:	e7b6      	b.n	8005f3e <_malloc_r+0x4a>
 8005fd0:	461a      	mov	r2, r3
 8005fd2:	685b      	ldr	r3, [r3, #4]
 8005fd4:	42a3      	cmp	r3, r4
 8005fd6:	d1fb      	bne.n	8005fd0 <_malloc_r+0xdc>
 8005fd8:	2300      	movs	r3, #0
 8005fda:	6053      	str	r3, [r2, #4]
 8005fdc:	e7de      	b.n	8005f9c <_malloc_r+0xa8>
 8005fde:	230c      	movs	r3, #12
 8005fe0:	6033      	str	r3, [r6, #0]
 8005fe2:	4630      	mov	r0, r6
 8005fe4:	f000 f99a 	bl	800631c <__malloc_unlock>
 8005fe8:	e794      	b.n	8005f14 <_malloc_r+0x20>
 8005fea:	6005      	str	r5, [r0, #0]
 8005fec:	e7d6      	b.n	8005f9c <_malloc_r+0xa8>
 8005fee:	bf00      	nop
 8005ff0:	20000374 	.word	0x20000374

08005ff4 <_printf_common>:
 8005ff4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005ff8:	4616      	mov	r6, r2
 8005ffa:	4698      	mov	r8, r3
 8005ffc:	688a      	ldr	r2, [r1, #8]
 8005ffe:	690b      	ldr	r3, [r1, #16]
 8006000:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8006004:	4293      	cmp	r3, r2
 8006006:	bfb8      	it	lt
 8006008:	4613      	movlt	r3, r2
 800600a:	6033      	str	r3, [r6, #0]
 800600c:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8006010:	4607      	mov	r7, r0
 8006012:	460c      	mov	r4, r1
 8006014:	b10a      	cbz	r2, 800601a <_printf_common+0x26>
 8006016:	3301      	adds	r3, #1
 8006018:	6033      	str	r3, [r6, #0]
 800601a:	6823      	ldr	r3, [r4, #0]
 800601c:	0699      	lsls	r1, r3, #26
 800601e:	bf42      	ittt	mi
 8006020:	6833      	ldrmi	r3, [r6, #0]
 8006022:	3302      	addmi	r3, #2
 8006024:	6033      	strmi	r3, [r6, #0]
 8006026:	6825      	ldr	r5, [r4, #0]
 8006028:	f015 0506 	ands.w	r5, r5, #6
 800602c:	d106      	bne.n	800603c <_printf_common+0x48>
 800602e:	f104 0a19 	add.w	sl, r4, #25
 8006032:	68e3      	ldr	r3, [r4, #12]
 8006034:	6832      	ldr	r2, [r6, #0]
 8006036:	1a9b      	subs	r3, r3, r2
 8006038:	42ab      	cmp	r3, r5
 800603a:	dc26      	bgt.n	800608a <_printf_common+0x96>
 800603c:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8006040:	6822      	ldr	r2, [r4, #0]
 8006042:	3b00      	subs	r3, #0
 8006044:	bf18      	it	ne
 8006046:	2301      	movne	r3, #1
 8006048:	0692      	lsls	r2, r2, #26
 800604a:	d42b      	bmi.n	80060a4 <_printf_common+0xb0>
 800604c:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8006050:	4641      	mov	r1, r8
 8006052:	4638      	mov	r0, r7
 8006054:	47c8      	blx	r9
 8006056:	3001      	adds	r0, #1
 8006058:	d01e      	beq.n	8006098 <_printf_common+0xa4>
 800605a:	6823      	ldr	r3, [r4, #0]
 800605c:	6922      	ldr	r2, [r4, #16]
 800605e:	f003 0306 	and.w	r3, r3, #6
 8006062:	2b04      	cmp	r3, #4
 8006064:	bf02      	ittt	eq
 8006066:	68e5      	ldreq	r5, [r4, #12]
 8006068:	6833      	ldreq	r3, [r6, #0]
 800606a:	1aed      	subeq	r5, r5, r3
 800606c:	68a3      	ldr	r3, [r4, #8]
 800606e:	bf0c      	ite	eq
 8006070:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8006074:	2500      	movne	r5, #0
 8006076:	4293      	cmp	r3, r2
 8006078:	bfc4      	itt	gt
 800607a:	1a9b      	subgt	r3, r3, r2
 800607c:	18ed      	addgt	r5, r5, r3
 800607e:	2600      	movs	r6, #0
 8006080:	341a      	adds	r4, #26
 8006082:	42b5      	cmp	r5, r6
 8006084:	d11a      	bne.n	80060bc <_printf_common+0xc8>
 8006086:	2000      	movs	r0, #0
 8006088:	e008      	b.n	800609c <_printf_common+0xa8>
 800608a:	2301      	movs	r3, #1
 800608c:	4652      	mov	r2, sl
 800608e:	4641      	mov	r1, r8
 8006090:	4638      	mov	r0, r7
 8006092:	47c8      	blx	r9
 8006094:	3001      	adds	r0, #1
 8006096:	d103      	bne.n	80060a0 <_printf_common+0xac>
 8006098:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800609c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80060a0:	3501      	adds	r5, #1
 80060a2:	e7c6      	b.n	8006032 <_printf_common+0x3e>
 80060a4:	18e1      	adds	r1, r4, r3
 80060a6:	1c5a      	adds	r2, r3, #1
 80060a8:	2030      	movs	r0, #48	@ 0x30
 80060aa:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80060ae:	4422      	add	r2, r4
 80060b0:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80060b4:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80060b8:	3302      	adds	r3, #2
 80060ba:	e7c7      	b.n	800604c <_printf_common+0x58>
 80060bc:	2301      	movs	r3, #1
 80060be:	4622      	mov	r2, r4
 80060c0:	4641      	mov	r1, r8
 80060c2:	4638      	mov	r0, r7
 80060c4:	47c8      	blx	r9
 80060c6:	3001      	adds	r0, #1
 80060c8:	d0e6      	beq.n	8006098 <_printf_common+0xa4>
 80060ca:	3601      	adds	r6, #1
 80060cc:	e7d9      	b.n	8006082 <_printf_common+0x8e>
	...

080060d0 <_printf_i>:
 80060d0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80060d4:	7e0f      	ldrb	r7, [r1, #24]
 80060d6:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80060d8:	2f78      	cmp	r7, #120	@ 0x78
 80060da:	4691      	mov	r9, r2
 80060dc:	4680      	mov	r8, r0
 80060de:	460c      	mov	r4, r1
 80060e0:	469a      	mov	sl, r3
 80060e2:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80060e6:	d807      	bhi.n	80060f8 <_printf_i+0x28>
 80060e8:	2f62      	cmp	r7, #98	@ 0x62
 80060ea:	d80a      	bhi.n	8006102 <_printf_i+0x32>
 80060ec:	2f00      	cmp	r7, #0
 80060ee:	f000 80d2 	beq.w	8006296 <_printf_i+0x1c6>
 80060f2:	2f58      	cmp	r7, #88	@ 0x58
 80060f4:	f000 80b9 	beq.w	800626a <_printf_i+0x19a>
 80060f8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80060fc:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8006100:	e03a      	b.n	8006178 <_printf_i+0xa8>
 8006102:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8006106:	2b15      	cmp	r3, #21
 8006108:	d8f6      	bhi.n	80060f8 <_printf_i+0x28>
 800610a:	a101      	add	r1, pc, #4	@ (adr r1, 8006110 <_printf_i+0x40>)
 800610c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8006110:	08006169 	.word	0x08006169
 8006114:	0800617d 	.word	0x0800617d
 8006118:	080060f9 	.word	0x080060f9
 800611c:	080060f9 	.word	0x080060f9
 8006120:	080060f9 	.word	0x080060f9
 8006124:	080060f9 	.word	0x080060f9
 8006128:	0800617d 	.word	0x0800617d
 800612c:	080060f9 	.word	0x080060f9
 8006130:	080060f9 	.word	0x080060f9
 8006134:	080060f9 	.word	0x080060f9
 8006138:	080060f9 	.word	0x080060f9
 800613c:	0800627d 	.word	0x0800627d
 8006140:	080061a7 	.word	0x080061a7
 8006144:	08006237 	.word	0x08006237
 8006148:	080060f9 	.word	0x080060f9
 800614c:	080060f9 	.word	0x080060f9
 8006150:	0800629f 	.word	0x0800629f
 8006154:	080060f9 	.word	0x080060f9
 8006158:	080061a7 	.word	0x080061a7
 800615c:	080060f9 	.word	0x080060f9
 8006160:	080060f9 	.word	0x080060f9
 8006164:	0800623f 	.word	0x0800623f
 8006168:	6833      	ldr	r3, [r6, #0]
 800616a:	1d1a      	adds	r2, r3, #4
 800616c:	681b      	ldr	r3, [r3, #0]
 800616e:	6032      	str	r2, [r6, #0]
 8006170:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8006174:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8006178:	2301      	movs	r3, #1
 800617a:	e09d      	b.n	80062b8 <_printf_i+0x1e8>
 800617c:	6833      	ldr	r3, [r6, #0]
 800617e:	6820      	ldr	r0, [r4, #0]
 8006180:	1d19      	adds	r1, r3, #4
 8006182:	6031      	str	r1, [r6, #0]
 8006184:	0606      	lsls	r6, r0, #24
 8006186:	d501      	bpl.n	800618c <_printf_i+0xbc>
 8006188:	681d      	ldr	r5, [r3, #0]
 800618a:	e003      	b.n	8006194 <_printf_i+0xc4>
 800618c:	0645      	lsls	r5, r0, #25
 800618e:	d5fb      	bpl.n	8006188 <_printf_i+0xb8>
 8006190:	f9b3 5000 	ldrsh.w	r5, [r3]
 8006194:	2d00      	cmp	r5, #0
 8006196:	da03      	bge.n	80061a0 <_printf_i+0xd0>
 8006198:	232d      	movs	r3, #45	@ 0x2d
 800619a:	426d      	negs	r5, r5
 800619c:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80061a0:	4859      	ldr	r0, [pc, #356]	@ (8006308 <_printf_i+0x238>)
 80061a2:	230a      	movs	r3, #10
 80061a4:	e011      	b.n	80061ca <_printf_i+0xfa>
 80061a6:	6821      	ldr	r1, [r4, #0]
 80061a8:	6833      	ldr	r3, [r6, #0]
 80061aa:	0608      	lsls	r0, r1, #24
 80061ac:	f853 5b04 	ldr.w	r5, [r3], #4
 80061b0:	d402      	bmi.n	80061b8 <_printf_i+0xe8>
 80061b2:	0649      	lsls	r1, r1, #25
 80061b4:	bf48      	it	mi
 80061b6:	b2ad      	uxthmi	r5, r5
 80061b8:	2f6f      	cmp	r7, #111	@ 0x6f
 80061ba:	4853      	ldr	r0, [pc, #332]	@ (8006308 <_printf_i+0x238>)
 80061bc:	6033      	str	r3, [r6, #0]
 80061be:	bf14      	ite	ne
 80061c0:	230a      	movne	r3, #10
 80061c2:	2308      	moveq	r3, #8
 80061c4:	2100      	movs	r1, #0
 80061c6:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80061ca:	6866      	ldr	r6, [r4, #4]
 80061cc:	60a6      	str	r6, [r4, #8]
 80061ce:	2e00      	cmp	r6, #0
 80061d0:	bfa2      	ittt	ge
 80061d2:	6821      	ldrge	r1, [r4, #0]
 80061d4:	f021 0104 	bicge.w	r1, r1, #4
 80061d8:	6021      	strge	r1, [r4, #0]
 80061da:	b90d      	cbnz	r5, 80061e0 <_printf_i+0x110>
 80061dc:	2e00      	cmp	r6, #0
 80061de:	d04b      	beq.n	8006278 <_printf_i+0x1a8>
 80061e0:	4616      	mov	r6, r2
 80061e2:	fbb5 f1f3 	udiv	r1, r5, r3
 80061e6:	fb03 5711 	mls	r7, r3, r1, r5
 80061ea:	5dc7      	ldrb	r7, [r0, r7]
 80061ec:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80061f0:	462f      	mov	r7, r5
 80061f2:	42bb      	cmp	r3, r7
 80061f4:	460d      	mov	r5, r1
 80061f6:	d9f4      	bls.n	80061e2 <_printf_i+0x112>
 80061f8:	2b08      	cmp	r3, #8
 80061fa:	d10b      	bne.n	8006214 <_printf_i+0x144>
 80061fc:	6823      	ldr	r3, [r4, #0]
 80061fe:	07df      	lsls	r7, r3, #31
 8006200:	d508      	bpl.n	8006214 <_printf_i+0x144>
 8006202:	6923      	ldr	r3, [r4, #16]
 8006204:	6861      	ldr	r1, [r4, #4]
 8006206:	4299      	cmp	r1, r3
 8006208:	bfde      	ittt	le
 800620a:	2330      	movle	r3, #48	@ 0x30
 800620c:	f806 3c01 	strble.w	r3, [r6, #-1]
 8006210:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
 8006214:	1b92      	subs	r2, r2, r6
 8006216:	6122      	str	r2, [r4, #16]
 8006218:	f8cd a000 	str.w	sl, [sp]
 800621c:	464b      	mov	r3, r9
 800621e:	aa03      	add	r2, sp, #12
 8006220:	4621      	mov	r1, r4
 8006222:	4640      	mov	r0, r8
 8006224:	f7ff fee6 	bl	8005ff4 <_printf_common>
 8006228:	3001      	adds	r0, #1
 800622a:	d14a      	bne.n	80062c2 <_printf_i+0x1f2>
 800622c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8006230:	b004      	add	sp, #16
 8006232:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006236:	6823      	ldr	r3, [r4, #0]
 8006238:	f043 0320 	orr.w	r3, r3, #32
 800623c:	6023      	str	r3, [r4, #0]
 800623e:	4833      	ldr	r0, [pc, #204]	@ (800630c <_printf_i+0x23c>)
 8006240:	2778      	movs	r7, #120	@ 0x78
 8006242:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8006246:	6823      	ldr	r3, [r4, #0]
 8006248:	6831      	ldr	r1, [r6, #0]
 800624a:	061f      	lsls	r7, r3, #24
 800624c:	f851 5b04 	ldr.w	r5, [r1], #4
 8006250:	d402      	bmi.n	8006258 <_printf_i+0x188>
 8006252:	065f      	lsls	r7, r3, #25
 8006254:	bf48      	it	mi
 8006256:	b2ad      	uxthmi	r5, r5
 8006258:	6031      	str	r1, [r6, #0]
 800625a:	07d9      	lsls	r1, r3, #31
 800625c:	bf44      	itt	mi
 800625e:	f043 0320 	orrmi.w	r3, r3, #32
 8006262:	6023      	strmi	r3, [r4, #0]
 8006264:	b11d      	cbz	r5, 800626e <_printf_i+0x19e>
 8006266:	2310      	movs	r3, #16
 8006268:	e7ac      	b.n	80061c4 <_printf_i+0xf4>
 800626a:	4827      	ldr	r0, [pc, #156]	@ (8006308 <_printf_i+0x238>)
 800626c:	e7e9      	b.n	8006242 <_printf_i+0x172>
 800626e:	6823      	ldr	r3, [r4, #0]
 8006270:	f023 0320 	bic.w	r3, r3, #32
 8006274:	6023      	str	r3, [r4, #0]
 8006276:	e7f6      	b.n	8006266 <_printf_i+0x196>
 8006278:	4616      	mov	r6, r2
 800627a:	e7bd      	b.n	80061f8 <_printf_i+0x128>
 800627c:	6833      	ldr	r3, [r6, #0]
 800627e:	6825      	ldr	r5, [r4, #0]
 8006280:	6961      	ldr	r1, [r4, #20]
 8006282:	1d18      	adds	r0, r3, #4
 8006284:	6030      	str	r0, [r6, #0]
 8006286:	062e      	lsls	r6, r5, #24
 8006288:	681b      	ldr	r3, [r3, #0]
 800628a:	d501      	bpl.n	8006290 <_printf_i+0x1c0>
 800628c:	6019      	str	r1, [r3, #0]
 800628e:	e002      	b.n	8006296 <_printf_i+0x1c6>
 8006290:	0668      	lsls	r0, r5, #25
 8006292:	d5fb      	bpl.n	800628c <_printf_i+0x1bc>
 8006294:	8019      	strh	r1, [r3, #0]
 8006296:	2300      	movs	r3, #0
 8006298:	6123      	str	r3, [r4, #16]
 800629a:	4616      	mov	r6, r2
 800629c:	e7bc      	b.n	8006218 <_printf_i+0x148>
 800629e:	6833      	ldr	r3, [r6, #0]
 80062a0:	1d1a      	adds	r2, r3, #4
 80062a2:	6032      	str	r2, [r6, #0]
 80062a4:	681e      	ldr	r6, [r3, #0]
 80062a6:	6862      	ldr	r2, [r4, #4]
 80062a8:	2100      	movs	r1, #0
 80062aa:	4630      	mov	r0, r6
 80062ac:	f7f9 ffb0 	bl	8000210 <memchr>
 80062b0:	b108      	cbz	r0, 80062b6 <_printf_i+0x1e6>
 80062b2:	1b80      	subs	r0, r0, r6
 80062b4:	6060      	str	r0, [r4, #4]
 80062b6:	6863      	ldr	r3, [r4, #4]
 80062b8:	6123      	str	r3, [r4, #16]
 80062ba:	2300      	movs	r3, #0
 80062bc:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80062c0:	e7aa      	b.n	8006218 <_printf_i+0x148>
 80062c2:	6923      	ldr	r3, [r4, #16]
 80062c4:	4632      	mov	r2, r6
 80062c6:	4649      	mov	r1, r9
 80062c8:	4640      	mov	r0, r8
 80062ca:	47d0      	blx	sl
 80062cc:	3001      	adds	r0, #1
 80062ce:	d0ad      	beq.n	800622c <_printf_i+0x15c>
 80062d0:	6823      	ldr	r3, [r4, #0]
 80062d2:	079b      	lsls	r3, r3, #30
 80062d4:	d413      	bmi.n	80062fe <_printf_i+0x22e>
 80062d6:	68e0      	ldr	r0, [r4, #12]
 80062d8:	9b03      	ldr	r3, [sp, #12]
 80062da:	4298      	cmp	r0, r3
 80062dc:	bfb8      	it	lt
 80062de:	4618      	movlt	r0, r3
 80062e0:	e7a6      	b.n	8006230 <_printf_i+0x160>
 80062e2:	2301      	movs	r3, #1
 80062e4:	4632      	mov	r2, r6
 80062e6:	4649      	mov	r1, r9
 80062e8:	4640      	mov	r0, r8
 80062ea:	47d0      	blx	sl
 80062ec:	3001      	adds	r0, #1
 80062ee:	d09d      	beq.n	800622c <_printf_i+0x15c>
 80062f0:	3501      	adds	r5, #1
 80062f2:	68e3      	ldr	r3, [r4, #12]
 80062f4:	9903      	ldr	r1, [sp, #12]
 80062f6:	1a5b      	subs	r3, r3, r1
 80062f8:	42ab      	cmp	r3, r5
 80062fa:	dcf2      	bgt.n	80062e2 <_printf_i+0x212>
 80062fc:	e7eb      	b.n	80062d6 <_printf_i+0x206>
 80062fe:	2500      	movs	r5, #0
 8006300:	f104 0619 	add.w	r6, r4, #25
 8006304:	e7f5      	b.n	80062f2 <_printf_i+0x222>
 8006306:	bf00      	nop
 8006308:	0800872a 	.word	0x0800872a
 800630c:	0800873b 	.word	0x0800873b

08006310 <__malloc_lock>:
 8006310:	4801      	ldr	r0, [pc, #4]	@ (8006318 <__malloc_lock+0x8>)
 8006312:	f000 b932 	b.w	800657a <__retarget_lock_acquire_recursive>
 8006316:	bf00      	nop
 8006318:	200004b4 	.word	0x200004b4

0800631c <__malloc_unlock>:
 800631c:	4801      	ldr	r0, [pc, #4]	@ (8006324 <__malloc_unlock+0x8>)
 800631e:	f000 b92d 	b.w	800657c <__retarget_lock_release_recursive>
 8006322:	bf00      	nop
 8006324:	200004b4 	.word	0x200004b4

08006328 <siprintf>:
 8006328:	b40e      	push	{r1, r2, r3}
 800632a:	b500      	push	{lr}
 800632c:	b09c      	sub	sp, #112	@ 0x70
 800632e:	ab1d      	add	r3, sp, #116	@ 0x74
 8006330:	9002      	str	r0, [sp, #8]
 8006332:	9006      	str	r0, [sp, #24]
 8006334:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8006338:	4809      	ldr	r0, [pc, #36]	@ (8006360 <siprintf+0x38>)
 800633a:	9107      	str	r1, [sp, #28]
 800633c:	9104      	str	r1, [sp, #16]
 800633e:	4909      	ldr	r1, [pc, #36]	@ (8006364 <siprintf+0x3c>)
 8006340:	f853 2b04 	ldr.w	r2, [r3], #4
 8006344:	9105      	str	r1, [sp, #20]
 8006346:	6800      	ldr	r0, [r0, #0]
 8006348:	9301      	str	r3, [sp, #4]
 800634a:	a902      	add	r1, sp, #8
 800634c:	f001 f80a 	bl	8007364 <_svfiprintf_r>
 8006350:	9b02      	ldr	r3, [sp, #8]
 8006352:	2200      	movs	r2, #0
 8006354:	701a      	strb	r2, [r3, #0]
 8006356:	b01c      	add	sp, #112	@ 0x70
 8006358:	f85d eb04 	ldr.w	lr, [sp], #4
 800635c:	b003      	add	sp, #12
 800635e:	4770      	bx	lr
 8006360:	20000018 	.word	0x20000018
 8006364:	ffff0208 	.word	0xffff0208

08006368 <std>:
 8006368:	2300      	movs	r3, #0
 800636a:	b510      	push	{r4, lr}
 800636c:	4604      	mov	r4, r0
 800636e:	e9c0 3300 	strd	r3, r3, [r0]
 8006372:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8006376:	6083      	str	r3, [r0, #8]
 8006378:	8181      	strh	r1, [r0, #12]
 800637a:	6643      	str	r3, [r0, #100]	@ 0x64
 800637c:	81c2      	strh	r2, [r0, #14]
 800637e:	6183      	str	r3, [r0, #24]
 8006380:	4619      	mov	r1, r3
 8006382:	2208      	movs	r2, #8
 8006384:	305c      	adds	r0, #92	@ 0x5c
 8006386:	f000 f8b1 	bl	80064ec <memset>
 800638a:	4b0d      	ldr	r3, [pc, #52]	@ (80063c0 <std+0x58>)
 800638c:	6263      	str	r3, [r4, #36]	@ 0x24
 800638e:	4b0d      	ldr	r3, [pc, #52]	@ (80063c4 <std+0x5c>)
 8006390:	62a3      	str	r3, [r4, #40]	@ 0x28
 8006392:	4b0d      	ldr	r3, [pc, #52]	@ (80063c8 <std+0x60>)
 8006394:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8006396:	4b0d      	ldr	r3, [pc, #52]	@ (80063cc <std+0x64>)
 8006398:	6323      	str	r3, [r4, #48]	@ 0x30
 800639a:	4b0d      	ldr	r3, [pc, #52]	@ (80063d0 <std+0x68>)
 800639c:	6224      	str	r4, [r4, #32]
 800639e:	429c      	cmp	r4, r3
 80063a0:	d006      	beq.n	80063b0 <std+0x48>
 80063a2:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80063a6:	4294      	cmp	r4, r2
 80063a8:	d002      	beq.n	80063b0 <std+0x48>
 80063aa:	33d0      	adds	r3, #208	@ 0xd0
 80063ac:	429c      	cmp	r4, r3
 80063ae:	d105      	bne.n	80063bc <std+0x54>
 80063b0:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80063b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80063b8:	f000 b8de 	b.w	8006578 <__retarget_lock_init_recursive>
 80063bc:	bd10      	pop	{r4, pc}
 80063be:	bf00      	nop
 80063c0:	08007db9 	.word	0x08007db9
 80063c4:	08007ddb 	.word	0x08007ddb
 80063c8:	08007e13 	.word	0x08007e13
 80063cc:	08007e37 	.word	0x08007e37
 80063d0:	20000378 	.word	0x20000378

080063d4 <stdio_exit_handler>:
 80063d4:	4a02      	ldr	r2, [pc, #8]	@ (80063e0 <stdio_exit_handler+0xc>)
 80063d6:	4903      	ldr	r1, [pc, #12]	@ (80063e4 <stdio_exit_handler+0x10>)
 80063d8:	4803      	ldr	r0, [pc, #12]	@ (80063e8 <stdio_exit_handler+0x14>)
 80063da:	f000 b869 	b.w	80064b0 <_fwalk_sglue>
 80063de:	bf00      	nop
 80063e0:	2000000c 	.word	0x2000000c
 80063e4:	08007665 	.word	0x08007665
 80063e8:	2000001c 	.word	0x2000001c

080063ec <cleanup_stdio>:
 80063ec:	6841      	ldr	r1, [r0, #4]
 80063ee:	4b0c      	ldr	r3, [pc, #48]	@ (8006420 <cleanup_stdio+0x34>)
 80063f0:	4299      	cmp	r1, r3
 80063f2:	b510      	push	{r4, lr}
 80063f4:	4604      	mov	r4, r0
 80063f6:	d001      	beq.n	80063fc <cleanup_stdio+0x10>
 80063f8:	f001 f934 	bl	8007664 <_fflush_r>
 80063fc:	68a1      	ldr	r1, [r4, #8]
 80063fe:	4b09      	ldr	r3, [pc, #36]	@ (8006424 <cleanup_stdio+0x38>)
 8006400:	4299      	cmp	r1, r3
 8006402:	d002      	beq.n	800640a <cleanup_stdio+0x1e>
 8006404:	4620      	mov	r0, r4
 8006406:	f001 f92d 	bl	8007664 <_fflush_r>
 800640a:	68e1      	ldr	r1, [r4, #12]
 800640c:	4b06      	ldr	r3, [pc, #24]	@ (8006428 <cleanup_stdio+0x3c>)
 800640e:	4299      	cmp	r1, r3
 8006410:	d004      	beq.n	800641c <cleanup_stdio+0x30>
 8006412:	4620      	mov	r0, r4
 8006414:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006418:	f001 b924 	b.w	8007664 <_fflush_r>
 800641c:	bd10      	pop	{r4, pc}
 800641e:	bf00      	nop
 8006420:	20000378 	.word	0x20000378
 8006424:	200003e0 	.word	0x200003e0
 8006428:	20000448 	.word	0x20000448

0800642c <global_stdio_init.part.0>:
 800642c:	b510      	push	{r4, lr}
 800642e:	4b0b      	ldr	r3, [pc, #44]	@ (800645c <global_stdio_init.part.0+0x30>)
 8006430:	4c0b      	ldr	r4, [pc, #44]	@ (8006460 <global_stdio_init.part.0+0x34>)
 8006432:	4a0c      	ldr	r2, [pc, #48]	@ (8006464 <global_stdio_init.part.0+0x38>)
 8006434:	601a      	str	r2, [r3, #0]
 8006436:	4620      	mov	r0, r4
 8006438:	2200      	movs	r2, #0
 800643a:	2104      	movs	r1, #4
 800643c:	f7ff ff94 	bl	8006368 <std>
 8006440:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8006444:	2201      	movs	r2, #1
 8006446:	2109      	movs	r1, #9
 8006448:	f7ff ff8e 	bl	8006368 <std>
 800644c:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8006450:	2202      	movs	r2, #2
 8006452:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006456:	2112      	movs	r1, #18
 8006458:	f7ff bf86 	b.w	8006368 <std>
 800645c:	200004b0 	.word	0x200004b0
 8006460:	20000378 	.word	0x20000378
 8006464:	080063d5 	.word	0x080063d5

08006468 <__sfp_lock_acquire>:
 8006468:	4801      	ldr	r0, [pc, #4]	@ (8006470 <__sfp_lock_acquire+0x8>)
 800646a:	f000 b886 	b.w	800657a <__retarget_lock_acquire_recursive>
 800646e:	bf00      	nop
 8006470:	200004b5 	.word	0x200004b5

08006474 <__sfp_lock_release>:
 8006474:	4801      	ldr	r0, [pc, #4]	@ (800647c <__sfp_lock_release+0x8>)
 8006476:	f000 b881 	b.w	800657c <__retarget_lock_release_recursive>
 800647a:	bf00      	nop
 800647c:	200004b5 	.word	0x200004b5

08006480 <__sinit>:
 8006480:	b510      	push	{r4, lr}
 8006482:	4604      	mov	r4, r0
 8006484:	f7ff fff0 	bl	8006468 <__sfp_lock_acquire>
 8006488:	6a23      	ldr	r3, [r4, #32]
 800648a:	b11b      	cbz	r3, 8006494 <__sinit+0x14>
 800648c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006490:	f7ff bff0 	b.w	8006474 <__sfp_lock_release>
 8006494:	4b04      	ldr	r3, [pc, #16]	@ (80064a8 <__sinit+0x28>)
 8006496:	6223      	str	r3, [r4, #32]
 8006498:	4b04      	ldr	r3, [pc, #16]	@ (80064ac <__sinit+0x2c>)
 800649a:	681b      	ldr	r3, [r3, #0]
 800649c:	2b00      	cmp	r3, #0
 800649e:	d1f5      	bne.n	800648c <__sinit+0xc>
 80064a0:	f7ff ffc4 	bl	800642c <global_stdio_init.part.0>
 80064a4:	e7f2      	b.n	800648c <__sinit+0xc>
 80064a6:	bf00      	nop
 80064a8:	080063ed 	.word	0x080063ed
 80064ac:	200004b0 	.word	0x200004b0

080064b0 <_fwalk_sglue>:
 80064b0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80064b4:	4607      	mov	r7, r0
 80064b6:	4688      	mov	r8, r1
 80064b8:	4614      	mov	r4, r2
 80064ba:	2600      	movs	r6, #0
 80064bc:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80064c0:	f1b9 0901 	subs.w	r9, r9, #1
 80064c4:	d505      	bpl.n	80064d2 <_fwalk_sglue+0x22>
 80064c6:	6824      	ldr	r4, [r4, #0]
 80064c8:	2c00      	cmp	r4, #0
 80064ca:	d1f7      	bne.n	80064bc <_fwalk_sglue+0xc>
 80064cc:	4630      	mov	r0, r6
 80064ce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80064d2:	89ab      	ldrh	r3, [r5, #12]
 80064d4:	2b01      	cmp	r3, #1
 80064d6:	d907      	bls.n	80064e8 <_fwalk_sglue+0x38>
 80064d8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80064dc:	3301      	adds	r3, #1
 80064de:	d003      	beq.n	80064e8 <_fwalk_sglue+0x38>
 80064e0:	4629      	mov	r1, r5
 80064e2:	4638      	mov	r0, r7
 80064e4:	47c0      	blx	r8
 80064e6:	4306      	orrs	r6, r0
 80064e8:	3568      	adds	r5, #104	@ 0x68
 80064ea:	e7e9      	b.n	80064c0 <_fwalk_sglue+0x10>

080064ec <memset>:
 80064ec:	4402      	add	r2, r0
 80064ee:	4603      	mov	r3, r0
 80064f0:	4293      	cmp	r3, r2
 80064f2:	d100      	bne.n	80064f6 <memset+0xa>
 80064f4:	4770      	bx	lr
 80064f6:	f803 1b01 	strb.w	r1, [r3], #1
 80064fa:	e7f9      	b.n	80064f0 <memset+0x4>

080064fc <_localeconv_r>:
 80064fc:	4800      	ldr	r0, [pc, #0]	@ (8006500 <_localeconv_r+0x4>)
 80064fe:	4770      	bx	lr
 8006500:	20000158 	.word	0x20000158

08006504 <_sbrk_r>:
 8006504:	b538      	push	{r3, r4, r5, lr}
 8006506:	4d06      	ldr	r5, [pc, #24]	@ (8006520 <_sbrk_r+0x1c>)
 8006508:	2300      	movs	r3, #0
 800650a:	4604      	mov	r4, r0
 800650c:	4608      	mov	r0, r1
 800650e:	602b      	str	r3, [r5, #0]
 8006510:	f7fb ff56 	bl	80023c0 <_sbrk>
 8006514:	1c43      	adds	r3, r0, #1
 8006516:	d102      	bne.n	800651e <_sbrk_r+0x1a>
 8006518:	682b      	ldr	r3, [r5, #0]
 800651a:	b103      	cbz	r3, 800651e <_sbrk_r+0x1a>
 800651c:	6023      	str	r3, [r4, #0]
 800651e:	bd38      	pop	{r3, r4, r5, pc}
 8006520:	200004b8 	.word	0x200004b8

08006524 <__errno>:
 8006524:	4b01      	ldr	r3, [pc, #4]	@ (800652c <__errno+0x8>)
 8006526:	6818      	ldr	r0, [r3, #0]
 8006528:	4770      	bx	lr
 800652a:	bf00      	nop
 800652c:	20000018 	.word	0x20000018

08006530 <__libc_init_array>:
 8006530:	b570      	push	{r4, r5, r6, lr}
 8006532:	4d0d      	ldr	r5, [pc, #52]	@ (8006568 <__libc_init_array+0x38>)
 8006534:	4c0d      	ldr	r4, [pc, #52]	@ (800656c <__libc_init_array+0x3c>)
 8006536:	1b64      	subs	r4, r4, r5
 8006538:	10a4      	asrs	r4, r4, #2
 800653a:	2600      	movs	r6, #0
 800653c:	42a6      	cmp	r6, r4
 800653e:	d109      	bne.n	8006554 <__libc_init_array+0x24>
 8006540:	4d0b      	ldr	r5, [pc, #44]	@ (8006570 <__libc_init_array+0x40>)
 8006542:	4c0c      	ldr	r4, [pc, #48]	@ (8006574 <__libc_init_array+0x44>)
 8006544:	f002 f814 	bl	8008570 <_init>
 8006548:	1b64      	subs	r4, r4, r5
 800654a:	10a4      	asrs	r4, r4, #2
 800654c:	2600      	movs	r6, #0
 800654e:	42a6      	cmp	r6, r4
 8006550:	d105      	bne.n	800655e <__libc_init_array+0x2e>
 8006552:	bd70      	pop	{r4, r5, r6, pc}
 8006554:	f855 3b04 	ldr.w	r3, [r5], #4
 8006558:	4798      	blx	r3
 800655a:	3601      	adds	r6, #1
 800655c:	e7ee      	b.n	800653c <__libc_init_array+0xc>
 800655e:	f855 3b04 	ldr.w	r3, [r5], #4
 8006562:	4798      	blx	r3
 8006564:	3601      	adds	r6, #1
 8006566:	e7f2      	b.n	800654e <__libc_init_array+0x1e>
 8006568:	08008a90 	.word	0x08008a90
 800656c:	08008a90 	.word	0x08008a90
 8006570:	08008a90 	.word	0x08008a90
 8006574:	08008a94 	.word	0x08008a94

08006578 <__retarget_lock_init_recursive>:
 8006578:	4770      	bx	lr

0800657a <__retarget_lock_acquire_recursive>:
 800657a:	4770      	bx	lr

0800657c <__retarget_lock_release_recursive>:
 800657c:	4770      	bx	lr

0800657e <quorem>:
 800657e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006582:	6903      	ldr	r3, [r0, #16]
 8006584:	690c      	ldr	r4, [r1, #16]
 8006586:	42a3      	cmp	r3, r4
 8006588:	4607      	mov	r7, r0
 800658a:	db7e      	blt.n	800668a <quorem+0x10c>
 800658c:	3c01      	subs	r4, #1
 800658e:	f101 0814 	add.w	r8, r1, #20
 8006592:	00a3      	lsls	r3, r4, #2
 8006594:	f100 0514 	add.w	r5, r0, #20
 8006598:	9300      	str	r3, [sp, #0]
 800659a:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800659e:	9301      	str	r3, [sp, #4]
 80065a0:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 80065a4:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80065a8:	3301      	adds	r3, #1
 80065aa:	429a      	cmp	r2, r3
 80065ac:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 80065b0:	fbb2 f6f3 	udiv	r6, r2, r3
 80065b4:	d32e      	bcc.n	8006614 <quorem+0x96>
 80065b6:	f04f 0a00 	mov.w	sl, #0
 80065ba:	46c4      	mov	ip, r8
 80065bc:	46ae      	mov	lr, r5
 80065be:	46d3      	mov	fp, sl
 80065c0:	f85c 3b04 	ldr.w	r3, [ip], #4
 80065c4:	b298      	uxth	r0, r3
 80065c6:	fb06 a000 	mla	r0, r6, r0, sl
 80065ca:	0c02      	lsrs	r2, r0, #16
 80065cc:	0c1b      	lsrs	r3, r3, #16
 80065ce:	fb06 2303 	mla	r3, r6, r3, r2
 80065d2:	f8de 2000 	ldr.w	r2, [lr]
 80065d6:	b280      	uxth	r0, r0
 80065d8:	b292      	uxth	r2, r2
 80065da:	1a12      	subs	r2, r2, r0
 80065dc:	445a      	add	r2, fp
 80065de:	f8de 0000 	ldr.w	r0, [lr]
 80065e2:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80065e6:	b29b      	uxth	r3, r3
 80065e8:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 80065ec:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 80065f0:	b292      	uxth	r2, r2
 80065f2:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 80065f6:	45e1      	cmp	r9, ip
 80065f8:	f84e 2b04 	str.w	r2, [lr], #4
 80065fc:	ea4f 4b23 	mov.w	fp, r3, asr #16
 8006600:	d2de      	bcs.n	80065c0 <quorem+0x42>
 8006602:	9b00      	ldr	r3, [sp, #0]
 8006604:	58eb      	ldr	r3, [r5, r3]
 8006606:	b92b      	cbnz	r3, 8006614 <quorem+0x96>
 8006608:	9b01      	ldr	r3, [sp, #4]
 800660a:	3b04      	subs	r3, #4
 800660c:	429d      	cmp	r5, r3
 800660e:	461a      	mov	r2, r3
 8006610:	d32f      	bcc.n	8006672 <quorem+0xf4>
 8006612:	613c      	str	r4, [r7, #16]
 8006614:	4638      	mov	r0, r7
 8006616:	f001 fac7 	bl	8007ba8 <__mcmp>
 800661a:	2800      	cmp	r0, #0
 800661c:	db25      	blt.n	800666a <quorem+0xec>
 800661e:	4629      	mov	r1, r5
 8006620:	2000      	movs	r0, #0
 8006622:	f858 2b04 	ldr.w	r2, [r8], #4
 8006626:	f8d1 c000 	ldr.w	ip, [r1]
 800662a:	fa1f fe82 	uxth.w	lr, r2
 800662e:	fa1f f38c 	uxth.w	r3, ip
 8006632:	eba3 030e 	sub.w	r3, r3, lr
 8006636:	4403      	add	r3, r0
 8006638:	0c12      	lsrs	r2, r2, #16
 800663a:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 800663e:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 8006642:	b29b      	uxth	r3, r3
 8006644:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8006648:	45c1      	cmp	r9, r8
 800664a:	f841 3b04 	str.w	r3, [r1], #4
 800664e:	ea4f 4022 	mov.w	r0, r2, asr #16
 8006652:	d2e6      	bcs.n	8006622 <quorem+0xa4>
 8006654:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8006658:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800665c:	b922      	cbnz	r2, 8006668 <quorem+0xea>
 800665e:	3b04      	subs	r3, #4
 8006660:	429d      	cmp	r5, r3
 8006662:	461a      	mov	r2, r3
 8006664:	d30b      	bcc.n	800667e <quorem+0x100>
 8006666:	613c      	str	r4, [r7, #16]
 8006668:	3601      	adds	r6, #1
 800666a:	4630      	mov	r0, r6
 800666c:	b003      	add	sp, #12
 800666e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006672:	6812      	ldr	r2, [r2, #0]
 8006674:	3b04      	subs	r3, #4
 8006676:	2a00      	cmp	r2, #0
 8006678:	d1cb      	bne.n	8006612 <quorem+0x94>
 800667a:	3c01      	subs	r4, #1
 800667c:	e7c6      	b.n	800660c <quorem+0x8e>
 800667e:	6812      	ldr	r2, [r2, #0]
 8006680:	3b04      	subs	r3, #4
 8006682:	2a00      	cmp	r2, #0
 8006684:	d1ef      	bne.n	8006666 <quorem+0xe8>
 8006686:	3c01      	subs	r4, #1
 8006688:	e7ea      	b.n	8006660 <quorem+0xe2>
 800668a:	2000      	movs	r0, #0
 800668c:	e7ee      	b.n	800666c <quorem+0xee>
	...

08006690 <_dtoa_r>:
 8006690:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006694:	69c7      	ldr	r7, [r0, #28]
 8006696:	b099      	sub	sp, #100	@ 0x64
 8006698:	ed8d 0b02 	vstr	d0, [sp, #8]
 800669c:	ec55 4b10 	vmov	r4, r5, d0
 80066a0:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 80066a2:	9109      	str	r1, [sp, #36]	@ 0x24
 80066a4:	4683      	mov	fp, r0
 80066a6:	920e      	str	r2, [sp, #56]	@ 0x38
 80066a8:	9313      	str	r3, [sp, #76]	@ 0x4c
 80066aa:	b97f      	cbnz	r7, 80066cc <_dtoa_r+0x3c>
 80066ac:	2010      	movs	r0, #16
 80066ae:	f7ff fbf7 	bl	8005ea0 <malloc>
 80066b2:	4602      	mov	r2, r0
 80066b4:	f8cb 001c 	str.w	r0, [fp, #28]
 80066b8:	b920      	cbnz	r0, 80066c4 <_dtoa_r+0x34>
 80066ba:	4ba7      	ldr	r3, [pc, #668]	@ (8006958 <_dtoa_r+0x2c8>)
 80066bc:	21ef      	movs	r1, #239	@ 0xef
 80066be:	48a7      	ldr	r0, [pc, #668]	@ (800695c <_dtoa_r+0x2cc>)
 80066c0:	f001 fc5a 	bl	8007f78 <__assert_func>
 80066c4:	e9c0 7701 	strd	r7, r7, [r0, #4]
 80066c8:	6007      	str	r7, [r0, #0]
 80066ca:	60c7      	str	r7, [r0, #12]
 80066cc:	f8db 301c 	ldr.w	r3, [fp, #28]
 80066d0:	6819      	ldr	r1, [r3, #0]
 80066d2:	b159      	cbz	r1, 80066ec <_dtoa_r+0x5c>
 80066d4:	685a      	ldr	r2, [r3, #4]
 80066d6:	604a      	str	r2, [r1, #4]
 80066d8:	2301      	movs	r3, #1
 80066da:	4093      	lsls	r3, r2
 80066dc:	608b      	str	r3, [r1, #8]
 80066de:	4658      	mov	r0, fp
 80066e0:	f001 f828 	bl	8007734 <_Bfree>
 80066e4:	f8db 301c 	ldr.w	r3, [fp, #28]
 80066e8:	2200      	movs	r2, #0
 80066ea:	601a      	str	r2, [r3, #0]
 80066ec:	1e2b      	subs	r3, r5, #0
 80066ee:	bfb9      	ittee	lt
 80066f0:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 80066f4:	9303      	strlt	r3, [sp, #12]
 80066f6:	2300      	movge	r3, #0
 80066f8:	6033      	strge	r3, [r6, #0]
 80066fa:	9f03      	ldr	r7, [sp, #12]
 80066fc:	4b98      	ldr	r3, [pc, #608]	@ (8006960 <_dtoa_r+0x2d0>)
 80066fe:	bfbc      	itt	lt
 8006700:	2201      	movlt	r2, #1
 8006702:	6032      	strlt	r2, [r6, #0]
 8006704:	43bb      	bics	r3, r7
 8006706:	d112      	bne.n	800672e <_dtoa_r+0x9e>
 8006708:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 800670a:	f242 730f 	movw	r3, #9999	@ 0x270f
 800670e:	6013      	str	r3, [r2, #0]
 8006710:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8006714:	4323      	orrs	r3, r4
 8006716:	f000 854d 	beq.w	80071b4 <_dtoa_r+0xb24>
 800671a:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 800671c:	f8df a254 	ldr.w	sl, [pc, #596]	@ 8006974 <_dtoa_r+0x2e4>
 8006720:	2b00      	cmp	r3, #0
 8006722:	f000 854f 	beq.w	80071c4 <_dtoa_r+0xb34>
 8006726:	f10a 0303 	add.w	r3, sl, #3
 800672a:	f000 bd49 	b.w	80071c0 <_dtoa_r+0xb30>
 800672e:	ed9d 7b02 	vldr	d7, [sp, #8]
 8006732:	2200      	movs	r2, #0
 8006734:	ec51 0b17 	vmov	r0, r1, d7
 8006738:	2300      	movs	r3, #0
 800673a:	ed8d 7b0c 	vstr	d7, [sp, #48]	@ 0x30
 800673e:	f7fa f9e3 	bl	8000b08 <__aeabi_dcmpeq>
 8006742:	4680      	mov	r8, r0
 8006744:	b158      	cbz	r0, 800675e <_dtoa_r+0xce>
 8006746:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8006748:	2301      	movs	r3, #1
 800674a:	6013      	str	r3, [r2, #0]
 800674c:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 800674e:	b113      	cbz	r3, 8006756 <_dtoa_r+0xc6>
 8006750:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8006752:	4b84      	ldr	r3, [pc, #528]	@ (8006964 <_dtoa_r+0x2d4>)
 8006754:	6013      	str	r3, [r2, #0]
 8006756:	f8df a220 	ldr.w	sl, [pc, #544]	@ 8006978 <_dtoa_r+0x2e8>
 800675a:	f000 bd33 	b.w	80071c4 <_dtoa_r+0xb34>
 800675e:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 8006762:	aa16      	add	r2, sp, #88	@ 0x58
 8006764:	a917      	add	r1, sp, #92	@ 0x5c
 8006766:	4658      	mov	r0, fp
 8006768:	f001 face 	bl	8007d08 <__d2b>
 800676c:	f3c7 560a 	ubfx	r6, r7, #20, #11
 8006770:	4681      	mov	r9, r0
 8006772:	2e00      	cmp	r6, #0
 8006774:	d077      	beq.n	8006866 <_dtoa_r+0x1d6>
 8006776:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8006778:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
 800677c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8006780:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8006784:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 8006788:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 800678c:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 8006790:	4619      	mov	r1, r3
 8006792:	2200      	movs	r2, #0
 8006794:	4b74      	ldr	r3, [pc, #464]	@ (8006968 <_dtoa_r+0x2d8>)
 8006796:	f7f9 fd97 	bl	80002c8 <__aeabi_dsub>
 800679a:	a369      	add	r3, pc, #420	@ (adr r3, 8006940 <_dtoa_r+0x2b0>)
 800679c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80067a0:	f7f9 ff4a 	bl	8000638 <__aeabi_dmul>
 80067a4:	a368      	add	r3, pc, #416	@ (adr r3, 8006948 <_dtoa_r+0x2b8>)
 80067a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80067aa:	f7f9 fd8f 	bl	80002cc <__adddf3>
 80067ae:	4604      	mov	r4, r0
 80067b0:	4630      	mov	r0, r6
 80067b2:	460d      	mov	r5, r1
 80067b4:	f7f9 fed6 	bl	8000564 <__aeabi_i2d>
 80067b8:	a365      	add	r3, pc, #404	@ (adr r3, 8006950 <_dtoa_r+0x2c0>)
 80067ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 80067be:	f7f9 ff3b 	bl	8000638 <__aeabi_dmul>
 80067c2:	4602      	mov	r2, r0
 80067c4:	460b      	mov	r3, r1
 80067c6:	4620      	mov	r0, r4
 80067c8:	4629      	mov	r1, r5
 80067ca:	f7f9 fd7f 	bl	80002cc <__adddf3>
 80067ce:	4604      	mov	r4, r0
 80067d0:	460d      	mov	r5, r1
 80067d2:	f7fa f9e1 	bl	8000b98 <__aeabi_d2iz>
 80067d6:	2200      	movs	r2, #0
 80067d8:	4607      	mov	r7, r0
 80067da:	2300      	movs	r3, #0
 80067dc:	4620      	mov	r0, r4
 80067de:	4629      	mov	r1, r5
 80067e0:	f7fa f99c 	bl	8000b1c <__aeabi_dcmplt>
 80067e4:	b140      	cbz	r0, 80067f8 <_dtoa_r+0x168>
 80067e6:	4638      	mov	r0, r7
 80067e8:	f7f9 febc 	bl	8000564 <__aeabi_i2d>
 80067ec:	4622      	mov	r2, r4
 80067ee:	462b      	mov	r3, r5
 80067f0:	f7fa f98a 	bl	8000b08 <__aeabi_dcmpeq>
 80067f4:	b900      	cbnz	r0, 80067f8 <_dtoa_r+0x168>
 80067f6:	3f01      	subs	r7, #1
 80067f8:	2f16      	cmp	r7, #22
 80067fa:	d851      	bhi.n	80068a0 <_dtoa_r+0x210>
 80067fc:	4b5b      	ldr	r3, [pc, #364]	@ (800696c <_dtoa_r+0x2dc>)
 80067fe:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8006802:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006806:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 800680a:	f7fa f987 	bl	8000b1c <__aeabi_dcmplt>
 800680e:	2800      	cmp	r0, #0
 8006810:	d048      	beq.n	80068a4 <_dtoa_r+0x214>
 8006812:	3f01      	subs	r7, #1
 8006814:	2300      	movs	r3, #0
 8006816:	9312      	str	r3, [sp, #72]	@ 0x48
 8006818:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 800681a:	1b9b      	subs	r3, r3, r6
 800681c:	1e5a      	subs	r2, r3, #1
 800681e:	bf44      	itt	mi
 8006820:	f1c3 0801 	rsbmi	r8, r3, #1
 8006824:	2300      	movmi	r3, #0
 8006826:	9208      	str	r2, [sp, #32]
 8006828:	bf54      	ite	pl
 800682a:	f04f 0800 	movpl.w	r8, #0
 800682e:	9308      	strmi	r3, [sp, #32]
 8006830:	2f00      	cmp	r7, #0
 8006832:	db39      	blt.n	80068a8 <_dtoa_r+0x218>
 8006834:	9b08      	ldr	r3, [sp, #32]
 8006836:	970f      	str	r7, [sp, #60]	@ 0x3c
 8006838:	443b      	add	r3, r7
 800683a:	9308      	str	r3, [sp, #32]
 800683c:	2300      	movs	r3, #0
 800683e:	930a      	str	r3, [sp, #40]	@ 0x28
 8006840:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006842:	2b09      	cmp	r3, #9
 8006844:	d864      	bhi.n	8006910 <_dtoa_r+0x280>
 8006846:	2b05      	cmp	r3, #5
 8006848:	bfc4      	itt	gt
 800684a:	3b04      	subgt	r3, #4
 800684c:	9309      	strgt	r3, [sp, #36]	@ 0x24
 800684e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006850:	f1a3 0302 	sub.w	r3, r3, #2
 8006854:	bfcc      	ite	gt
 8006856:	2400      	movgt	r4, #0
 8006858:	2401      	movle	r4, #1
 800685a:	2b03      	cmp	r3, #3
 800685c:	d863      	bhi.n	8006926 <_dtoa_r+0x296>
 800685e:	e8df f003 	tbb	[pc, r3]
 8006862:	372a      	.short	0x372a
 8006864:	5535      	.short	0x5535
 8006866:	e9dd 6316 	ldrd	r6, r3, [sp, #88]	@ 0x58
 800686a:	441e      	add	r6, r3
 800686c:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8006870:	2b20      	cmp	r3, #32
 8006872:	bfc1      	itttt	gt
 8006874:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 8006878:	409f      	lslgt	r7, r3
 800687a:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 800687e:	fa24 f303 	lsrgt.w	r3, r4, r3
 8006882:	bfd6      	itet	le
 8006884:	f1c3 0320 	rsble	r3, r3, #32
 8006888:	ea47 0003 	orrgt.w	r0, r7, r3
 800688c:	fa04 f003 	lslle.w	r0, r4, r3
 8006890:	f7f9 fe58 	bl	8000544 <__aeabi_ui2d>
 8006894:	2201      	movs	r2, #1
 8006896:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 800689a:	3e01      	subs	r6, #1
 800689c:	9214      	str	r2, [sp, #80]	@ 0x50
 800689e:	e777      	b.n	8006790 <_dtoa_r+0x100>
 80068a0:	2301      	movs	r3, #1
 80068a2:	e7b8      	b.n	8006816 <_dtoa_r+0x186>
 80068a4:	9012      	str	r0, [sp, #72]	@ 0x48
 80068a6:	e7b7      	b.n	8006818 <_dtoa_r+0x188>
 80068a8:	427b      	negs	r3, r7
 80068aa:	930a      	str	r3, [sp, #40]	@ 0x28
 80068ac:	2300      	movs	r3, #0
 80068ae:	eba8 0807 	sub.w	r8, r8, r7
 80068b2:	930f      	str	r3, [sp, #60]	@ 0x3c
 80068b4:	e7c4      	b.n	8006840 <_dtoa_r+0x1b0>
 80068b6:	2300      	movs	r3, #0
 80068b8:	930b      	str	r3, [sp, #44]	@ 0x2c
 80068ba:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80068bc:	2b00      	cmp	r3, #0
 80068be:	dc35      	bgt.n	800692c <_dtoa_r+0x29c>
 80068c0:	2301      	movs	r3, #1
 80068c2:	9300      	str	r3, [sp, #0]
 80068c4:	9307      	str	r3, [sp, #28]
 80068c6:	461a      	mov	r2, r3
 80068c8:	920e      	str	r2, [sp, #56]	@ 0x38
 80068ca:	e00b      	b.n	80068e4 <_dtoa_r+0x254>
 80068cc:	2301      	movs	r3, #1
 80068ce:	e7f3      	b.n	80068b8 <_dtoa_r+0x228>
 80068d0:	2300      	movs	r3, #0
 80068d2:	930b      	str	r3, [sp, #44]	@ 0x2c
 80068d4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80068d6:	18fb      	adds	r3, r7, r3
 80068d8:	9300      	str	r3, [sp, #0]
 80068da:	3301      	adds	r3, #1
 80068dc:	2b01      	cmp	r3, #1
 80068de:	9307      	str	r3, [sp, #28]
 80068e0:	bfb8      	it	lt
 80068e2:	2301      	movlt	r3, #1
 80068e4:	f8db 001c 	ldr.w	r0, [fp, #28]
 80068e8:	2100      	movs	r1, #0
 80068ea:	2204      	movs	r2, #4
 80068ec:	f102 0514 	add.w	r5, r2, #20
 80068f0:	429d      	cmp	r5, r3
 80068f2:	d91f      	bls.n	8006934 <_dtoa_r+0x2a4>
 80068f4:	6041      	str	r1, [r0, #4]
 80068f6:	4658      	mov	r0, fp
 80068f8:	f000 fedc 	bl	80076b4 <_Balloc>
 80068fc:	4682      	mov	sl, r0
 80068fe:	2800      	cmp	r0, #0
 8006900:	d13c      	bne.n	800697c <_dtoa_r+0x2ec>
 8006902:	4b1b      	ldr	r3, [pc, #108]	@ (8006970 <_dtoa_r+0x2e0>)
 8006904:	4602      	mov	r2, r0
 8006906:	f240 11af 	movw	r1, #431	@ 0x1af
 800690a:	e6d8      	b.n	80066be <_dtoa_r+0x2e>
 800690c:	2301      	movs	r3, #1
 800690e:	e7e0      	b.n	80068d2 <_dtoa_r+0x242>
 8006910:	2401      	movs	r4, #1
 8006912:	2300      	movs	r3, #0
 8006914:	9309      	str	r3, [sp, #36]	@ 0x24
 8006916:	940b      	str	r4, [sp, #44]	@ 0x2c
 8006918:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 800691c:	9300      	str	r3, [sp, #0]
 800691e:	9307      	str	r3, [sp, #28]
 8006920:	2200      	movs	r2, #0
 8006922:	2312      	movs	r3, #18
 8006924:	e7d0      	b.n	80068c8 <_dtoa_r+0x238>
 8006926:	2301      	movs	r3, #1
 8006928:	930b      	str	r3, [sp, #44]	@ 0x2c
 800692a:	e7f5      	b.n	8006918 <_dtoa_r+0x288>
 800692c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800692e:	9300      	str	r3, [sp, #0]
 8006930:	9307      	str	r3, [sp, #28]
 8006932:	e7d7      	b.n	80068e4 <_dtoa_r+0x254>
 8006934:	3101      	adds	r1, #1
 8006936:	0052      	lsls	r2, r2, #1
 8006938:	e7d8      	b.n	80068ec <_dtoa_r+0x25c>
 800693a:	bf00      	nop
 800693c:	f3af 8000 	nop.w
 8006940:	636f4361 	.word	0x636f4361
 8006944:	3fd287a7 	.word	0x3fd287a7
 8006948:	8b60c8b3 	.word	0x8b60c8b3
 800694c:	3fc68a28 	.word	0x3fc68a28
 8006950:	509f79fb 	.word	0x509f79fb
 8006954:	3fd34413 	.word	0x3fd34413
 8006958:	08008759 	.word	0x08008759
 800695c:	08008770 	.word	0x08008770
 8006960:	7ff00000 	.word	0x7ff00000
 8006964:	08008729 	.word	0x08008729
 8006968:	3ff80000 	.word	0x3ff80000
 800696c:	08008878 	.word	0x08008878
 8006970:	080087c8 	.word	0x080087c8
 8006974:	08008755 	.word	0x08008755
 8006978:	08008728 	.word	0x08008728
 800697c:	f8db 301c 	ldr.w	r3, [fp, #28]
 8006980:	6018      	str	r0, [r3, #0]
 8006982:	9b07      	ldr	r3, [sp, #28]
 8006984:	2b0e      	cmp	r3, #14
 8006986:	f200 80a4 	bhi.w	8006ad2 <_dtoa_r+0x442>
 800698a:	2c00      	cmp	r4, #0
 800698c:	f000 80a1 	beq.w	8006ad2 <_dtoa_r+0x442>
 8006990:	2f00      	cmp	r7, #0
 8006992:	dd33      	ble.n	80069fc <_dtoa_r+0x36c>
 8006994:	4bad      	ldr	r3, [pc, #692]	@ (8006c4c <_dtoa_r+0x5bc>)
 8006996:	f007 020f 	and.w	r2, r7, #15
 800699a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800699e:	ed93 7b00 	vldr	d7, [r3]
 80069a2:	05f8      	lsls	r0, r7, #23
 80069a4:	ed8d 7b04 	vstr	d7, [sp, #16]
 80069a8:	ea4f 1427 	mov.w	r4, r7, asr #4
 80069ac:	d516      	bpl.n	80069dc <_dtoa_r+0x34c>
 80069ae:	4ba8      	ldr	r3, [pc, #672]	@ (8006c50 <_dtoa_r+0x5c0>)
 80069b0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 80069b4:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 80069b8:	f7f9 ff68 	bl	800088c <__aeabi_ddiv>
 80069bc:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80069c0:	f004 040f 	and.w	r4, r4, #15
 80069c4:	2603      	movs	r6, #3
 80069c6:	4da2      	ldr	r5, [pc, #648]	@ (8006c50 <_dtoa_r+0x5c0>)
 80069c8:	b954      	cbnz	r4, 80069e0 <_dtoa_r+0x350>
 80069ca:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80069ce:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80069d2:	f7f9 ff5b 	bl	800088c <__aeabi_ddiv>
 80069d6:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80069da:	e028      	b.n	8006a2e <_dtoa_r+0x39e>
 80069dc:	2602      	movs	r6, #2
 80069de:	e7f2      	b.n	80069c6 <_dtoa_r+0x336>
 80069e0:	07e1      	lsls	r1, r4, #31
 80069e2:	d508      	bpl.n	80069f6 <_dtoa_r+0x366>
 80069e4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80069e8:	e9d5 2300 	ldrd	r2, r3, [r5]
 80069ec:	f7f9 fe24 	bl	8000638 <__aeabi_dmul>
 80069f0:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80069f4:	3601      	adds	r6, #1
 80069f6:	1064      	asrs	r4, r4, #1
 80069f8:	3508      	adds	r5, #8
 80069fa:	e7e5      	b.n	80069c8 <_dtoa_r+0x338>
 80069fc:	f000 80d2 	beq.w	8006ba4 <_dtoa_r+0x514>
 8006a00:	427c      	negs	r4, r7
 8006a02:	4b92      	ldr	r3, [pc, #584]	@ (8006c4c <_dtoa_r+0x5bc>)
 8006a04:	4d92      	ldr	r5, [pc, #584]	@ (8006c50 <_dtoa_r+0x5c0>)
 8006a06:	f004 020f 	and.w	r2, r4, #15
 8006a0a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8006a0e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006a12:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8006a16:	f7f9 fe0f 	bl	8000638 <__aeabi_dmul>
 8006a1a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8006a1e:	1124      	asrs	r4, r4, #4
 8006a20:	2300      	movs	r3, #0
 8006a22:	2602      	movs	r6, #2
 8006a24:	2c00      	cmp	r4, #0
 8006a26:	f040 80b2 	bne.w	8006b8e <_dtoa_r+0x4fe>
 8006a2a:	2b00      	cmp	r3, #0
 8006a2c:	d1d3      	bne.n	80069d6 <_dtoa_r+0x346>
 8006a2e:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8006a30:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8006a34:	2b00      	cmp	r3, #0
 8006a36:	f000 80b7 	beq.w	8006ba8 <_dtoa_r+0x518>
 8006a3a:	4b86      	ldr	r3, [pc, #536]	@ (8006c54 <_dtoa_r+0x5c4>)
 8006a3c:	2200      	movs	r2, #0
 8006a3e:	4620      	mov	r0, r4
 8006a40:	4629      	mov	r1, r5
 8006a42:	f7fa f86b 	bl	8000b1c <__aeabi_dcmplt>
 8006a46:	2800      	cmp	r0, #0
 8006a48:	f000 80ae 	beq.w	8006ba8 <_dtoa_r+0x518>
 8006a4c:	9b07      	ldr	r3, [sp, #28]
 8006a4e:	2b00      	cmp	r3, #0
 8006a50:	f000 80aa 	beq.w	8006ba8 <_dtoa_r+0x518>
 8006a54:	9b00      	ldr	r3, [sp, #0]
 8006a56:	2b00      	cmp	r3, #0
 8006a58:	dd37      	ble.n	8006aca <_dtoa_r+0x43a>
 8006a5a:	1e7b      	subs	r3, r7, #1
 8006a5c:	9304      	str	r3, [sp, #16]
 8006a5e:	4620      	mov	r0, r4
 8006a60:	4b7d      	ldr	r3, [pc, #500]	@ (8006c58 <_dtoa_r+0x5c8>)
 8006a62:	2200      	movs	r2, #0
 8006a64:	4629      	mov	r1, r5
 8006a66:	f7f9 fde7 	bl	8000638 <__aeabi_dmul>
 8006a6a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8006a6e:	9c00      	ldr	r4, [sp, #0]
 8006a70:	3601      	adds	r6, #1
 8006a72:	4630      	mov	r0, r6
 8006a74:	f7f9 fd76 	bl	8000564 <__aeabi_i2d>
 8006a78:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8006a7c:	f7f9 fddc 	bl	8000638 <__aeabi_dmul>
 8006a80:	4b76      	ldr	r3, [pc, #472]	@ (8006c5c <_dtoa_r+0x5cc>)
 8006a82:	2200      	movs	r2, #0
 8006a84:	f7f9 fc22 	bl	80002cc <__adddf3>
 8006a88:	4605      	mov	r5, r0
 8006a8a:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8006a8e:	2c00      	cmp	r4, #0
 8006a90:	f040 808d 	bne.w	8006bae <_dtoa_r+0x51e>
 8006a94:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006a98:	4b71      	ldr	r3, [pc, #452]	@ (8006c60 <_dtoa_r+0x5d0>)
 8006a9a:	2200      	movs	r2, #0
 8006a9c:	f7f9 fc14 	bl	80002c8 <__aeabi_dsub>
 8006aa0:	4602      	mov	r2, r0
 8006aa2:	460b      	mov	r3, r1
 8006aa4:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8006aa8:	462a      	mov	r2, r5
 8006aaa:	4633      	mov	r3, r6
 8006aac:	f7fa f854 	bl	8000b58 <__aeabi_dcmpgt>
 8006ab0:	2800      	cmp	r0, #0
 8006ab2:	f040 828b 	bne.w	8006fcc <_dtoa_r+0x93c>
 8006ab6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006aba:	462a      	mov	r2, r5
 8006abc:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8006ac0:	f7fa f82c 	bl	8000b1c <__aeabi_dcmplt>
 8006ac4:	2800      	cmp	r0, #0
 8006ac6:	f040 8128 	bne.w	8006d1a <_dtoa_r+0x68a>
 8006aca:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 8006ace:	e9cd 3402 	strd	r3, r4, [sp, #8]
 8006ad2:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8006ad4:	2b00      	cmp	r3, #0
 8006ad6:	f2c0 815a 	blt.w	8006d8e <_dtoa_r+0x6fe>
 8006ada:	2f0e      	cmp	r7, #14
 8006adc:	f300 8157 	bgt.w	8006d8e <_dtoa_r+0x6fe>
 8006ae0:	4b5a      	ldr	r3, [pc, #360]	@ (8006c4c <_dtoa_r+0x5bc>)
 8006ae2:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8006ae6:	ed93 7b00 	vldr	d7, [r3]
 8006aea:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8006aec:	2b00      	cmp	r3, #0
 8006aee:	ed8d 7b00 	vstr	d7, [sp]
 8006af2:	da03      	bge.n	8006afc <_dtoa_r+0x46c>
 8006af4:	9b07      	ldr	r3, [sp, #28]
 8006af6:	2b00      	cmp	r3, #0
 8006af8:	f340 8101 	ble.w	8006cfe <_dtoa_r+0x66e>
 8006afc:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8006b00:	4656      	mov	r6, sl
 8006b02:	e9dd 2300 	ldrd	r2, r3, [sp]
 8006b06:	4620      	mov	r0, r4
 8006b08:	4629      	mov	r1, r5
 8006b0a:	f7f9 febf 	bl	800088c <__aeabi_ddiv>
 8006b0e:	f7fa f843 	bl	8000b98 <__aeabi_d2iz>
 8006b12:	4680      	mov	r8, r0
 8006b14:	f7f9 fd26 	bl	8000564 <__aeabi_i2d>
 8006b18:	e9dd 2300 	ldrd	r2, r3, [sp]
 8006b1c:	f7f9 fd8c 	bl	8000638 <__aeabi_dmul>
 8006b20:	4602      	mov	r2, r0
 8006b22:	460b      	mov	r3, r1
 8006b24:	4620      	mov	r0, r4
 8006b26:	4629      	mov	r1, r5
 8006b28:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8006b2c:	f7f9 fbcc 	bl	80002c8 <__aeabi_dsub>
 8006b30:	f806 4b01 	strb.w	r4, [r6], #1
 8006b34:	9d07      	ldr	r5, [sp, #28]
 8006b36:	eba6 040a 	sub.w	r4, r6, sl
 8006b3a:	42a5      	cmp	r5, r4
 8006b3c:	4602      	mov	r2, r0
 8006b3e:	460b      	mov	r3, r1
 8006b40:	f040 8117 	bne.w	8006d72 <_dtoa_r+0x6e2>
 8006b44:	f7f9 fbc2 	bl	80002cc <__adddf3>
 8006b48:	e9dd 2300 	ldrd	r2, r3, [sp]
 8006b4c:	4604      	mov	r4, r0
 8006b4e:	460d      	mov	r5, r1
 8006b50:	f7fa f802 	bl	8000b58 <__aeabi_dcmpgt>
 8006b54:	2800      	cmp	r0, #0
 8006b56:	f040 80f9 	bne.w	8006d4c <_dtoa_r+0x6bc>
 8006b5a:	e9dd 2300 	ldrd	r2, r3, [sp]
 8006b5e:	4620      	mov	r0, r4
 8006b60:	4629      	mov	r1, r5
 8006b62:	f7f9 ffd1 	bl	8000b08 <__aeabi_dcmpeq>
 8006b66:	b118      	cbz	r0, 8006b70 <_dtoa_r+0x4e0>
 8006b68:	f018 0f01 	tst.w	r8, #1
 8006b6c:	f040 80ee 	bne.w	8006d4c <_dtoa_r+0x6bc>
 8006b70:	4649      	mov	r1, r9
 8006b72:	4658      	mov	r0, fp
 8006b74:	f000 fdde 	bl	8007734 <_Bfree>
 8006b78:	2300      	movs	r3, #0
 8006b7a:	7033      	strb	r3, [r6, #0]
 8006b7c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8006b7e:	3701      	adds	r7, #1
 8006b80:	601f      	str	r7, [r3, #0]
 8006b82:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8006b84:	2b00      	cmp	r3, #0
 8006b86:	f000 831d 	beq.w	80071c4 <_dtoa_r+0xb34>
 8006b8a:	601e      	str	r6, [r3, #0]
 8006b8c:	e31a      	b.n	80071c4 <_dtoa_r+0xb34>
 8006b8e:	07e2      	lsls	r2, r4, #31
 8006b90:	d505      	bpl.n	8006b9e <_dtoa_r+0x50e>
 8006b92:	e9d5 2300 	ldrd	r2, r3, [r5]
 8006b96:	f7f9 fd4f 	bl	8000638 <__aeabi_dmul>
 8006b9a:	3601      	adds	r6, #1
 8006b9c:	2301      	movs	r3, #1
 8006b9e:	1064      	asrs	r4, r4, #1
 8006ba0:	3508      	adds	r5, #8
 8006ba2:	e73f      	b.n	8006a24 <_dtoa_r+0x394>
 8006ba4:	2602      	movs	r6, #2
 8006ba6:	e742      	b.n	8006a2e <_dtoa_r+0x39e>
 8006ba8:	9c07      	ldr	r4, [sp, #28]
 8006baa:	9704      	str	r7, [sp, #16]
 8006bac:	e761      	b.n	8006a72 <_dtoa_r+0x3e2>
 8006bae:	4b27      	ldr	r3, [pc, #156]	@ (8006c4c <_dtoa_r+0x5bc>)
 8006bb0:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8006bb2:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8006bb6:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8006bba:	4454      	add	r4, sl
 8006bbc:	2900      	cmp	r1, #0
 8006bbe:	d053      	beq.n	8006c68 <_dtoa_r+0x5d8>
 8006bc0:	4928      	ldr	r1, [pc, #160]	@ (8006c64 <_dtoa_r+0x5d4>)
 8006bc2:	2000      	movs	r0, #0
 8006bc4:	f7f9 fe62 	bl	800088c <__aeabi_ddiv>
 8006bc8:	4633      	mov	r3, r6
 8006bca:	462a      	mov	r2, r5
 8006bcc:	f7f9 fb7c 	bl	80002c8 <__aeabi_dsub>
 8006bd0:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8006bd4:	4656      	mov	r6, sl
 8006bd6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006bda:	f7f9 ffdd 	bl	8000b98 <__aeabi_d2iz>
 8006bde:	4605      	mov	r5, r0
 8006be0:	f7f9 fcc0 	bl	8000564 <__aeabi_i2d>
 8006be4:	4602      	mov	r2, r0
 8006be6:	460b      	mov	r3, r1
 8006be8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006bec:	f7f9 fb6c 	bl	80002c8 <__aeabi_dsub>
 8006bf0:	3530      	adds	r5, #48	@ 0x30
 8006bf2:	4602      	mov	r2, r0
 8006bf4:	460b      	mov	r3, r1
 8006bf6:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8006bfa:	f806 5b01 	strb.w	r5, [r6], #1
 8006bfe:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8006c02:	f7f9 ff8b 	bl	8000b1c <__aeabi_dcmplt>
 8006c06:	2800      	cmp	r0, #0
 8006c08:	d171      	bne.n	8006cee <_dtoa_r+0x65e>
 8006c0a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8006c0e:	4911      	ldr	r1, [pc, #68]	@ (8006c54 <_dtoa_r+0x5c4>)
 8006c10:	2000      	movs	r0, #0
 8006c12:	f7f9 fb59 	bl	80002c8 <__aeabi_dsub>
 8006c16:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8006c1a:	f7f9 ff7f 	bl	8000b1c <__aeabi_dcmplt>
 8006c1e:	2800      	cmp	r0, #0
 8006c20:	f040 8095 	bne.w	8006d4e <_dtoa_r+0x6be>
 8006c24:	42a6      	cmp	r6, r4
 8006c26:	f43f af50 	beq.w	8006aca <_dtoa_r+0x43a>
 8006c2a:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8006c2e:	4b0a      	ldr	r3, [pc, #40]	@ (8006c58 <_dtoa_r+0x5c8>)
 8006c30:	2200      	movs	r2, #0
 8006c32:	f7f9 fd01 	bl	8000638 <__aeabi_dmul>
 8006c36:	4b08      	ldr	r3, [pc, #32]	@ (8006c58 <_dtoa_r+0x5c8>)
 8006c38:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8006c3c:	2200      	movs	r2, #0
 8006c3e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006c42:	f7f9 fcf9 	bl	8000638 <__aeabi_dmul>
 8006c46:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8006c4a:	e7c4      	b.n	8006bd6 <_dtoa_r+0x546>
 8006c4c:	08008878 	.word	0x08008878
 8006c50:	08008850 	.word	0x08008850
 8006c54:	3ff00000 	.word	0x3ff00000
 8006c58:	40240000 	.word	0x40240000
 8006c5c:	401c0000 	.word	0x401c0000
 8006c60:	40140000 	.word	0x40140000
 8006c64:	3fe00000 	.word	0x3fe00000
 8006c68:	4631      	mov	r1, r6
 8006c6a:	4628      	mov	r0, r5
 8006c6c:	f7f9 fce4 	bl	8000638 <__aeabi_dmul>
 8006c70:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8006c74:	9415      	str	r4, [sp, #84]	@ 0x54
 8006c76:	4656      	mov	r6, sl
 8006c78:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006c7c:	f7f9 ff8c 	bl	8000b98 <__aeabi_d2iz>
 8006c80:	4605      	mov	r5, r0
 8006c82:	f7f9 fc6f 	bl	8000564 <__aeabi_i2d>
 8006c86:	4602      	mov	r2, r0
 8006c88:	460b      	mov	r3, r1
 8006c8a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006c8e:	f7f9 fb1b 	bl	80002c8 <__aeabi_dsub>
 8006c92:	3530      	adds	r5, #48	@ 0x30
 8006c94:	f806 5b01 	strb.w	r5, [r6], #1
 8006c98:	4602      	mov	r2, r0
 8006c9a:	460b      	mov	r3, r1
 8006c9c:	42a6      	cmp	r6, r4
 8006c9e:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8006ca2:	f04f 0200 	mov.w	r2, #0
 8006ca6:	d124      	bne.n	8006cf2 <_dtoa_r+0x662>
 8006ca8:	4bac      	ldr	r3, [pc, #688]	@ (8006f5c <_dtoa_r+0x8cc>)
 8006caa:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8006cae:	f7f9 fb0d 	bl	80002cc <__adddf3>
 8006cb2:	4602      	mov	r2, r0
 8006cb4:	460b      	mov	r3, r1
 8006cb6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006cba:	f7f9 ff4d 	bl	8000b58 <__aeabi_dcmpgt>
 8006cbe:	2800      	cmp	r0, #0
 8006cc0:	d145      	bne.n	8006d4e <_dtoa_r+0x6be>
 8006cc2:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8006cc6:	49a5      	ldr	r1, [pc, #660]	@ (8006f5c <_dtoa_r+0x8cc>)
 8006cc8:	2000      	movs	r0, #0
 8006cca:	f7f9 fafd 	bl	80002c8 <__aeabi_dsub>
 8006cce:	4602      	mov	r2, r0
 8006cd0:	460b      	mov	r3, r1
 8006cd2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8006cd6:	f7f9 ff21 	bl	8000b1c <__aeabi_dcmplt>
 8006cda:	2800      	cmp	r0, #0
 8006cdc:	f43f aef5 	beq.w	8006aca <_dtoa_r+0x43a>
 8006ce0:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8006ce2:	1e73      	subs	r3, r6, #1
 8006ce4:	9315      	str	r3, [sp, #84]	@ 0x54
 8006ce6:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8006cea:	2b30      	cmp	r3, #48	@ 0x30
 8006cec:	d0f8      	beq.n	8006ce0 <_dtoa_r+0x650>
 8006cee:	9f04      	ldr	r7, [sp, #16]
 8006cf0:	e73e      	b.n	8006b70 <_dtoa_r+0x4e0>
 8006cf2:	4b9b      	ldr	r3, [pc, #620]	@ (8006f60 <_dtoa_r+0x8d0>)
 8006cf4:	f7f9 fca0 	bl	8000638 <__aeabi_dmul>
 8006cf8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8006cfc:	e7bc      	b.n	8006c78 <_dtoa_r+0x5e8>
 8006cfe:	d10c      	bne.n	8006d1a <_dtoa_r+0x68a>
 8006d00:	4b98      	ldr	r3, [pc, #608]	@ (8006f64 <_dtoa_r+0x8d4>)
 8006d02:	2200      	movs	r2, #0
 8006d04:	e9dd 0100 	ldrd	r0, r1, [sp]
 8006d08:	f7f9 fc96 	bl	8000638 <__aeabi_dmul>
 8006d0c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8006d10:	f7f9 ff18 	bl	8000b44 <__aeabi_dcmpge>
 8006d14:	2800      	cmp	r0, #0
 8006d16:	f000 8157 	beq.w	8006fc8 <_dtoa_r+0x938>
 8006d1a:	2400      	movs	r4, #0
 8006d1c:	4625      	mov	r5, r4
 8006d1e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8006d20:	43db      	mvns	r3, r3
 8006d22:	9304      	str	r3, [sp, #16]
 8006d24:	4656      	mov	r6, sl
 8006d26:	2700      	movs	r7, #0
 8006d28:	4621      	mov	r1, r4
 8006d2a:	4658      	mov	r0, fp
 8006d2c:	f000 fd02 	bl	8007734 <_Bfree>
 8006d30:	2d00      	cmp	r5, #0
 8006d32:	d0dc      	beq.n	8006cee <_dtoa_r+0x65e>
 8006d34:	b12f      	cbz	r7, 8006d42 <_dtoa_r+0x6b2>
 8006d36:	42af      	cmp	r7, r5
 8006d38:	d003      	beq.n	8006d42 <_dtoa_r+0x6b2>
 8006d3a:	4639      	mov	r1, r7
 8006d3c:	4658      	mov	r0, fp
 8006d3e:	f000 fcf9 	bl	8007734 <_Bfree>
 8006d42:	4629      	mov	r1, r5
 8006d44:	4658      	mov	r0, fp
 8006d46:	f000 fcf5 	bl	8007734 <_Bfree>
 8006d4a:	e7d0      	b.n	8006cee <_dtoa_r+0x65e>
 8006d4c:	9704      	str	r7, [sp, #16]
 8006d4e:	4633      	mov	r3, r6
 8006d50:	461e      	mov	r6, r3
 8006d52:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8006d56:	2a39      	cmp	r2, #57	@ 0x39
 8006d58:	d107      	bne.n	8006d6a <_dtoa_r+0x6da>
 8006d5a:	459a      	cmp	sl, r3
 8006d5c:	d1f8      	bne.n	8006d50 <_dtoa_r+0x6c0>
 8006d5e:	9a04      	ldr	r2, [sp, #16]
 8006d60:	3201      	adds	r2, #1
 8006d62:	9204      	str	r2, [sp, #16]
 8006d64:	2230      	movs	r2, #48	@ 0x30
 8006d66:	f88a 2000 	strb.w	r2, [sl]
 8006d6a:	781a      	ldrb	r2, [r3, #0]
 8006d6c:	3201      	adds	r2, #1
 8006d6e:	701a      	strb	r2, [r3, #0]
 8006d70:	e7bd      	b.n	8006cee <_dtoa_r+0x65e>
 8006d72:	4b7b      	ldr	r3, [pc, #492]	@ (8006f60 <_dtoa_r+0x8d0>)
 8006d74:	2200      	movs	r2, #0
 8006d76:	f7f9 fc5f 	bl	8000638 <__aeabi_dmul>
 8006d7a:	2200      	movs	r2, #0
 8006d7c:	2300      	movs	r3, #0
 8006d7e:	4604      	mov	r4, r0
 8006d80:	460d      	mov	r5, r1
 8006d82:	f7f9 fec1 	bl	8000b08 <__aeabi_dcmpeq>
 8006d86:	2800      	cmp	r0, #0
 8006d88:	f43f aebb 	beq.w	8006b02 <_dtoa_r+0x472>
 8006d8c:	e6f0      	b.n	8006b70 <_dtoa_r+0x4e0>
 8006d8e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8006d90:	2a00      	cmp	r2, #0
 8006d92:	f000 80db 	beq.w	8006f4c <_dtoa_r+0x8bc>
 8006d96:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8006d98:	2a01      	cmp	r2, #1
 8006d9a:	f300 80bf 	bgt.w	8006f1c <_dtoa_r+0x88c>
 8006d9e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8006da0:	2a00      	cmp	r2, #0
 8006da2:	f000 80b7 	beq.w	8006f14 <_dtoa_r+0x884>
 8006da6:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8006daa:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8006dac:	4646      	mov	r6, r8
 8006dae:	9a08      	ldr	r2, [sp, #32]
 8006db0:	2101      	movs	r1, #1
 8006db2:	441a      	add	r2, r3
 8006db4:	4658      	mov	r0, fp
 8006db6:	4498      	add	r8, r3
 8006db8:	9208      	str	r2, [sp, #32]
 8006dba:	f000 fd6f 	bl	800789c <__i2b>
 8006dbe:	4605      	mov	r5, r0
 8006dc0:	b15e      	cbz	r6, 8006dda <_dtoa_r+0x74a>
 8006dc2:	9b08      	ldr	r3, [sp, #32]
 8006dc4:	2b00      	cmp	r3, #0
 8006dc6:	dd08      	ble.n	8006dda <_dtoa_r+0x74a>
 8006dc8:	42b3      	cmp	r3, r6
 8006dca:	9a08      	ldr	r2, [sp, #32]
 8006dcc:	bfa8      	it	ge
 8006dce:	4633      	movge	r3, r6
 8006dd0:	eba8 0803 	sub.w	r8, r8, r3
 8006dd4:	1af6      	subs	r6, r6, r3
 8006dd6:	1ad3      	subs	r3, r2, r3
 8006dd8:	9308      	str	r3, [sp, #32]
 8006dda:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8006ddc:	b1f3      	cbz	r3, 8006e1c <_dtoa_r+0x78c>
 8006dde:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8006de0:	2b00      	cmp	r3, #0
 8006de2:	f000 80b7 	beq.w	8006f54 <_dtoa_r+0x8c4>
 8006de6:	b18c      	cbz	r4, 8006e0c <_dtoa_r+0x77c>
 8006de8:	4629      	mov	r1, r5
 8006dea:	4622      	mov	r2, r4
 8006dec:	4658      	mov	r0, fp
 8006dee:	f000 fe15 	bl	8007a1c <__pow5mult>
 8006df2:	464a      	mov	r2, r9
 8006df4:	4601      	mov	r1, r0
 8006df6:	4605      	mov	r5, r0
 8006df8:	4658      	mov	r0, fp
 8006dfa:	f000 fd65 	bl	80078c8 <__multiply>
 8006dfe:	4649      	mov	r1, r9
 8006e00:	9004      	str	r0, [sp, #16]
 8006e02:	4658      	mov	r0, fp
 8006e04:	f000 fc96 	bl	8007734 <_Bfree>
 8006e08:	9b04      	ldr	r3, [sp, #16]
 8006e0a:	4699      	mov	r9, r3
 8006e0c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8006e0e:	1b1a      	subs	r2, r3, r4
 8006e10:	d004      	beq.n	8006e1c <_dtoa_r+0x78c>
 8006e12:	4649      	mov	r1, r9
 8006e14:	4658      	mov	r0, fp
 8006e16:	f000 fe01 	bl	8007a1c <__pow5mult>
 8006e1a:	4681      	mov	r9, r0
 8006e1c:	2101      	movs	r1, #1
 8006e1e:	4658      	mov	r0, fp
 8006e20:	f000 fd3c 	bl	800789c <__i2b>
 8006e24:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8006e26:	4604      	mov	r4, r0
 8006e28:	2b00      	cmp	r3, #0
 8006e2a:	f000 81cf 	beq.w	80071cc <_dtoa_r+0xb3c>
 8006e2e:	461a      	mov	r2, r3
 8006e30:	4601      	mov	r1, r0
 8006e32:	4658      	mov	r0, fp
 8006e34:	f000 fdf2 	bl	8007a1c <__pow5mult>
 8006e38:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006e3a:	2b01      	cmp	r3, #1
 8006e3c:	4604      	mov	r4, r0
 8006e3e:	f300 8095 	bgt.w	8006f6c <_dtoa_r+0x8dc>
 8006e42:	9b02      	ldr	r3, [sp, #8]
 8006e44:	2b00      	cmp	r3, #0
 8006e46:	f040 8087 	bne.w	8006f58 <_dtoa_r+0x8c8>
 8006e4a:	9b03      	ldr	r3, [sp, #12]
 8006e4c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8006e50:	2b00      	cmp	r3, #0
 8006e52:	f040 8089 	bne.w	8006f68 <_dtoa_r+0x8d8>
 8006e56:	9b03      	ldr	r3, [sp, #12]
 8006e58:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8006e5c:	0d1b      	lsrs	r3, r3, #20
 8006e5e:	051b      	lsls	r3, r3, #20
 8006e60:	b12b      	cbz	r3, 8006e6e <_dtoa_r+0x7de>
 8006e62:	9b08      	ldr	r3, [sp, #32]
 8006e64:	3301      	adds	r3, #1
 8006e66:	9308      	str	r3, [sp, #32]
 8006e68:	f108 0801 	add.w	r8, r8, #1
 8006e6c:	2301      	movs	r3, #1
 8006e6e:	930a      	str	r3, [sp, #40]	@ 0x28
 8006e70:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8006e72:	2b00      	cmp	r3, #0
 8006e74:	f000 81b0 	beq.w	80071d8 <_dtoa_r+0xb48>
 8006e78:	6923      	ldr	r3, [r4, #16]
 8006e7a:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8006e7e:	6918      	ldr	r0, [r3, #16]
 8006e80:	f000 fcc0 	bl	8007804 <__hi0bits>
 8006e84:	f1c0 0020 	rsb	r0, r0, #32
 8006e88:	9b08      	ldr	r3, [sp, #32]
 8006e8a:	4418      	add	r0, r3
 8006e8c:	f010 001f 	ands.w	r0, r0, #31
 8006e90:	d077      	beq.n	8006f82 <_dtoa_r+0x8f2>
 8006e92:	f1c0 0320 	rsb	r3, r0, #32
 8006e96:	2b04      	cmp	r3, #4
 8006e98:	dd6b      	ble.n	8006f72 <_dtoa_r+0x8e2>
 8006e9a:	9b08      	ldr	r3, [sp, #32]
 8006e9c:	f1c0 001c 	rsb	r0, r0, #28
 8006ea0:	4403      	add	r3, r0
 8006ea2:	4480      	add	r8, r0
 8006ea4:	4406      	add	r6, r0
 8006ea6:	9308      	str	r3, [sp, #32]
 8006ea8:	f1b8 0f00 	cmp.w	r8, #0
 8006eac:	dd05      	ble.n	8006eba <_dtoa_r+0x82a>
 8006eae:	4649      	mov	r1, r9
 8006eb0:	4642      	mov	r2, r8
 8006eb2:	4658      	mov	r0, fp
 8006eb4:	f000 fe0c 	bl	8007ad0 <__lshift>
 8006eb8:	4681      	mov	r9, r0
 8006eba:	9b08      	ldr	r3, [sp, #32]
 8006ebc:	2b00      	cmp	r3, #0
 8006ebe:	dd05      	ble.n	8006ecc <_dtoa_r+0x83c>
 8006ec0:	4621      	mov	r1, r4
 8006ec2:	461a      	mov	r2, r3
 8006ec4:	4658      	mov	r0, fp
 8006ec6:	f000 fe03 	bl	8007ad0 <__lshift>
 8006eca:	4604      	mov	r4, r0
 8006ecc:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8006ece:	2b00      	cmp	r3, #0
 8006ed0:	d059      	beq.n	8006f86 <_dtoa_r+0x8f6>
 8006ed2:	4621      	mov	r1, r4
 8006ed4:	4648      	mov	r0, r9
 8006ed6:	f000 fe67 	bl	8007ba8 <__mcmp>
 8006eda:	2800      	cmp	r0, #0
 8006edc:	da53      	bge.n	8006f86 <_dtoa_r+0x8f6>
 8006ede:	1e7b      	subs	r3, r7, #1
 8006ee0:	9304      	str	r3, [sp, #16]
 8006ee2:	4649      	mov	r1, r9
 8006ee4:	2300      	movs	r3, #0
 8006ee6:	220a      	movs	r2, #10
 8006ee8:	4658      	mov	r0, fp
 8006eea:	f000 fc45 	bl	8007778 <__multadd>
 8006eee:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8006ef0:	4681      	mov	r9, r0
 8006ef2:	2b00      	cmp	r3, #0
 8006ef4:	f000 8172 	beq.w	80071dc <_dtoa_r+0xb4c>
 8006ef8:	2300      	movs	r3, #0
 8006efa:	4629      	mov	r1, r5
 8006efc:	220a      	movs	r2, #10
 8006efe:	4658      	mov	r0, fp
 8006f00:	f000 fc3a 	bl	8007778 <__multadd>
 8006f04:	9b00      	ldr	r3, [sp, #0]
 8006f06:	2b00      	cmp	r3, #0
 8006f08:	4605      	mov	r5, r0
 8006f0a:	dc67      	bgt.n	8006fdc <_dtoa_r+0x94c>
 8006f0c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006f0e:	2b02      	cmp	r3, #2
 8006f10:	dc41      	bgt.n	8006f96 <_dtoa_r+0x906>
 8006f12:	e063      	b.n	8006fdc <_dtoa_r+0x94c>
 8006f14:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8006f16:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8006f1a:	e746      	b.n	8006daa <_dtoa_r+0x71a>
 8006f1c:	9b07      	ldr	r3, [sp, #28]
 8006f1e:	1e5c      	subs	r4, r3, #1
 8006f20:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8006f22:	42a3      	cmp	r3, r4
 8006f24:	bfbf      	itttt	lt
 8006f26:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 8006f28:	9a0f      	ldrlt	r2, [sp, #60]	@ 0x3c
 8006f2a:	940a      	strlt	r4, [sp, #40]	@ 0x28
 8006f2c:	1ae3      	sublt	r3, r4, r3
 8006f2e:	bfb4      	ite	lt
 8006f30:	18d2      	addlt	r2, r2, r3
 8006f32:	1b1c      	subge	r4, r3, r4
 8006f34:	9b07      	ldr	r3, [sp, #28]
 8006f36:	bfbc      	itt	lt
 8006f38:	920f      	strlt	r2, [sp, #60]	@ 0x3c
 8006f3a:	2400      	movlt	r4, #0
 8006f3c:	2b00      	cmp	r3, #0
 8006f3e:	bfb5      	itete	lt
 8006f40:	eba8 0603 	sublt.w	r6, r8, r3
 8006f44:	9b07      	ldrge	r3, [sp, #28]
 8006f46:	2300      	movlt	r3, #0
 8006f48:	4646      	movge	r6, r8
 8006f4a:	e730      	b.n	8006dae <_dtoa_r+0x71e>
 8006f4c:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8006f4e:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8006f50:	4646      	mov	r6, r8
 8006f52:	e735      	b.n	8006dc0 <_dtoa_r+0x730>
 8006f54:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8006f56:	e75c      	b.n	8006e12 <_dtoa_r+0x782>
 8006f58:	2300      	movs	r3, #0
 8006f5a:	e788      	b.n	8006e6e <_dtoa_r+0x7de>
 8006f5c:	3fe00000 	.word	0x3fe00000
 8006f60:	40240000 	.word	0x40240000
 8006f64:	40140000 	.word	0x40140000
 8006f68:	9b02      	ldr	r3, [sp, #8]
 8006f6a:	e780      	b.n	8006e6e <_dtoa_r+0x7de>
 8006f6c:	2300      	movs	r3, #0
 8006f6e:	930a      	str	r3, [sp, #40]	@ 0x28
 8006f70:	e782      	b.n	8006e78 <_dtoa_r+0x7e8>
 8006f72:	d099      	beq.n	8006ea8 <_dtoa_r+0x818>
 8006f74:	9a08      	ldr	r2, [sp, #32]
 8006f76:	331c      	adds	r3, #28
 8006f78:	441a      	add	r2, r3
 8006f7a:	4498      	add	r8, r3
 8006f7c:	441e      	add	r6, r3
 8006f7e:	9208      	str	r2, [sp, #32]
 8006f80:	e792      	b.n	8006ea8 <_dtoa_r+0x818>
 8006f82:	4603      	mov	r3, r0
 8006f84:	e7f6      	b.n	8006f74 <_dtoa_r+0x8e4>
 8006f86:	9b07      	ldr	r3, [sp, #28]
 8006f88:	9704      	str	r7, [sp, #16]
 8006f8a:	2b00      	cmp	r3, #0
 8006f8c:	dc20      	bgt.n	8006fd0 <_dtoa_r+0x940>
 8006f8e:	9300      	str	r3, [sp, #0]
 8006f90:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006f92:	2b02      	cmp	r3, #2
 8006f94:	dd1e      	ble.n	8006fd4 <_dtoa_r+0x944>
 8006f96:	9b00      	ldr	r3, [sp, #0]
 8006f98:	2b00      	cmp	r3, #0
 8006f9a:	f47f aec0 	bne.w	8006d1e <_dtoa_r+0x68e>
 8006f9e:	4621      	mov	r1, r4
 8006fa0:	2205      	movs	r2, #5
 8006fa2:	4658      	mov	r0, fp
 8006fa4:	f000 fbe8 	bl	8007778 <__multadd>
 8006fa8:	4601      	mov	r1, r0
 8006faa:	4604      	mov	r4, r0
 8006fac:	4648      	mov	r0, r9
 8006fae:	f000 fdfb 	bl	8007ba8 <__mcmp>
 8006fb2:	2800      	cmp	r0, #0
 8006fb4:	f77f aeb3 	ble.w	8006d1e <_dtoa_r+0x68e>
 8006fb8:	4656      	mov	r6, sl
 8006fba:	2331      	movs	r3, #49	@ 0x31
 8006fbc:	f806 3b01 	strb.w	r3, [r6], #1
 8006fc0:	9b04      	ldr	r3, [sp, #16]
 8006fc2:	3301      	adds	r3, #1
 8006fc4:	9304      	str	r3, [sp, #16]
 8006fc6:	e6ae      	b.n	8006d26 <_dtoa_r+0x696>
 8006fc8:	9c07      	ldr	r4, [sp, #28]
 8006fca:	9704      	str	r7, [sp, #16]
 8006fcc:	4625      	mov	r5, r4
 8006fce:	e7f3      	b.n	8006fb8 <_dtoa_r+0x928>
 8006fd0:	9b07      	ldr	r3, [sp, #28]
 8006fd2:	9300      	str	r3, [sp, #0]
 8006fd4:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8006fd6:	2b00      	cmp	r3, #0
 8006fd8:	f000 8104 	beq.w	80071e4 <_dtoa_r+0xb54>
 8006fdc:	2e00      	cmp	r6, #0
 8006fde:	dd05      	ble.n	8006fec <_dtoa_r+0x95c>
 8006fe0:	4629      	mov	r1, r5
 8006fe2:	4632      	mov	r2, r6
 8006fe4:	4658      	mov	r0, fp
 8006fe6:	f000 fd73 	bl	8007ad0 <__lshift>
 8006fea:	4605      	mov	r5, r0
 8006fec:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8006fee:	2b00      	cmp	r3, #0
 8006ff0:	d05a      	beq.n	80070a8 <_dtoa_r+0xa18>
 8006ff2:	6869      	ldr	r1, [r5, #4]
 8006ff4:	4658      	mov	r0, fp
 8006ff6:	f000 fb5d 	bl	80076b4 <_Balloc>
 8006ffa:	4606      	mov	r6, r0
 8006ffc:	b928      	cbnz	r0, 800700a <_dtoa_r+0x97a>
 8006ffe:	4b84      	ldr	r3, [pc, #528]	@ (8007210 <_dtoa_r+0xb80>)
 8007000:	4602      	mov	r2, r0
 8007002:	f240 21ef 	movw	r1, #751	@ 0x2ef
 8007006:	f7ff bb5a 	b.w	80066be <_dtoa_r+0x2e>
 800700a:	692a      	ldr	r2, [r5, #16]
 800700c:	3202      	adds	r2, #2
 800700e:	0092      	lsls	r2, r2, #2
 8007010:	f105 010c 	add.w	r1, r5, #12
 8007014:	300c      	adds	r0, #12
 8007016:	f000 ffa1 	bl	8007f5c <memcpy>
 800701a:	2201      	movs	r2, #1
 800701c:	4631      	mov	r1, r6
 800701e:	4658      	mov	r0, fp
 8007020:	f000 fd56 	bl	8007ad0 <__lshift>
 8007024:	f10a 0301 	add.w	r3, sl, #1
 8007028:	9307      	str	r3, [sp, #28]
 800702a:	9b00      	ldr	r3, [sp, #0]
 800702c:	4453      	add	r3, sl
 800702e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8007030:	9b02      	ldr	r3, [sp, #8]
 8007032:	f003 0301 	and.w	r3, r3, #1
 8007036:	462f      	mov	r7, r5
 8007038:	930a      	str	r3, [sp, #40]	@ 0x28
 800703a:	4605      	mov	r5, r0
 800703c:	9b07      	ldr	r3, [sp, #28]
 800703e:	4621      	mov	r1, r4
 8007040:	3b01      	subs	r3, #1
 8007042:	4648      	mov	r0, r9
 8007044:	9300      	str	r3, [sp, #0]
 8007046:	f7ff fa9a 	bl	800657e <quorem>
 800704a:	4639      	mov	r1, r7
 800704c:	9002      	str	r0, [sp, #8]
 800704e:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 8007052:	4648      	mov	r0, r9
 8007054:	f000 fda8 	bl	8007ba8 <__mcmp>
 8007058:	462a      	mov	r2, r5
 800705a:	9008      	str	r0, [sp, #32]
 800705c:	4621      	mov	r1, r4
 800705e:	4658      	mov	r0, fp
 8007060:	f000 fdbe 	bl	8007be0 <__mdiff>
 8007064:	68c2      	ldr	r2, [r0, #12]
 8007066:	4606      	mov	r6, r0
 8007068:	bb02      	cbnz	r2, 80070ac <_dtoa_r+0xa1c>
 800706a:	4601      	mov	r1, r0
 800706c:	4648      	mov	r0, r9
 800706e:	f000 fd9b 	bl	8007ba8 <__mcmp>
 8007072:	4602      	mov	r2, r0
 8007074:	4631      	mov	r1, r6
 8007076:	4658      	mov	r0, fp
 8007078:	920e      	str	r2, [sp, #56]	@ 0x38
 800707a:	f000 fb5b 	bl	8007734 <_Bfree>
 800707e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007080:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8007082:	9e07      	ldr	r6, [sp, #28]
 8007084:	ea43 0102 	orr.w	r1, r3, r2
 8007088:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 800708a:	4319      	orrs	r1, r3
 800708c:	d110      	bne.n	80070b0 <_dtoa_r+0xa20>
 800708e:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8007092:	d029      	beq.n	80070e8 <_dtoa_r+0xa58>
 8007094:	9b08      	ldr	r3, [sp, #32]
 8007096:	2b00      	cmp	r3, #0
 8007098:	dd02      	ble.n	80070a0 <_dtoa_r+0xa10>
 800709a:	9b02      	ldr	r3, [sp, #8]
 800709c:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 80070a0:	9b00      	ldr	r3, [sp, #0]
 80070a2:	f883 8000 	strb.w	r8, [r3]
 80070a6:	e63f      	b.n	8006d28 <_dtoa_r+0x698>
 80070a8:	4628      	mov	r0, r5
 80070aa:	e7bb      	b.n	8007024 <_dtoa_r+0x994>
 80070ac:	2201      	movs	r2, #1
 80070ae:	e7e1      	b.n	8007074 <_dtoa_r+0x9e4>
 80070b0:	9b08      	ldr	r3, [sp, #32]
 80070b2:	2b00      	cmp	r3, #0
 80070b4:	db04      	blt.n	80070c0 <_dtoa_r+0xa30>
 80070b6:	9909      	ldr	r1, [sp, #36]	@ 0x24
 80070b8:	430b      	orrs	r3, r1
 80070ba:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80070bc:	430b      	orrs	r3, r1
 80070be:	d120      	bne.n	8007102 <_dtoa_r+0xa72>
 80070c0:	2a00      	cmp	r2, #0
 80070c2:	dded      	ble.n	80070a0 <_dtoa_r+0xa10>
 80070c4:	4649      	mov	r1, r9
 80070c6:	2201      	movs	r2, #1
 80070c8:	4658      	mov	r0, fp
 80070ca:	f000 fd01 	bl	8007ad0 <__lshift>
 80070ce:	4621      	mov	r1, r4
 80070d0:	4681      	mov	r9, r0
 80070d2:	f000 fd69 	bl	8007ba8 <__mcmp>
 80070d6:	2800      	cmp	r0, #0
 80070d8:	dc03      	bgt.n	80070e2 <_dtoa_r+0xa52>
 80070da:	d1e1      	bne.n	80070a0 <_dtoa_r+0xa10>
 80070dc:	f018 0f01 	tst.w	r8, #1
 80070e0:	d0de      	beq.n	80070a0 <_dtoa_r+0xa10>
 80070e2:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 80070e6:	d1d8      	bne.n	800709a <_dtoa_r+0xa0a>
 80070e8:	9a00      	ldr	r2, [sp, #0]
 80070ea:	2339      	movs	r3, #57	@ 0x39
 80070ec:	7013      	strb	r3, [r2, #0]
 80070ee:	4633      	mov	r3, r6
 80070f0:	461e      	mov	r6, r3
 80070f2:	3b01      	subs	r3, #1
 80070f4:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 80070f8:	2a39      	cmp	r2, #57	@ 0x39
 80070fa:	d052      	beq.n	80071a2 <_dtoa_r+0xb12>
 80070fc:	3201      	adds	r2, #1
 80070fe:	701a      	strb	r2, [r3, #0]
 8007100:	e612      	b.n	8006d28 <_dtoa_r+0x698>
 8007102:	2a00      	cmp	r2, #0
 8007104:	dd07      	ble.n	8007116 <_dtoa_r+0xa86>
 8007106:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 800710a:	d0ed      	beq.n	80070e8 <_dtoa_r+0xa58>
 800710c:	9a00      	ldr	r2, [sp, #0]
 800710e:	f108 0301 	add.w	r3, r8, #1
 8007112:	7013      	strb	r3, [r2, #0]
 8007114:	e608      	b.n	8006d28 <_dtoa_r+0x698>
 8007116:	9b07      	ldr	r3, [sp, #28]
 8007118:	9a07      	ldr	r2, [sp, #28]
 800711a:	f803 8c01 	strb.w	r8, [r3, #-1]
 800711e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8007120:	4293      	cmp	r3, r2
 8007122:	d028      	beq.n	8007176 <_dtoa_r+0xae6>
 8007124:	4649      	mov	r1, r9
 8007126:	2300      	movs	r3, #0
 8007128:	220a      	movs	r2, #10
 800712a:	4658      	mov	r0, fp
 800712c:	f000 fb24 	bl	8007778 <__multadd>
 8007130:	42af      	cmp	r7, r5
 8007132:	4681      	mov	r9, r0
 8007134:	f04f 0300 	mov.w	r3, #0
 8007138:	f04f 020a 	mov.w	r2, #10
 800713c:	4639      	mov	r1, r7
 800713e:	4658      	mov	r0, fp
 8007140:	d107      	bne.n	8007152 <_dtoa_r+0xac2>
 8007142:	f000 fb19 	bl	8007778 <__multadd>
 8007146:	4607      	mov	r7, r0
 8007148:	4605      	mov	r5, r0
 800714a:	9b07      	ldr	r3, [sp, #28]
 800714c:	3301      	adds	r3, #1
 800714e:	9307      	str	r3, [sp, #28]
 8007150:	e774      	b.n	800703c <_dtoa_r+0x9ac>
 8007152:	f000 fb11 	bl	8007778 <__multadd>
 8007156:	4629      	mov	r1, r5
 8007158:	4607      	mov	r7, r0
 800715a:	2300      	movs	r3, #0
 800715c:	220a      	movs	r2, #10
 800715e:	4658      	mov	r0, fp
 8007160:	f000 fb0a 	bl	8007778 <__multadd>
 8007164:	4605      	mov	r5, r0
 8007166:	e7f0      	b.n	800714a <_dtoa_r+0xaba>
 8007168:	9b00      	ldr	r3, [sp, #0]
 800716a:	2b00      	cmp	r3, #0
 800716c:	bfcc      	ite	gt
 800716e:	461e      	movgt	r6, r3
 8007170:	2601      	movle	r6, #1
 8007172:	4456      	add	r6, sl
 8007174:	2700      	movs	r7, #0
 8007176:	4649      	mov	r1, r9
 8007178:	2201      	movs	r2, #1
 800717a:	4658      	mov	r0, fp
 800717c:	f000 fca8 	bl	8007ad0 <__lshift>
 8007180:	4621      	mov	r1, r4
 8007182:	4681      	mov	r9, r0
 8007184:	f000 fd10 	bl	8007ba8 <__mcmp>
 8007188:	2800      	cmp	r0, #0
 800718a:	dcb0      	bgt.n	80070ee <_dtoa_r+0xa5e>
 800718c:	d102      	bne.n	8007194 <_dtoa_r+0xb04>
 800718e:	f018 0f01 	tst.w	r8, #1
 8007192:	d1ac      	bne.n	80070ee <_dtoa_r+0xa5e>
 8007194:	4633      	mov	r3, r6
 8007196:	461e      	mov	r6, r3
 8007198:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800719c:	2a30      	cmp	r2, #48	@ 0x30
 800719e:	d0fa      	beq.n	8007196 <_dtoa_r+0xb06>
 80071a0:	e5c2      	b.n	8006d28 <_dtoa_r+0x698>
 80071a2:	459a      	cmp	sl, r3
 80071a4:	d1a4      	bne.n	80070f0 <_dtoa_r+0xa60>
 80071a6:	9b04      	ldr	r3, [sp, #16]
 80071a8:	3301      	adds	r3, #1
 80071aa:	9304      	str	r3, [sp, #16]
 80071ac:	2331      	movs	r3, #49	@ 0x31
 80071ae:	f88a 3000 	strb.w	r3, [sl]
 80071b2:	e5b9      	b.n	8006d28 <_dtoa_r+0x698>
 80071b4:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 80071b6:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 8007214 <_dtoa_r+0xb84>
 80071ba:	b11b      	cbz	r3, 80071c4 <_dtoa_r+0xb34>
 80071bc:	f10a 0308 	add.w	r3, sl, #8
 80071c0:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 80071c2:	6013      	str	r3, [r2, #0]
 80071c4:	4650      	mov	r0, sl
 80071c6:	b019      	add	sp, #100	@ 0x64
 80071c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80071cc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80071ce:	2b01      	cmp	r3, #1
 80071d0:	f77f ae37 	ble.w	8006e42 <_dtoa_r+0x7b2>
 80071d4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80071d6:	930a      	str	r3, [sp, #40]	@ 0x28
 80071d8:	2001      	movs	r0, #1
 80071da:	e655      	b.n	8006e88 <_dtoa_r+0x7f8>
 80071dc:	9b00      	ldr	r3, [sp, #0]
 80071de:	2b00      	cmp	r3, #0
 80071e0:	f77f aed6 	ble.w	8006f90 <_dtoa_r+0x900>
 80071e4:	4656      	mov	r6, sl
 80071e6:	4621      	mov	r1, r4
 80071e8:	4648      	mov	r0, r9
 80071ea:	f7ff f9c8 	bl	800657e <quorem>
 80071ee:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 80071f2:	f806 8b01 	strb.w	r8, [r6], #1
 80071f6:	9b00      	ldr	r3, [sp, #0]
 80071f8:	eba6 020a 	sub.w	r2, r6, sl
 80071fc:	4293      	cmp	r3, r2
 80071fe:	ddb3      	ble.n	8007168 <_dtoa_r+0xad8>
 8007200:	4649      	mov	r1, r9
 8007202:	2300      	movs	r3, #0
 8007204:	220a      	movs	r2, #10
 8007206:	4658      	mov	r0, fp
 8007208:	f000 fab6 	bl	8007778 <__multadd>
 800720c:	4681      	mov	r9, r0
 800720e:	e7ea      	b.n	80071e6 <_dtoa_r+0xb56>
 8007210:	080087c8 	.word	0x080087c8
 8007214:	0800874c 	.word	0x0800874c

08007218 <_free_r>:
 8007218:	b538      	push	{r3, r4, r5, lr}
 800721a:	4605      	mov	r5, r0
 800721c:	2900      	cmp	r1, #0
 800721e:	d041      	beq.n	80072a4 <_free_r+0x8c>
 8007220:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8007224:	1f0c      	subs	r4, r1, #4
 8007226:	2b00      	cmp	r3, #0
 8007228:	bfb8      	it	lt
 800722a:	18e4      	addlt	r4, r4, r3
 800722c:	f7ff f870 	bl	8006310 <__malloc_lock>
 8007230:	4a1d      	ldr	r2, [pc, #116]	@ (80072a8 <_free_r+0x90>)
 8007232:	6813      	ldr	r3, [r2, #0]
 8007234:	b933      	cbnz	r3, 8007244 <_free_r+0x2c>
 8007236:	6063      	str	r3, [r4, #4]
 8007238:	6014      	str	r4, [r2, #0]
 800723a:	4628      	mov	r0, r5
 800723c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8007240:	f7ff b86c 	b.w	800631c <__malloc_unlock>
 8007244:	42a3      	cmp	r3, r4
 8007246:	d908      	bls.n	800725a <_free_r+0x42>
 8007248:	6820      	ldr	r0, [r4, #0]
 800724a:	1821      	adds	r1, r4, r0
 800724c:	428b      	cmp	r3, r1
 800724e:	bf01      	itttt	eq
 8007250:	6819      	ldreq	r1, [r3, #0]
 8007252:	685b      	ldreq	r3, [r3, #4]
 8007254:	1809      	addeq	r1, r1, r0
 8007256:	6021      	streq	r1, [r4, #0]
 8007258:	e7ed      	b.n	8007236 <_free_r+0x1e>
 800725a:	461a      	mov	r2, r3
 800725c:	685b      	ldr	r3, [r3, #4]
 800725e:	b10b      	cbz	r3, 8007264 <_free_r+0x4c>
 8007260:	42a3      	cmp	r3, r4
 8007262:	d9fa      	bls.n	800725a <_free_r+0x42>
 8007264:	6811      	ldr	r1, [r2, #0]
 8007266:	1850      	adds	r0, r2, r1
 8007268:	42a0      	cmp	r0, r4
 800726a:	d10b      	bne.n	8007284 <_free_r+0x6c>
 800726c:	6820      	ldr	r0, [r4, #0]
 800726e:	4401      	add	r1, r0
 8007270:	1850      	adds	r0, r2, r1
 8007272:	4283      	cmp	r3, r0
 8007274:	6011      	str	r1, [r2, #0]
 8007276:	d1e0      	bne.n	800723a <_free_r+0x22>
 8007278:	6818      	ldr	r0, [r3, #0]
 800727a:	685b      	ldr	r3, [r3, #4]
 800727c:	6053      	str	r3, [r2, #4]
 800727e:	4408      	add	r0, r1
 8007280:	6010      	str	r0, [r2, #0]
 8007282:	e7da      	b.n	800723a <_free_r+0x22>
 8007284:	d902      	bls.n	800728c <_free_r+0x74>
 8007286:	230c      	movs	r3, #12
 8007288:	602b      	str	r3, [r5, #0]
 800728a:	e7d6      	b.n	800723a <_free_r+0x22>
 800728c:	6820      	ldr	r0, [r4, #0]
 800728e:	1821      	adds	r1, r4, r0
 8007290:	428b      	cmp	r3, r1
 8007292:	bf04      	itt	eq
 8007294:	6819      	ldreq	r1, [r3, #0]
 8007296:	685b      	ldreq	r3, [r3, #4]
 8007298:	6063      	str	r3, [r4, #4]
 800729a:	bf04      	itt	eq
 800729c:	1809      	addeq	r1, r1, r0
 800729e:	6021      	streq	r1, [r4, #0]
 80072a0:	6054      	str	r4, [r2, #4]
 80072a2:	e7ca      	b.n	800723a <_free_r+0x22>
 80072a4:	bd38      	pop	{r3, r4, r5, pc}
 80072a6:	bf00      	nop
 80072a8:	20000374 	.word	0x20000374

080072ac <__ssputs_r>:
 80072ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80072b0:	688e      	ldr	r6, [r1, #8]
 80072b2:	461f      	mov	r7, r3
 80072b4:	42be      	cmp	r6, r7
 80072b6:	680b      	ldr	r3, [r1, #0]
 80072b8:	4682      	mov	sl, r0
 80072ba:	460c      	mov	r4, r1
 80072bc:	4690      	mov	r8, r2
 80072be:	d82d      	bhi.n	800731c <__ssputs_r+0x70>
 80072c0:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80072c4:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 80072c8:	d026      	beq.n	8007318 <__ssputs_r+0x6c>
 80072ca:	6965      	ldr	r5, [r4, #20]
 80072cc:	6909      	ldr	r1, [r1, #16]
 80072ce:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80072d2:	eba3 0901 	sub.w	r9, r3, r1
 80072d6:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80072da:	1c7b      	adds	r3, r7, #1
 80072dc:	444b      	add	r3, r9
 80072de:	106d      	asrs	r5, r5, #1
 80072e0:	429d      	cmp	r5, r3
 80072e2:	bf38      	it	cc
 80072e4:	461d      	movcc	r5, r3
 80072e6:	0553      	lsls	r3, r2, #21
 80072e8:	d527      	bpl.n	800733a <__ssputs_r+0x8e>
 80072ea:	4629      	mov	r1, r5
 80072ec:	f7fe fe02 	bl	8005ef4 <_malloc_r>
 80072f0:	4606      	mov	r6, r0
 80072f2:	b360      	cbz	r0, 800734e <__ssputs_r+0xa2>
 80072f4:	6921      	ldr	r1, [r4, #16]
 80072f6:	464a      	mov	r2, r9
 80072f8:	f000 fe30 	bl	8007f5c <memcpy>
 80072fc:	89a3      	ldrh	r3, [r4, #12]
 80072fe:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8007302:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8007306:	81a3      	strh	r3, [r4, #12]
 8007308:	6126      	str	r6, [r4, #16]
 800730a:	6165      	str	r5, [r4, #20]
 800730c:	444e      	add	r6, r9
 800730e:	eba5 0509 	sub.w	r5, r5, r9
 8007312:	6026      	str	r6, [r4, #0]
 8007314:	60a5      	str	r5, [r4, #8]
 8007316:	463e      	mov	r6, r7
 8007318:	42be      	cmp	r6, r7
 800731a:	d900      	bls.n	800731e <__ssputs_r+0x72>
 800731c:	463e      	mov	r6, r7
 800731e:	6820      	ldr	r0, [r4, #0]
 8007320:	4632      	mov	r2, r6
 8007322:	4641      	mov	r1, r8
 8007324:	f000 fdb9 	bl	8007e9a <memmove>
 8007328:	68a3      	ldr	r3, [r4, #8]
 800732a:	1b9b      	subs	r3, r3, r6
 800732c:	60a3      	str	r3, [r4, #8]
 800732e:	6823      	ldr	r3, [r4, #0]
 8007330:	4433      	add	r3, r6
 8007332:	6023      	str	r3, [r4, #0]
 8007334:	2000      	movs	r0, #0
 8007336:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800733a:	462a      	mov	r2, r5
 800733c:	f000 fd7f 	bl	8007e3e <_realloc_r>
 8007340:	4606      	mov	r6, r0
 8007342:	2800      	cmp	r0, #0
 8007344:	d1e0      	bne.n	8007308 <__ssputs_r+0x5c>
 8007346:	6921      	ldr	r1, [r4, #16]
 8007348:	4650      	mov	r0, sl
 800734a:	f7ff ff65 	bl	8007218 <_free_r>
 800734e:	230c      	movs	r3, #12
 8007350:	f8ca 3000 	str.w	r3, [sl]
 8007354:	89a3      	ldrh	r3, [r4, #12]
 8007356:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800735a:	81a3      	strh	r3, [r4, #12]
 800735c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8007360:	e7e9      	b.n	8007336 <__ssputs_r+0x8a>
	...

08007364 <_svfiprintf_r>:
 8007364:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007368:	4698      	mov	r8, r3
 800736a:	898b      	ldrh	r3, [r1, #12]
 800736c:	061b      	lsls	r3, r3, #24
 800736e:	b09d      	sub	sp, #116	@ 0x74
 8007370:	4607      	mov	r7, r0
 8007372:	460d      	mov	r5, r1
 8007374:	4614      	mov	r4, r2
 8007376:	d510      	bpl.n	800739a <_svfiprintf_r+0x36>
 8007378:	690b      	ldr	r3, [r1, #16]
 800737a:	b973      	cbnz	r3, 800739a <_svfiprintf_r+0x36>
 800737c:	2140      	movs	r1, #64	@ 0x40
 800737e:	f7fe fdb9 	bl	8005ef4 <_malloc_r>
 8007382:	6028      	str	r0, [r5, #0]
 8007384:	6128      	str	r0, [r5, #16]
 8007386:	b930      	cbnz	r0, 8007396 <_svfiprintf_r+0x32>
 8007388:	230c      	movs	r3, #12
 800738a:	603b      	str	r3, [r7, #0]
 800738c:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8007390:	b01d      	add	sp, #116	@ 0x74
 8007392:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007396:	2340      	movs	r3, #64	@ 0x40
 8007398:	616b      	str	r3, [r5, #20]
 800739a:	2300      	movs	r3, #0
 800739c:	9309      	str	r3, [sp, #36]	@ 0x24
 800739e:	2320      	movs	r3, #32
 80073a0:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80073a4:	f8cd 800c 	str.w	r8, [sp, #12]
 80073a8:	2330      	movs	r3, #48	@ 0x30
 80073aa:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8007548 <_svfiprintf_r+0x1e4>
 80073ae:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80073b2:	f04f 0901 	mov.w	r9, #1
 80073b6:	4623      	mov	r3, r4
 80073b8:	469a      	mov	sl, r3
 80073ba:	f813 2b01 	ldrb.w	r2, [r3], #1
 80073be:	b10a      	cbz	r2, 80073c4 <_svfiprintf_r+0x60>
 80073c0:	2a25      	cmp	r2, #37	@ 0x25
 80073c2:	d1f9      	bne.n	80073b8 <_svfiprintf_r+0x54>
 80073c4:	ebba 0b04 	subs.w	fp, sl, r4
 80073c8:	d00b      	beq.n	80073e2 <_svfiprintf_r+0x7e>
 80073ca:	465b      	mov	r3, fp
 80073cc:	4622      	mov	r2, r4
 80073ce:	4629      	mov	r1, r5
 80073d0:	4638      	mov	r0, r7
 80073d2:	f7ff ff6b 	bl	80072ac <__ssputs_r>
 80073d6:	3001      	adds	r0, #1
 80073d8:	f000 80a7 	beq.w	800752a <_svfiprintf_r+0x1c6>
 80073dc:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80073de:	445a      	add	r2, fp
 80073e0:	9209      	str	r2, [sp, #36]	@ 0x24
 80073e2:	f89a 3000 	ldrb.w	r3, [sl]
 80073e6:	2b00      	cmp	r3, #0
 80073e8:	f000 809f 	beq.w	800752a <_svfiprintf_r+0x1c6>
 80073ec:	2300      	movs	r3, #0
 80073ee:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 80073f2:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80073f6:	f10a 0a01 	add.w	sl, sl, #1
 80073fa:	9304      	str	r3, [sp, #16]
 80073fc:	9307      	str	r3, [sp, #28]
 80073fe:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8007402:	931a      	str	r3, [sp, #104]	@ 0x68
 8007404:	4654      	mov	r4, sl
 8007406:	2205      	movs	r2, #5
 8007408:	f814 1b01 	ldrb.w	r1, [r4], #1
 800740c:	484e      	ldr	r0, [pc, #312]	@ (8007548 <_svfiprintf_r+0x1e4>)
 800740e:	f7f8 feff 	bl	8000210 <memchr>
 8007412:	9a04      	ldr	r2, [sp, #16]
 8007414:	b9d8      	cbnz	r0, 800744e <_svfiprintf_r+0xea>
 8007416:	06d0      	lsls	r0, r2, #27
 8007418:	bf44      	itt	mi
 800741a:	2320      	movmi	r3, #32
 800741c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8007420:	0711      	lsls	r1, r2, #28
 8007422:	bf44      	itt	mi
 8007424:	232b      	movmi	r3, #43	@ 0x2b
 8007426:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800742a:	f89a 3000 	ldrb.w	r3, [sl]
 800742e:	2b2a      	cmp	r3, #42	@ 0x2a
 8007430:	d015      	beq.n	800745e <_svfiprintf_r+0xfa>
 8007432:	9a07      	ldr	r2, [sp, #28]
 8007434:	4654      	mov	r4, sl
 8007436:	2000      	movs	r0, #0
 8007438:	f04f 0c0a 	mov.w	ip, #10
 800743c:	4621      	mov	r1, r4
 800743e:	f811 3b01 	ldrb.w	r3, [r1], #1
 8007442:	3b30      	subs	r3, #48	@ 0x30
 8007444:	2b09      	cmp	r3, #9
 8007446:	d94b      	bls.n	80074e0 <_svfiprintf_r+0x17c>
 8007448:	b1b0      	cbz	r0, 8007478 <_svfiprintf_r+0x114>
 800744a:	9207      	str	r2, [sp, #28]
 800744c:	e014      	b.n	8007478 <_svfiprintf_r+0x114>
 800744e:	eba0 0308 	sub.w	r3, r0, r8
 8007452:	fa09 f303 	lsl.w	r3, r9, r3
 8007456:	4313      	orrs	r3, r2
 8007458:	9304      	str	r3, [sp, #16]
 800745a:	46a2      	mov	sl, r4
 800745c:	e7d2      	b.n	8007404 <_svfiprintf_r+0xa0>
 800745e:	9b03      	ldr	r3, [sp, #12]
 8007460:	1d19      	adds	r1, r3, #4
 8007462:	681b      	ldr	r3, [r3, #0]
 8007464:	9103      	str	r1, [sp, #12]
 8007466:	2b00      	cmp	r3, #0
 8007468:	bfbb      	ittet	lt
 800746a:	425b      	neglt	r3, r3
 800746c:	f042 0202 	orrlt.w	r2, r2, #2
 8007470:	9307      	strge	r3, [sp, #28]
 8007472:	9307      	strlt	r3, [sp, #28]
 8007474:	bfb8      	it	lt
 8007476:	9204      	strlt	r2, [sp, #16]
 8007478:	7823      	ldrb	r3, [r4, #0]
 800747a:	2b2e      	cmp	r3, #46	@ 0x2e
 800747c:	d10a      	bne.n	8007494 <_svfiprintf_r+0x130>
 800747e:	7863      	ldrb	r3, [r4, #1]
 8007480:	2b2a      	cmp	r3, #42	@ 0x2a
 8007482:	d132      	bne.n	80074ea <_svfiprintf_r+0x186>
 8007484:	9b03      	ldr	r3, [sp, #12]
 8007486:	1d1a      	adds	r2, r3, #4
 8007488:	681b      	ldr	r3, [r3, #0]
 800748a:	9203      	str	r2, [sp, #12]
 800748c:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8007490:	3402      	adds	r4, #2
 8007492:	9305      	str	r3, [sp, #20]
 8007494:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8007558 <_svfiprintf_r+0x1f4>
 8007498:	7821      	ldrb	r1, [r4, #0]
 800749a:	2203      	movs	r2, #3
 800749c:	4650      	mov	r0, sl
 800749e:	f7f8 feb7 	bl	8000210 <memchr>
 80074a2:	b138      	cbz	r0, 80074b4 <_svfiprintf_r+0x150>
 80074a4:	9b04      	ldr	r3, [sp, #16]
 80074a6:	eba0 000a 	sub.w	r0, r0, sl
 80074aa:	2240      	movs	r2, #64	@ 0x40
 80074ac:	4082      	lsls	r2, r0
 80074ae:	4313      	orrs	r3, r2
 80074b0:	3401      	adds	r4, #1
 80074b2:	9304      	str	r3, [sp, #16]
 80074b4:	f814 1b01 	ldrb.w	r1, [r4], #1
 80074b8:	4824      	ldr	r0, [pc, #144]	@ (800754c <_svfiprintf_r+0x1e8>)
 80074ba:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80074be:	2206      	movs	r2, #6
 80074c0:	f7f8 fea6 	bl	8000210 <memchr>
 80074c4:	2800      	cmp	r0, #0
 80074c6:	d036      	beq.n	8007536 <_svfiprintf_r+0x1d2>
 80074c8:	4b21      	ldr	r3, [pc, #132]	@ (8007550 <_svfiprintf_r+0x1ec>)
 80074ca:	bb1b      	cbnz	r3, 8007514 <_svfiprintf_r+0x1b0>
 80074cc:	9b03      	ldr	r3, [sp, #12]
 80074ce:	3307      	adds	r3, #7
 80074d0:	f023 0307 	bic.w	r3, r3, #7
 80074d4:	3308      	adds	r3, #8
 80074d6:	9303      	str	r3, [sp, #12]
 80074d8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80074da:	4433      	add	r3, r6
 80074dc:	9309      	str	r3, [sp, #36]	@ 0x24
 80074de:	e76a      	b.n	80073b6 <_svfiprintf_r+0x52>
 80074e0:	fb0c 3202 	mla	r2, ip, r2, r3
 80074e4:	460c      	mov	r4, r1
 80074e6:	2001      	movs	r0, #1
 80074e8:	e7a8      	b.n	800743c <_svfiprintf_r+0xd8>
 80074ea:	2300      	movs	r3, #0
 80074ec:	3401      	adds	r4, #1
 80074ee:	9305      	str	r3, [sp, #20]
 80074f0:	4619      	mov	r1, r3
 80074f2:	f04f 0c0a 	mov.w	ip, #10
 80074f6:	4620      	mov	r0, r4
 80074f8:	f810 2b01 	ldrb.w	r2, [r0], #1
 80074fc:	3a30      	subs	r2, #48	@ 0x30
 80074fe:	2a09      	cmp	r2, #9
 8007500:	d903      	bls.n	800750a <_svfiprintf_r+0x1a6>
 8007502:	2b00      	cmp	r3, #0
 8007504:	d0c6      	beq.n	8007494 <_svfiprintf_r+0x130>
 8007506:	9105      	str	r1, [sp, #20]
 8007508:	e7c4      	b.n	8007494 <_svfiprintf_r+0x130>
 800750a:	fb0c 2101 	mla	r1, ip, r1, r2
 800750e:	4604      	mov	r4, r0
 8007510:	2301      	movs	r3, #1
 8007512:	e7f0      	b.n	80074f6 <_svfiprintf_r+0x192>
 8007514:	ab03      	add	r3, sp, #12
 8007516:	9300      	str	r3, [sp, #0]
 8007518:	462a      	mov	r2, r5
 800751a:	4b0e      	ldr	r3, [pc, #56]	@ (8007554 <_svfiprintf_r+0x1f0>)
 800751c:	a904      	add	r1, sp, #16
 800751e:	4638      	mov	r0, r7
 8007520:	f7fe fa94 	bl	8005a4c <_printf_float>
 8007524:	1c42      	adds	r2, r0, #1
 8007526:	4606      	mov	r6, r0
 8007528:	d1d6      	bne.n	80074d8 <_svfiprintf_r+0x174>
 800752a:	89ab      	ldrh	r3, [r5, #12]
 800752c:	065b      	lsls	r3, r3, #25
 800752e:	f53f af2d 	bmi.w	800738c <_svfiprintf_r+0x28>
 8007532:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8007534:	e72c      	b.n	8007390 <_svfiprintf_r+0x2c>
 8007536:	ab03      	add	r3, sp, #12
 8007538:	9300      	str	r3, [sp, #0]
 800753a:	462a      	mov	r2, r5
 800753c:	4b05      	ldr	r3, [pc, #20]	@ (8007554 <_svfiprintf_r+0x1f0>)
 800753e:	a904      	add	r1, sp, #16
 8007540:	4638      	mov	r0, r7
 8007542:	f7fe fdc5 	bl	80060d0 <_printf_i>
 8007546:	e7ed      	b.n	8007524 <_svfiprintf_r+0x1c0>
 8007548:	080087d9 	.word	0x080087d9
 800754c:	080087e3 	.word	0x080087e3
 8007550:	08005a4d 	.word	0x08005a4d
 8007554:	080072ad 	.word	0x080072ad
 8007558:	080087df 	.word	0x080087df

0800755c <__sflush_r>:
 800755c:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8007560:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007564:	0716      	lsls	r6, r2, #28
 8007566:	4605      	mov	r5, r0
 8007568:	460c      	mov	r4, r1
 800756a:	d454      	bmi.n	8007616 <__sflush_r+0xba>
 800756c:	684b      	ldr	r3, [r1, #4]
 800756e:	2b00      	cmp	r3, #0
 8007570:	dc02      	bgt.n	8007578 <__sflush_r+0x1c>
 8007572:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8007574:	2b00      	cmp	r3, #0
 8007576:	dd48      	ble.n	800760a <__sflush_r+0xae>
 8007578:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800757a:	2e00      	cmp	r6, #0
 800757c:	d045      	beq.n	800760a <__sflush_r+0xae>
 800757e:	2300      	movs	r3, #0
 8007580:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8007584:	682f      	ldr	r7, [r5, #0]
 8007586:	6a21      	ldr	r1, [r4, #32]
 8007588:	602b      	str	r3, [r5, #0]
 800758a:	d030      	beq.n	80075ee <__sflush_r+0x92>
 800758c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800758e:	89a3      	ldrh	r3, [r4, #12]
 8007590:	0759      	lsls	r1, r3, #29
 8007592:	d505      	bpl.n	80075a0 <__sflush_r+0x44>
 8007594:	6863      	ldr	r3, [r4, #4]
 8007596:	1ad2      	subs	r2, r2, r3
 8007598:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800759a:	b10b      	cbz	r3, 80075a0 <__sflush_r+0x44>
 800759c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800759e:	1ad2      	subs	r2, r2, r3
 80075a0:	2300      	movs	r3, #0
 80075a2:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80075a4:	6a21      	ldr	r1, [r4, #32]
 80075a6:	4628      	mov	r0, r5
 80075a8:	47b0      	blx	r6
 80075aa:	1c43      	adds	r3, r0, #1
 80075ac:	89a3      	ldrh	r3, [r4, #12]
 80075ae:	d106      	bne.n	80075be <__sflush_r+0x62>
 80075b0:	6829      	ldr	r1, [r5, #0]
 80075b2:	291d      	cmp	r1, #29
 80075b4:	d82b      	bhi.n	800760e <__sflush_r+0xb2>
 80075b6:	4a2a      	ldr	r2, [pc, #168]	@ (8007660 <__sflush_r+0x104>)
 80075b8:	410a      	asrs	r2, r1
 80075ba:	07d6      	lsls	r6, r2, #31
 80075bc:	d427      	bmi.n	800760e <__sflush_r+0xb2>
 80075be:	2200      	movs	r2, #0
 80075c0:	6062      	str	r2, [r4, #4]
 80075c2:	04d9      	lsls	r1, r3, #19
 80075c4:	6922      	ldr	r2, [r4, #16]
 80075c6:	6022      	str	r2, [r4, #0]
 80075c8:	d504      	bpl.n	80075d4 <__sflush_r+0x78>
 80075ca:	1c42      	adds	r2, r0, #1
 80075cc:	d101      	bne.n	80075d2 <__sflush_r+0x76>
 80075ce:	682b      	ldr	r3, [r5, #0]
 80075d0:	b903      	cbnz	r3, 80075d4 <__sflush_r+0x78>
 80075d2:	6560      	str	r0, [r4, #84]	@ 0x54
 80075d4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80075d6:	602f      	str	r7, [r5, #0]
 80075d8:	b1b9      	cbz	r1, 800760a <__sflush_r+0xae>
 80075da:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80075de:	4299      	cmp	r1, r3
 80075e0:	d002      	beq.n	80075e8 <__sflush_r+0x8c>
 80075e2:	4628      	mov	r0, r5
 80075e4:	f7ff fe18 	bl	8007218 <_free_r>
 80075e8:	2300      	movs	r3, #0
 80075ea:	6363      	str	r3, [r4, #52]	@ 0x34
 80075ec:	e00d      	b.n	800760a <__sflush_r+0xae>
 80075ee:	2301      	movs	r3, #1
 80075f0:	4628      	mov	r0, r5
 80075f2:	47b0      	blx	r6
 80075f4:	4602      	mov	r2, r0
 80075f6:	1c50      	adds	r0, r2, #1
 80075f8:	d1c9      	bne.n	800758e <__sflush_r+0x32>
 80075fa:	682b      	ldr	r3, [r5, #0]
 80075fc:	2b00      	cmp	r3, #0
 80075fe:	d0c6      	beq.n	800758e <__sflush_r+0x32>
 8007600:	2b1d      	cmp	r3, #29
 8007602:	d001      	beq.n	8007608 <__sflush_r+0xac>
 8007604:	2b16      	cmp	r3, #22
 8007606:	d11e      	bne.n	8007646 <__sflush_r+0xea>
 8007608:	602f      	str	r7, [r5, #0]
 800760a:	2000      	movs	r0, #0
 800760c:	e022      	b.n	8007654 <__sflush_r+0xf8>
 800760e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8007612:	b21b      	sxth	r3, r3
 8007614:	e01b      	b.n	800764e <__sflush_r+0xf2>
 8007616:	690f      	ldr	r7, [r1, #16]
 8007618:	2f00      	cmp	r7, #0
 800761a:	d0f6      	beq.n	800760a <__sflush_r+0xae>
 800761c:	0793      	lsls	r3, r2, #30
 800761e:	680e      	ldr	r6, [r1, #0]
 8007620:	bf08      	it	eq
 8007622:	694b      	ldreq	r3, [r1, #20]
 8007624:	600f      	str	r7, [r1, #0]
 8007626:	bf18      	it	ne
 8007628:	2300      	movne	r3, #0
 800762a:	eba6 0807 	sub.w	r8, r6, r7
 800762e:	608b      	str	r3, [r1, #8]
 8007630:	f1b8 0f00 	cmp.w	r8, #0
 8007634:	dde9      	ble.n	800760a <__sflush_r+0xae>
 8007636:	6a21      	ldr	r1, [r4, #32]
 8007638:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 800763a:	4643      	mov	r3, r8
 800763c:	463a      	mov	r2, r7
 800763e:	4628      	mov	r0, r5
 8007640:	47b0      	blx	r6
 8007642:	2800      	cmp	r0, #0
 8007644:	dc08      	bgt.n	8007658 <__sflush_r+0xfc>
 8007646:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800764a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800764e:	81a3      	strh	r3, [r4, #12]
 8007650:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8007654:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007658:	4407      	add	r7, r0
 800765a:	eba8 0800 	sub.w	r8, r8, r0
 800765e:	e7e7      	b.n	8007630 <__sflush_r+0xd4>
 8007660:	dfbffffe 	.word	0xdfbffffe

08007664 <_fflush_r>:
 8007664:	b538      	push	{r3, r4, r5, lr}
 8007666:	690b      	ldr	r3, [r1, #16]
 8007668:	4605      	mov	r5, r0
 800766a:	460c      	mov	r4, r1
 800766c:	b913      	cbnz	r3, 8007674 <_fflush_r+0x10>
 800766e:	2500      	movs	r5, #0
 8007670:	4628      	mov	r0, r5
 8007672:	bd38      	pop	{r3, r4, r5, pc}
 8007674:	b118      	cbz	r0, 800767e <_fflush_r+0x1a>
 8007676:	6a03      	ldr	r3, [r0, #32]
 8007678:	b90b      	cbnz	r3, 800767e <_fflush_r+0x1a>
 800767a:	f7fe ff01 	bl	8006480 <__sinit>
 800767e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8007682:	2b00      	cmp	r3, #0
 8007684:	d0f3      	beq.n	800766e <_fflush_r+0xa>
 8007686:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8007688:	07d0      	lsls	r0, r2, #31
 800768a:	d404      	bmi.n	8007696 <_fflush_r+0x32>
 800768c:	0599      	lsls	r1, r3, #22
 800768e:	d402      	bmi.n	8007696 <_fflush_r+0x32>
 8007690:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8007692:	f7fe ff72 	bl	800657a <__retarget_lock_acquire_recursive>
 8007696:	4628      	mov	r0, r5
 8007698:	4621      	mov	r1, r4
 800769a:	f7ff ff5f 	bl	800755c <__sflush_r>
 800769e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80076a0:	07da      	lsls	r2, r3, #31
 80076a2:	4605      	mov	r5, r0
 80076a4:	d4e4      	bmi.n	8007670 <_fflush_r+0xc>
 80076a6:	89a3      	ldrh	r3, [r4, #12]
 80076a8:	059b      	lsls	r3, r3, #22
 80076aa:	d4e1      	bmi.n	8007670 <_fflush_r+0xc>
 80076ac:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80076ae:	f7fe ff65 	bl	800657c <__retarget_lock_release_recursive>
 80076b2:	e7dd      	b.n	8007670 <_fflush_r+0xc>

080076b4 <_Balloc>:
 80076b4:	b570      	push	{r4, r5, r6, lr}
 80076b6:	69c6      	ldr	r6, [r0, #28]
 80076b8:	4604      	mov	r4, r0
 80076ba:	460d      	mov	r5, r1
 80076bc:	b976      	cbnz	r6, 80076dc <_Balloc+0x28>
 80076be:	2010      	movs	r0, #16
 80076c0:	f7fe fbee 	bl	8005ea0 <malloc>
 80076c4:	4602      	mov	r2, r0
 80076c6:	61e0      	str	r0, [r4, #28]
 80076c8:	b920      	cbnz	r0, 80076d4 <_Balloc+0x20>
 80076ca:	4b18      	ldr	r3, [pc, #96]	@ (800772c <_Balloc+0x78>)
 80076cc:	4818      	ldr	r0, [pc, #96]	@ (8007730 <_Balloc+0x7c>)
 80076ce:	216b      	movs	r1, #107	@ 0x6b
 80076d0:	f000 fc52 	bl	8007f78 <__assert_func>
 80076d4:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80076d8:	6006      	str	r6, [r0, #0]
 80076da:	60c6      	str	r6, [r0, #12]
 80076dc:	69e6      	ldr	r6, [r4, #28]
 80076de:	68f3      	ldr	r3, [r6, #12]
 80076e0:	b183      	cbz	r3, 8007704 <_Balloc+0x50>
 80076e2:	69e3      	ldr	r3, [r4, #28]
 80076e4:	68db      	ldr	r3, [r3, #12]
 80076e6:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 80076ea:	b9b8      	cbnz	r0, 800771c <_Balloc+0x68>
 80076ec:	2101      	movs	r1, #1
 80076ee:	fa01 f605 	lsl.w	r6, r1, r5
 80076f2:	1d72      	adds	r2, r6, #5
 80076f4:	0092      	lsls	r2, r2, #2
 80076f6:	4620      	mov	r0, r4
 80076f8:	f7fe f8f4 	bl	80058e4 <_calloc_r>
 80076fc:	b160      	cbz	r0, 8007718 <_Balloc+0x64>
 80076fe:	e9c0 5601 	strd	r5, r6, [r0, #4]
 8007702:	e00e      	b.n	8007722 <_Balloc+0x6e>
 8007704:	2221      	movs	r2, #33	@ 0x21
 8007706:	2104      	movs	r1, #4
 8007708:	4620      	mov	r0, r4
 800770a:	f7fe f8eb 	bl	80058e4 <_calloc_r>
 800770e:	69e3      	ldr	r3, [r4, #28]
 8007710:	60f0      	str	r0, [r6, #12]
 8007712:	68db      	ldr	r3, [r3, #12]
 8007714:	2b00      	cmp	r3, #0
 8007716:	d1e4      	bne.n	80076e2 <_Balloc+0x2e>
 8007718:	2000      	movs	r0, #0
 800771a:	bd70      	pop	{r4, r5, r6, pc}
 800771c:	6802      	ldr	r2, [r0, #0]
 800771e:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 8007722:	2300      	movs	r3, #0
 8007724:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8007728:	e7f7      	b.n	800771a <_Balloc+0x66>
 800772a:	bf00      	nop
 800772c:	08008759 	.word	0x08008759
 8007730:	080087ea 	.word	0x080087ea

08007734 <_Bfree>:
 8007734:	b570      	push	{r4, r5, r6, lr}
 8007736:	69c6      	ldr	r6, [r0, #28]
 8007738:	4605      	mov	r5, r0
 800773a:	460c      	mov	r4, r1
 800773c:	b976      	cbnz	r6, 800775c <_Bfree+0x28>
 800773e:	2010      	movs	r0, #16
 8007740:	f7fe fbae 	bl	8005ea0 <malloc>
 8007744:	4602      	mov	r2, r0
 8007746:	61e8      	str	r0, [r5, #28]
 8007748:	b920      	cbnz	r0, 8007754 <_Bfree+0x20>
 800774a:	4b09      	ldr	r3, [pc, #36]	@ (8007770 <_Bfree+0x3c>)
 800774c:	4809      	ldr	r0, [pc, #36]	@ (8007774 <_Bfree+0x40>)
 800774e:	218f      	movs	r1, #143	@ 0x8f
 8007750:	f000 fc12 	bl	8007f78 <__assert_func>
 8007754:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8007758:	6006      	str	r6, [r0, #0]
 800775a:	60c6      	str	r6, [r0, #12]
 800775c:	b13c      	cbz	r4, 800776e <_Bfree+0x3a>
 800775e:	69eb      	ldr	r3, [r5, #28]
 8007760:	6862      	ldr	r2, [r4, #4]
 8007762:	68db      	ldr	r3, [r3, #12]
 8007764:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8007768:	6021      	str	r1, [r4, #0]
 800776a:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800776e:	bd70      	pop	{r4, r5, r6, pc}
 8007770:	08008759 	.word	0x08008759
 8007774:	080087ea 	.word	0x080087ea

08007778 <__multadd>:
 8007778:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800777c:	690d      	ldr	r5, [r1, #16]
 800777e:	4607      	mov	r7, r0
 8007780:	460c      	mov	r4, r1
 8007782:	461e      	mov	r6, r3
 8007784:	f101 0c14 	add.w	ip, r1, #20
 8007788:	2000      	movs	r0, #0
 800778a:	f8dc 3000 	ldr.w	r3, [ip]
 800778e:	b299      	uxth	r1, r3
 8007790:	fb02 6101 	mla	r1, r2, r1, r6
 8007794:	0c1e      	lsrs	r6, r3, #16
 8007796:	0c0b      	lsrs	r3, r1, #16
 8007798:	fb02 3306 	mla	r3, r2, r6, r3
 800779c:	b289      	uxth	r1, r1
 800779e:	3001      	adds	r0, #1
 80077a0:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 80077a4:	4285      	cmp	r5, r0
 80077a6:	f84c 1b04 	str.w	r1, [ip], #4
 80077aa:	ea4f 4613 	mov.w	r6, r3, lsr #16
 80077ae:	dcec      	bgt.n	800778a <__multadd+0x12>
 80077b0:	b30e      	cbz	r6, 80077f6 <__multadd+0x7e>
 80077b2:	68a3      	ldr	r3, [r4, #8]
 80077b4:	42ab      	cmp	r3, r5
 80077b6:	dc19      	bgt.n	80077ec <__multadd+0x74>
 80077b8:	6861      	ldr	r1, [r4, #4]
 80077ba:	4638      	mov	r0, r7
 80077bc:	3101      	adds	r1, #1
 80077be:	f7ff ff79 	bl	80076b4 <_Balloc>
 80077c2:	4680      	mov	r8, r0
 80077c4:	b928      	cbnz	r0, 80077d2 <__multadd+0x5a>
 80077c6:	4602      	mov	r2, r0
 80077c8:	4b0c      	ldr	r3, [pc, #48]	@ (80077fc <__multadd+0x84>)
 80077ca:	480d      	ldr	r0, [pc, #52]	@ (8007800 <__multadd+0x88>)
 80077cc:	21ba      	movs	r1, #186	@ 0xba
 80077ce:	f000 fbd3 	bl	8007f78 <__assert_func>
 80077d2:	6922      	ldr	r2, [r4, #16]
 80077d4:	3202      	adds	r2, #2
 80077d6:	f104 010c 	add.w	r1, r4, #12
 80077da:	0092      	lsls	r2, r2, #2
 80077dc:	300c      	adds	r0, #12
 80077de:	f000 fbbd 	bl	8007f5c <memcpy>
 80077e2:	4621      	mov	r1, r4
 80077e4:	4638      	mov	r0, r7
 80077e6:	f7ff ffa5 	bl	8007734 <_Bfree>
 80077ea:	4644      	mov	r4, r8
 80077ec:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 80077f0:	3501      	adds	r5, #1
 80077f2:	615e      	str	r6, [r3, #20]
 80077f4:	6125      	str	r5, [r4, #16]
 80077f6:	4620      	mov	r0, r4
 80077f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80077fc:	080087c8 	.word	0x080087c8
 8007800:	080087ea 	.word	0x080087ea

08007804 <__hi0bits>:
 8007804:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8007808:	4603      	mov	r3, r0
 800780a:	bf36      	itet	cc
 800780c:	0403      	lslcc	r3, r0, #16
 800780e:	2000      	movcs	r0, #0
 8007810:	2010      	movcc	r0, #16
 8007812:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8007816:	bf3c      	itt	cc
 8007818:	021b      	lslcc	r3, r3, #8
 800781a:	3008      	addcc	r0, #8
 800781c:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8007820:	bf3c      	itt	cc
 8007822:	011b      	lslcc	r3, r3, #4
 8007824:	3004      	addcc	r0, #4
 8007826:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800782a:	bf3c      	itt	cc
 800782c:	009b      	lslcc	r3, r3, #2
 800782e:	3002      	addcc	r0, #2
 8007830:	2b00      	cmp	r3, #0
 8007832:	db05      	blt.n	8007840 <__hi0bits+0x3c>
 8007834:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 8007838:	f100 0001 	add.w	r0, r0, #1
 800783c:	bf08      	it	eq
 800783e:	2020      	moveq	r0, #32
 8007840:	4770      	bx	lr

08007842 <__lo0bits>:
 8007842:	6803      	ldr	r3, [r0, #0]
 8007844:	4602      	mov	r2, r0
 8007846:	f013 0007 	ands.w	r0, r3, #7
 800784a:	d00b      	beq.n	8007864 <__lo0bits+0x22>
 800784c:	07d9      	lsls	r1, r3, #31
 800784e:	d421      	bmi.n	8007894 <__lo0bits+0x52>
 8007850:	0798      	lsls	r0, r3, #30
 8007852:	bf49      	itett	mi
 8007854:	085b      	lsrmi	r3, r3, #1
 8007856:	089b      	lsrpl	r3, r3, #2
 8007858:	2001      	movmi	r0, #1
 800785a:	6013      	strmi	r3, [r2, #0]
 800785c:	bf5c      	itt	pl
 800785e:	6013      	strpl	r3, [r2, #0]
 8007860:	2002      	movpl	r0, #2
 8007862:	4770      	bx	lr
 8007864:	b299      	uxth	r1, r3
 8007866:	b909      	cbnz	r1, 800786c <__lo0bits+0x2a>
 8007868:	0c1b      	lsrs	r3, r3, #16
 800786a:	2010      	movs	r0, #16
 800786c:	b2d9      	uxtb	r1, r3
 800786e:	b909      	cbnz	r1, 8007874 <__lo0bits+0x32>
 8007870:	3008      	adds	r0, #8
 8007872:	0a1b      	lsrs	r3, r3, #8
 8007874:	0719      	lsls	r1, r3, #28
 8007876:	bf04      	itt	eq
 8007878:	091b      	lsreq	r3, r3, #4
 800787a:	3004      	addeq	r0, #4
 800787c:	0799      	lsls	r1, r3, #30
 800787e:	bf04      	itt	eq
 8007880:	089b      	lsreq	r3, r3, #2
 8007882:	3002      	addeq	r0, #2
 8007884:	07d9      	lsls	r1, r3, #31
 8007886:	d403      	bmi.n	8007890 <__lo0bits+0x4e>
 8007888:	085b      	lsrs	r3, r3, #1
 800788a:	f100 0001 	add.w	r0, r0, #1
 800788e:	d003      	beq.n	8007898 <__lo0bits+0x56>
 8007890:	6013      	str	r3, [r2, #0]
 8007892:	4770      	bx	lr
 8007894:	2000      	movs	r0, #0
 8007896:	4770      	bx	lr
 8007898:	2020      	movs	r0, #32
 800789a:	4770      	bx	lr

0800789c <__i2b>:
 800789c:	b510      	push	{r4, lr}
 800789e:	460c      	mov	r4, r1
 80078a0:	2101      	movs	r1, #1
 80078a2:	f7ff ff07 	bl	80076b4 <_Balloc>
 80078a6:	4602      	mov	r2, r0
 80078a8:	b928      	cbnz	r0, 80078b6 <__i2b+0x1a>
 80078aa:	4b05      	ldr	r3, [pc, #20]	@ (80078c0 <__i2b+0x24>)
 80078ac:	4805      	ldr	r0, [pc, #20]	@ (80078c4 <__i2b+0x28>)
 80078ae:	f240 1145 	movw	r1, #325	@ 0x145
 80078b2:	f000 fb61 	bl	8007f78 <__assert_func>
 80078b6:	2301      	movs	r3, #1
 80078b8:	6144      	str	r4, [r0, #20]
 80078ba:	6103      	str	r3, [r0, #16]
 80078bc:	bd10      	pop	{r4, pc}
 80078be:	bf00      	nop
 80078c0:	080087c8 	.word	0x080087c8
 80078c4:	080087ea 	.word	0x080087ea

080078c8 <__multiply>:
 80078c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80078cc:	4614      	mov	r4, r2
 80078ce:	690a      	ldr	r2, [r1, #16]
 80078d0:	6923      	ldr	r3, [r4, #16]
 80078d2:	429a      	cmp	r2, r3
 80078d4:	bfa8      	it	ge
 80078d6:	4623      	movge	r3, r4
 80078d8:	460f      	mov	r7, r1
 80078da:	bfa4      	itt	ge
 80078dc:	460c      	movge	r4, r1
 80078de:	461f      	movge	r7, r3
 80078e0:	f8d4 a010 	ldr.w	sl, [r4, #16]
 80078e4:	f8d7 9010 	ldr.w	r9, [r7, #16]
 80078e8:	68a3      	ldr	r3, [r4, #8]
 80078ea:	6861      	ldr	r1, [r4, #4]
 80078ec:	eb0a 0609 	add.w	r6, sl, r9
 80078f0:	42b3      	cmp	r3, r6
 80078f2:	b085      	sub	sp, #20
 80078f4:	bfb8      	it	lt
 80078f6:	3101      	addlt	r1, #1
 80078f8:	f7ff fedc 	bl	80076b4 <_Balloc>
 80078fc:	b930      	cbnz	r0, 800790c <__multiply+0x44>
 80078fe:	4602      	mov	r2, r0
 8007900:	4b44      	ldr	r3, [pc, #272]	@ (8007a14 <__multiply+0x14c>)
 8007902:	4845      	ldr	r0, [pc, #276]	@ (8007a18 <__multiply+0x150>)
 8007904:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8007908:	f000 fb36 	bl	8007f78 <__assert_func>
 800790c:	f100 0514 	add.w	r5, r0, #20
 8007910:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8007914:	462b      	mov	r3, r5
 8007916:	2200      	movs	r2, #0
 8007918:	4543      	cmp	r3, r8
 800791a:	d321      	bcc.n	8007960 <__multiply+0x98>
 800791c:	f107 0114 	add.w	r1, r7, #20
 8007920:	f104 0214 	add.w	r2, r4, #20
 8007924:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 8007928:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 800792c:	9302      	str	r3, [sp, #8]
 800792e:	1b13      	subs	r3, r2, r4
 8007930:	3b15      	subs	r3, #21
 8007932:	f023 0303 	bic.w	r3, r3, #3
 8007936:	3304      	adds	r3, #4
 8007938:	f104 0715 	add.w	r7, r4, #21
 800793c:	42ba      	cmp	r2, r7
 800793e:	bf38      	it	cc
 8007940:	2304      	movcc	r3, #4
 8007942:	9301      	str	r3, [sp, #4]
 8007944:	9b02      	ldr	r3, [sp, #8]
 8007946:	9103      	str	r1, [sp, #12]
 8007948:	428b      	cmp	r3, r1
 800794a:	d80c      	bhi.n	8007966 <__multiply+0x9e>
 800794c:	2e00      	cmp	r6, #0
 800794e:	dd03      	ble.n	8007958 <__multiply+0x90>
 8007950:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8007954:	2b00      	cmp	r3, #0
 8007956:	d05b      	beq.n	8007a10 <__multiply+0x148>
 8007958:	6106      	str	r6, [r0, #16]
 800795a:	b005      	add	sp, #20
 800795c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007960:	f843 2b04 	str.w	r2, [r3], #4
 8007964:	e7d8      	b.n	8007918 <__multiply+0x50>
 8007966:	f8b1 a000 	ldrh.w	sl, [r1]
 800796a:	f1ba 0f00 	cmp.w	sl, #0
 800796e:	d024      	beq.n	80079ba <__multiply+0xf2>
 8007970:	f104 0e14 	add.w	lr, r4, #20
 8007974:	46a9      	mov	r9, r5
 8007976:	f04f 0c00 	mov.w	ip, #0
 800797a:	f85e 7b04 	ldr.w	r7, [lr], #4
 800797e:	f8d9 3000 	ldr.w	r3, [r9]
 8007982:	fa1f fb87 	uxth.w	fp, r7
 8007986:	b29b      	uxth	r3, r3
 8007988:	fb0a 330b 	mla	r3, sl, fp, r3
 800798c:	ea4f 4b17 	mov.w	fp, r7, lsr #16
 8007990:	f8d9 7000 	ldr.w	r7, [r9]
 8007994:	4463      	add	r3, ip
 8007996:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 800799a:	fb0a c70b 	mla	r7, sl, fp, ip
 800799e:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 80079a2:	b29b      	uxth	r3, r3
 80079a4:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 80079a8:	4572      	cmp	r2, lr
 80079aa:	f849 3b04 	str.w	r3, [r9], #4
 80079ae:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 80079b2:	d8e2      	bhi.n	800797a <__multiply+0xb2>
 80079b4:	9b01      	ldr	r3, [sp, #4]
 80079b6:	f845 c003 	str.w	ip, [r5, r3]
 80079ba:	9b03      	ldr	r3, [sp, #12]
 80079bc:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 80079c0:	3104      	adds	r1, #4
 80079c2:	f1b9 0f00 	cmp.w	r9, #0
 80079c6:	d021      	beq.n	8007a0c <__multiply+0x144>
 80079c8:	682b      	ldr	r3, [r5, #0]
 80079ca:	f104 0c14 	add.w	ip, r4, #20
 80079ce:	46ae      	mov	lr, r5
 80079d0:	f04f 0a00 	mov.w	sl, #0
 80079d4:	f8bc b000 	ldrh.w	fp, [ip]
 80079d8:	f8be 7002 	ldrh.w	r7, [lr, #2]
 80079dc:	fb09 770b 	mla	r7, r9, fp, r7
 80079e0:	4457      	add	r7, sl
 80079e2:	b29b      	uxth	r3, r3
 80079e4:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 80079e8:	f84e 3b04 	str.w	r3, [lr], #4
 80079ec:	f85c 3b04 	ldr.w	r3, [ip], #4
 80079f0:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80079f4:	f8be 3000 	ldrh.w	r3, [lr]
 80079f8:	fb09 330a 	mla	r3, r9, sl, r3
 80079fc:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 8007a00:	4562      	cmp	r2, ip
 8007a02:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8007a06:	d8e5      	bhi.n	80079d4 <__multiply+0x10c>
 8007a08:	9f01      	ldr	r7, [sp, #4]
 8007a0a:	51eb      	str	r3, [r5, r7]
 8007a0c:	3504      	adds	r5, #4
 8007a0e:	e799      	b.n	8007944 <__multiply+0x7c>
 8007a10:	3e01      	subs	r6, #1
 8007a12:	e79b      	b.n	800794c <__multiply+0x84>
 8007a14:	080087c8 	.word	0x080087c8
 8007a18:	080087ea 	.word	0x080087ea

08007a1c <__pow5mult>:
 8007a1c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007a20:	4615      	mov	r5, r2
 8007a22:	f012 0203 	ands.w	r2, r2, #3
 8007a26:	4607      	mov	r7, r0
 8007a28:	460e      	mov	r6, r1
 8007a2a:	d007      	beq.n	8007a3c <__pow5mult+0x20>
 8007a2c:	4c25      	ldr	r4, [pc, #148]	@ (8007ac4 <__pow5mult+0xa8>)
 8007a2e:	3a01      	subs	r2, #1
 8007a30:	2300      	movs	r3, #0
 8007a32:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8007a36:	f7ff fe9f 	bl	8007778 <__multadd>
 8007a3a:	4606      	mov	r6, r0
 8007a3c:	10ad      	asrs	r5, r5, #2
 8007a3e:	d03d      	beq.n	8007abc <__pow5mult+0xa0>
 8007a40:	69fc      	ldr	r4, [r7, #28]
 8007a42:	b97c      	cbnz	r4, 8007a64 <__pow5mult+0x48>
 8007a44:	2010      	movs	r0, #16
 8007a46:	f7fe fa2b 	bl	8005ea0 <malloc>
 8007a4a:	4602      	mov	r2, r0
 8007a4c:	61f8      	str	r0, [r7, #28]
 8007a4e:	b928      	cbnz	r0, 8007a5c <__pow5mult+0x40>
 8007a50:	4b1d      	ldr	r3, [pc, #116]	@ (8007ac8 <__pow5mult+0xac>)
 8007a52:	481e      	ldr	r0, [pc, #120]	@ (8007acc <__pow5mult+0xb0>)
 8007a54:	f240 11b3 	movw	r1, #435	@ 0x1b3
 8007a58:	f000 fa8e 	bl	8007f78 <__assert_func>
 8007a5c:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8007a60:	6004      	str	r4, [r0, #0]
 8007a62:	60c4      	str	r4, [r0, #12]
 8007a64:	f8d7 801c 	ldr.w	r8, [r7, #28]
 8007a68:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8007a6c:	b94c      	cbnz	r4, 8007a82 <__pow5mult+0x66>
 8007a6e:	f240 2171 	movw	r1, #625	@ 0x271
 8007a72:	4638      	mov	r0, r7
 8007a74:	f7ff ff12 	bl	800789c <__i2b>
 8007a78:	2300      	movs	r3, #0
 8007a7a:	f8c8 0008 	str.w	r0, [r8, #8]
 8007a7e:	4604      	mov	r4, r0
 8007a80:	6003      	str	r3, [r0, #0]
 8007a82:	f04f 0900 	mov.w	r9, #0
 8007a86:	07eb      	lsls	r3, r5, #31
 8007a88:	d50a      	bpl.n	8007aa0 <__pow5mult+0x84>
 8007a8a:	4631      	mov	r1, r6
 8007a8c:	4622      	mov	r2, r4
 8007a8e:	4638      	mov	r0, r7
 8007a90:	f7ff ff1a 	bl	80078c8 <__multiply>
 8007a94:	4631      	mov	r1, r6
 8007a96:	4680      	mov	r8, r0
 8007a98:	4638      	mov	r0, r7
 8007a9a:	f7ff fe4b 	bl	8007734 <_Bfree>
 8007a9e:	4646      	mov	r6, r8
 8007aa0:	106d      	asrs	r5, r5, #1
 8007aa2:	d00b      	beq.n	8007abc <__pow5mult+0xa0>
 8007aa4:	6820      	ldr	r0, [r4, #0]
 8007aa6:	b938      	cbnz	r0, 8007ab8 <__pow5mult+0x9c>
 8007aa8:	4622      	mov	r2, r4
 8007aaa:	4621      	mov	r1, r4
 8007aac:	4638      	mov	r0, r7
 8007aae:	f7ff ff0b 	bl	80078c8 <__multiply>
 8007ab2:	6020      	str	r0, [r4, #0]
 8007ab4:	f8c0 9000 	str.w	r9, [r0]
 8007ab8:	4604      	mov	r4, r0
 8007aba:	e7e4      	b.n	8007a86 <__pow5mult+0x6a>
 8007abc:	4630      	mov	r0, r6
 8007abe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007ac2:	bf00      	nop
 8007ac4:	08008844 	.word	0x08008844
 8007ac8:	08008759 	.word	0x08008759
 8007acc:	080087ea 	.word	0x080087ea

08007ad0 <__lshift>:
 8007ad0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007ad4:	460c      	mov	r4, r1
 8007ad6:	6849      	ldr	r1, [r1, #4]
 8007ad8:	6923      	ldr	r3, [r4, #16]
 8007ada:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8007ade:	68a3      	ldr	r3, [r4, #8]
 8007ae0:	4607      	mov	r7, r0
 8007ae2:	4691      	mov	r9, r2
 8007ae4:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8007ae8:	f108 0601 	add.w	r6, r8, #1
 8007aec:	42b3      	cmp	r3, r6
 8007aee:	db0b      	blt.n	8007b08 <__lshift+0x38>
 8007af0:	4638      	mov	r0, r7
 8007af2:	f7ff fddf 	bl	80076b4 <_Balloc>
 8007af6:	4605      	mov	r5, r0
 8007af8:	b948      	cbnz	r0, 8007b0e <__lshift+0x3e>
 8007afa:	4602      	mov	r2, r0
 8007afc:	4b28      	ldr	r3, [pc, #160]	@ (8007ba0 <__lshift+0xd0>)
 8007afe:	4829      	ldr	r0, [pc, #164]	@ (8007ba4 <__lshift+0xd4>)
 8007b00:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8007b04:	f000 fa38 	bl	8007f78 <__assert_func>
 8007b08:	3101      	adds	r1, #1
 8007b0a:	005b      	lsls	r3, r3, #1
 8007b0c:	e7ee      	b.n	8007aec <__lshift+0x1c>
 8007b0e:	2300      	movs	r3, #0
 8007b10:	f100 0114 	add.w	r1, r0, #20
 8007b14:	f100 0210 	add.w	r2, r0, #16
 8007b18:	4618      	mov	r0, r3
 8007b1a:	4553      	cmp	r3, sl
 8007b1c:	db33      	blt.n	8007b86 <__lshift+0xb6>
 8007b1e:	6920      	ldr	r0, [r4, #16]
 8007b20:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8007b24:	f104 0314 	add.w	r3, r4, #20
 8007b28:	f019 091f 	ands.w	r9, r9, #31
 8007b2c:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8007b30:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8007b34:	d02b      	beq.n	8007b8e <__lshift+0xbe>
 8007b36:	f1c9 0e20 	rsb	lr, r9, #32
 8007b3a:	468a      	mov	sl, r1
 8007b3c:	2200      	movs	r2, #0
 8007b3e:	6818      	ldr	r0, [r3, #0]
 8007b40:	fa00 f009 	lsl.w	r0, r0, r9
 8007b44:	4310      	orrs	r0, r2
 8007b46:	f84a 0b04 	str.w	r0, [sl], #4
 8007b4a:	f853 2b04 	ldr.w	r2, [r3], #4
 8007b4e:	459c      	cmp	ip, r3
 8007b50:	fa22 f20e 	lsr.w	r2, r2, lr
 8007b54:	d8f3      	bhi.n	8007b3e <__lshift+0x6e>
 8007b56:	ebac 0304 	sub.w	r3, ip, r4
 8007b5a:	3b15      	subs	r3, #21
 8007b5c:	f023 0303 	bic.w	r3, r3, #3
 8007b60:	3304      	adds	r3, #4
 8007b62:	f104 0015 	add.w	r0, r4, #21
 8007b66:	4584      	cmp	ip, r0
 8007b68:	bf38      	it	cc
 8007b6a:	2304      	movcc	r3, #4
 8007b6c:	50ca      	str	r2, [r1, r3]
 8007b6e:	b10a      	cbz	r2, 8007b74 <__lshift+0xa4>
 8007b70:	f108 0602 	add.w	r6, r8, #2
 8007b74:	3e01      	subs	r6, #1
 8007b76:	4638      	mov	r0, r7
 8007b78:	612e      	str	r6, [r5, #16]
 8007b7a:	4621      	mov	r1, r4
 8007b7c:	f7ff fdda 	bl	8007734 <_Bfree>
 8007b80:	4628      	mov	r0, r5
 8007b82:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007b86:	f842 0f04 	str.w	r0, [r2, #4]!
 8007b8a:	3301      	adds	r3, #1
 8007b8c:	e7c5      	b.n	8007b1a <__lshift+0x4a>
 8007b8e:	3904      	subs	r1, #4
 8007b90:	f853 2b04 	ldr.w	r2, [r3], #4
 8007b94:	f841 2f04 	str.w	r2, [r1, #4]!
 8007b98:	459c      	cmp	ip, r3
 8007b9a:	d8f9      	bhi.n	8007b90 <__lshift+0xc0>
 8007b9c:	e7ea      	b.n	8007b74 <__lshift+0xa4>
 8007b9e:	bf00      	nop
 8007ba0:	080087c8 	.word	0x080087c8
 8007ba4:	080087ea 	.word	0x080087ea

08007ba8 <__mcmp>:
 8007ba8:	690a      	ldr	r2, [r1, #16]
 8007baa:	4603      	mov	r3, r0
 8007bac:	6900      	ldr	r0, [r0, #16]
 8007bae:	1a80      	subs	r0, r0, r2
 8007bb0:	b530      	push	{r4, r5, lr}
 8007bb2:	d10e      	bne.n	8007bd2 <__mcmp+0x2a>
 8007bb4:	3314      	adds	r3, #20
 8007bb6:	3114      	adds	r1, #20
 8007bb8:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8007bbc:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8007bc0:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8007bc4:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8007bc8:	4295      	cmp	r5, r2
 8007bca:	d003      	beq.n	8007bd4 <__mcmp+0x2c>
 8007bcc:	d205      	bcs.n	8007bda <__mcmp+0x32>
 8007bce:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8007bd2:	bd30      	pop	{r4, r5, pc}
 8007bd4:	42a3      	cmp	r3, r4
 8007bd6:	d3f3      	bcc.n	8007bc0 <__mcmp+0x18>
 8007bd8:	e7fb      	b.n	8007bd2 <__mcmp+0x2a>
 8007bda:	2001      	movs	r0, #1
 8007bdc:	e7f9      	b.n	8007bd2 <__mcmp+0x2a>
	...

08007be0 <__mdiff>:
 8007be0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007be4:	4689      	mov	r9, r1
 8007be6:	4606      	mov	r6, r0
 8007be8:	4611      	mov	r1, r2
 8007bea:	4648      	mov	r0, r9
 8007bec:	4614      	mov	r4, r2
 8007bee:	f7ff ffdb 	bl	8007ba8 <__mcmp>
 8007bf2:	1e05      	subs	r5, r0, #0
 8007bf4:	d112      	bne.n	8007c1c <__mdiff+0x3c>
 8007bf6:	4629      	mov	r1, r5
 8007bf8:	4630      	mov	r0, r6
 8007bfa:	f7ff fd5b 	bl	80076b4 <_Balloc>
 8007bfe:	4602      	mov	r2, r0
 8007c00:	b928      	cbnz	r0, 8007c0e <__mdiff+0x2e>
 8007c02:	4b3f      	ldr	r3, [pc, #252]	@ (8007d00 <__mdiff+0x120>)
 8007c04:	f240 2137 	movw	r1, #567	@ 0x237
 8007c08:	483e      	ldr	r0, [pc, #248]	@ (8007d04 <__mdiff+0x124>)
 8007c0a:	f000 f9b5 	bl	8007f78 <__assert_func>
 8007c0e:	2301      	movs	r3, #1
 8007c10:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8007c14:	4610      	mov	r0, r2
 8007c16:	b003      	add	sp, #12
 8007c18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007c1c:	bfbc      	itt	lt
 8007c1e:	464b      	movlt	r3, r9
 8007c20:	46a1      	movlt	r9, r4
 8007c22:	4630      	mov	r0, r6
 8007c24:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8007c28:	bfba      	itte	lt
 8007c2a:	461c      	movlt	r4, r3
 8007c2c:	2501      	movlt	r5, #1
 8007c2e:	2500      	movge	r5, #0
 8007c30:	f7ff fd40 	bl	80076b4 <_Balloc>
 8007c34:	4602      	mov	r2, r0
 8007c36:	b918      	cbnz	r0, 8007c40 <__mdiff+0x60>
 8007c38:	4b31      	ldr	r3, [pc, #196]	@ (8007d00 <__mdiff+0x120>)
 8007c3a:	f240 2145 	movw	r1, #581	@ 0x245
 8007c3e:	e7e3      	b.n	8007c08 <__mdiff+0x28>
 8007c40:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8007c44:	6926      	ldr	r6, [r4, #16]
 8007c46:	60c5      	str	r5, [r0, #12]
 8007c48:	f109 0310 	add.w	r3, r9, #16
 8007c4c:	f109 0514 	add.w	r5, r9, #20
 8007c50:	f104 0e14 	add.w	lr, r4, #20
 8007c54:	f100 0b14 	add.w	fp, r0, #20
 8007c58:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8007c5c:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8007c60:	9301      	str	r3, [sp, #4]
 8007c62:	46d9      	mov	r9, fp
 8007c64:	f04f 0c00 	mov.w	ip, #0
 8007c68:	9b01      	ldr	r3, [sp, #4]
 8007c6a:	f85e 0b04 	ldr.w	r0, [lr], #4
 8007c6e:	f853 af04 	ldr.w	sl, [r3, #4]!
 8007c72:	9301      	str	r3, [sp, #4]
 8007c74:	fa1f f38a 	uxth.w	r3, sl
 8007c78:	4619      	mov	r1, r3
 8007c7a:	b283      	uxth	r3, r0
 8007c7c:	1acb      	subs	r3, r1, r3
 8007c7e:	0c00      	lsrs	r0, r0, #16
 8007c80:	4463      	add	r3, ip
 8007c82:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8007c86:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8007c8a:	b29b      	uxth	r3, r3
 8007c8c:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8007c90:	4576      	cmp	r6, lr
 8007c92:	f849 3b04 	str.w	r3, [r9], #4
 8007c96:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8007c9a:	d8e5      	bhi.n	8007c68 <__mdiff+0x88>
 8007c9c:	1b33      	subs	r3, r6, r4
 8007c9e:	3b15      	subs	r3, #21
 8007ca0:	f023 0303 	bic.w	r3, r3, #3
 8007ca4:	3415      	adds	r4, #21
 8007ca6:	3304      	adds	r3, #4
 8007ca8:	42a6      	cmp	r6, r4
 8007caa:	bf38      	it	cc
 8007cac:	2304      	movcc	r3, #4
 8007cae:	441d      	add	r5, r3
 8007cb0:	445b      	add	r3, fp
 8007cb2:	461e      	mov	r6, r3
 8007cb4:	462c      	mov	r4, r5
 8007cb6:	4544      	cmp	r4, r8
 8007cb8:	d30e      	bcc.n	8007cd8 <__mdiff+0xf8>
 8007cba:	f108 0103 	add.w	r1, r8, #3
 8007cbe:	1b49      	subs	r1, r1, r5
 8007cc0:	f021 0103 	bic.w	r1, r1, #3
 8007cc4:	3d03      	subs	r5, #3
 8007cc6:	45a8      	cmp	r8, r5
 8007cc8:	bf38      	it	cc
 8007cca:	2100      	movcc	r1, #0
 8007ccc:	440b      	add	r3, r1
 8007cce:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8007cd2:	b191      	cbz	r1, 8007cfa <__mdiff+0x11a>
 8007cd4:	6117      	str	r7, [r2, #16]
 8007cd6:	e79d      	b.n	8007c14 <__mdiff+0x34>
 8007cd8:	f854 1b04 	ldr.w	r1, [r4], #4
 8007cdc:	46e6      	mov	lr, ip
 8007cde:	0c08      	lsrs	r0, r1, #16
 8007ce0:	fa1c fc81 	uxtah	ip, ip, r1
 8007ce4:	4471      	add	r1, lr
 8007ce6:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8007cea:	b289      	uxth	r1, r1
 8007cec:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8007cf0:	f846 1b04 	str.w	r1, [r6], #4
 8007cf4:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8007cf8:	e7dd      	b.n	8007cb6 <__mdiff+0xd6>
 8007cfa:	3f01      	subs	r7, #1
 8007cfc:	e7e7      	b.n	8007cce <__mdiff+0xee>
 8007cfe:	bf00      	nop
 8007d00:	080087c8 	.word	0x080087c8
 8007d04:	080087ea 	.word	0x080087ea

08007d08 <__d2b>:
 8007d08:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007d0c:	460f      	mov	r7, r1
 8007d0e:	2101      	movs	r1, #1
 8007d10:	ec59 8b10 	vmov	r8, r9, d0
 8007d14:	4616      	mov	r6, r2
 8007d16:	f7ff fccd 	bl	80076b4 <_Balloc>
 8007d1a:	4604      	mov	r4, r0
 8007d1c:	b930      	cbnz	r0, 8007d2c <__d2b+0x24>
 8007d1e:	4602      	mov	r2, r0
 8007d20:	4b23      	ldr	r3, [pc, #140]	@ (8007db0 <__d2b+0xa8>)
 8007d22:	4824      	ldr	r0, [pc, #144]	@ (8007db4 <__d2b+0xac>)
 8007d24:	f240 310f 	movw	r1, #783	@ 0x30f
 8007d28:	f000 f926 	bl	8007f78 <__assert_func>
 8007d2c:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8007d30:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8007d34:	b10d      	cbz	r5, 8007d3a <__d2b+0x32>
 8007d36:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8007d3a:	9301      	str	r3, [sp, #4]
 8007d3c:	f1b8 0300 	subs.w	r3, r8, #0
 8007d40:	d023      	beq.n	8007d8a <__d2b+0x82>
 8007d42:	4668      	mov	r0, sp
 8007d44:	9300      	str	r3, [sp, #0]
 8007d46:	f7ff fd7c 	bl	8007842 <__lo0bits>
 8007d4a:	e9dd 1200 	ldrd	r1, r2, [sp]
 8007d4e:	b1d0      	cbz	r0, 8007d86 <__d2b+0x7e>
 8007d50:	f1c0 0320 	rsb	r3, r0, #32
 8007d54:	fa02 f303 	lsl.w	r3, r2, r3
 8007d58:	430b      	orrs	r3, r1
 8007d5a:	40c2      	lsrs	r2, r0
 8007d5c:	6163      	str	r3, [r4, #20]
 8007d5e:	9201      	str	r2, [sp, #4]
 8007d60:	9b01      	ldr	r3, [sp, #4]
 8007d62:	61a3      	str	r3, [r4, #24]
 8007d64:	2b00      	cmp	r3, #0
 8007d66:	bf0c      	ite	eq
 8007d68:	2201      	moveq	r2, #1
 8007d6a:	2202      	movne	r2, #2
 8007d6c:	6122      	str	r2, [r4, #16]
 8007d6e:	b1a5      	cbz	r5, 8007d9a <__d2b+0x92>
 8007d70:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8007d74:	4405      	add	r5, r0
 8007d76:	603d      	str	r5, [r7, #0]
 8007d78:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8007d7c:	6030      	str	r0, [r6, #0]
 8007d7e:	4620      	mov	r0, r4
 8007d80:	b003      	add	sp, #12
 8007d82:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8007d86:	6161      	str	r1, [r4, #20]
 8007d88:	e7ea      	b.n	8007d60 <__d2b+0x58>
 8007d8a:	a801      	add	r0, sp, #4
 8007d8c:	f7ff fd59 	bl	8007842 <__lo0bits>
 8007d90:	9b01      	ldr	r3, [sp, #4]
 8007d92:	6163      	str	r3, [r4, #20]
 8007d94:	3020      	adds	r0, #32
 8007d96:	2201      	movs	r2, #1
 8007d98:	e7e8      	b.n	8007d6c <__d2b+0x64>
 8007d9a:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8007d9e:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 8007da2:	6038      	str	r0, [r7, #0]
 8007da4:	6918      	ldr	r0, [r3, #16]
 8007da6:	f7ff fd2d 	bl	8007804 <__hi0bits>
 8007daa:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8007dae:	e7e5      	b.n	8007d7c <__d2b+0x74>
 8007db0:	080087c8 	.word	0x080087c8
 8007db4:	080087ea 	.word	0x080087ea

08007db8 <__sread>:
 8007db8:	b510      	push	{r4, lr}
 8007dba:	460c      	mov	r4, r1
 8007dbc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007dc0:	f000 f8a8 	bl	8007f14 <_read_r>
 8007dc4:	2800      	cmp	r0, #0
 8007dc6:	bfab      	itete	ge
 8007dc8:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8007dca:	89a3      	ldrhlt	r3, [r4, #12]
 8007dcc:	181b      	addge	r3, r3, r0
 8007dce:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8007dd2:	bfac      	ite	ge
 8007dd4:	6563      	strge	r3, [r4, #84]	@ 0x54
 8007dd6:	81a3      	strhlt	r3, [r4, #12]
 8007dd8:	bd10      	pop	{r4, pc}

08007dda <__swrite>:
 8007dda:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007dde:	461f      	mov	r7, r3
 8007de0:	898b      	ldrh	r3, [r1, #12]
 8007de2:	05db      	lsls	r3, r3, #23
 8007de4:	4605      	mov	r5, r0
 8007de6:	460c      	mov	r4, r1
 8007de8:	4616      	mov	r6, r2
 8007dea:	d505      	bpl.n	8007df8 <__swrite+0x1e>
 8007dec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007df0:	2302      	movs	r3, #2
 8007df2:	2200      	movs	r2, #0
 8007df4:	f000 f87c 	bl	8007ef0 <_lseek_r>
 8007df8:	89a3      	ldrh	r3, [r4, #12]
 8007dfa:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8007dfe:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8007e02:	81a3      	strh	r3, [r4, #12]
 8007e04:	4632      	mov	r2, r6
 8007e06:	463b      	mov	r3, r7
 8007e08:	4628      	mov	r0, r5
 8007e0a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007e0e:	f000 b893 	b.w	8007f38 <_write_r>

08007e12 <__sseek>:
 8007e12:	b510      	push	{r4, lr}
 8007e14:	460c      	mov	r4, r1
 8007e16:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007e1a:	f000 f869 	bl	8007ef0 <_lseek_r>
 8007e1e:	1c43      	adds	r3, r0, #1
 8007e20:	89a3      	ldrh	r3, [r4, #12]
 8007e22:	bf15      	itete	ne
 8007e24:	6560      	strne	r0, [r4, #84]	@ 0x54
 8007e26:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8007e2a:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8007e2e:	81a3      	strheq	r3, [r4, #12]
 8007e30:	bf18      	it	ne
 8007e32:	81a3      	strhne	r3, [r4, #12]
 8007e34:	bd10      	pop	{r4, pc}

08007e36 <__sclose>:
 8007e36:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8007e3a:	f000 b849 	b.w	8007ed0 <_close_r>

08007e3e <_realloc_r>:
 8007e3e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007e42:	4680      	mov	r8, r0
 8007e44:	4615      	mov	r5, r2
 8007e46:	460c      	mov	r4, r1
 8007e48:	b921      	cbnz	r1, 8007e54 <_realloc_r+0x16>
 8007e4a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8007e4e:	4611      	mov	r1, r2
 8007e50:	f7fe b850 	b.w	8005ef4 <_malloc_r>
 8007e54:	b92a      	cbnz	r2, 8007e62 <_realloc_r+0x24>
 8007e56:	f7ff f9df 	bl	8007218 <_free_r>
 8007e5a:	2400      	movs	r4, #0
 8007e5c:	4620      	mov	r0, r4
 8007e5e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007e62:	f000 f8b9 	bl	8007fd8 <_malloc_usable_size_r>
 8007e66:	4285      	cmp	r5, r0
 8007e68:	4606      	mov	r6, r0
 8007e6a:	d802      	bhi.n	8007e72 <_realloc_r+0x34>
 8007e6c:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 8007e70:	d8f4      	bhi.n	8007e5c <_realloc_r+0x1e>
 8007e72:	4629      	mov	r1, r5
 8007e74:	4640      	mov	r0, r8
 8007e76:	f7fe f83d 	bl	8005ef4 <_malloc_r>
 8007e7a:	4607      	mov	r7, r0
 8007e7c:	2800      	cmp	r0, #0
 8007e7e:	d0ec      	beq.n	8007e5a <_realloc_r+0x1c>
 8007e80:	42b5      	cmp	r5, r6
 8007e82:	462a      	mov	r2, r5
 8007e84:	4621      	mov	r1, r4
 8007e86:	bf28      	it	cs
 8007e88:	4632      	movcs	r2, r6
 8007e8a:	f000 f867 	bl	8007f5c <memcpy>
 8007e8e:	4621      	mov	r1, r4
 8007e90:	4640      	mov	r0, r8
 8007e92:	f7ff f9c1 	bl	8007218 <_free_r>
 8007e96:	463c      	mov	r4, r7
 8007e98:	e7e0      	b.n	8007e5c <_realloc_r+0x1e>

08007e9a <memmove>:
 8007e9a:	4288      	cmp	r0, r1
 8007e9c:	b510      	push	{r4, lr}
 8007e9e:	eb01 0402 	add.w	r4, r1, r2
 8007ea2:	d902      	bls.n	8007eaa <memmove+0x10>
 8007ea4:	4284      	cmp	r4, r0
 8007ea6:	4623      	mov	r3, r4
 8007ea8:	d807      	bhi.n	8007eba <memmove+0x20>
 8007eaa:	1e43      	subs	r3, r0, #1
 8007eac:	42a1      	cmp	r1, r4
 8007eae:	d008      	beq.n	8007ec2 <memmove+0x28>
 8007eb0:	f811 2b01 	ldrb.w	r2, [r1], #1
 8007eb4:	f803 2f01 	strb.w	r2, [r3, #1]!
 8007eb8:	e7f8      	b.n	8007eac <memmove+0x12>
 8007eba:	4402      	add	r2, r0
 8007ebc:	4601      	mov	r1, r0
 8007ebe:	428a      	cmp	r2, r1
 8007ec0:	d100      	bne.n	8007ec4 <memmove+0x2a>
 8007ec2:	bd10      	pop	{r4, pc}
 8007ec4:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8007ec8:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8007ecc:	e7f7      	b.n	8007ebe <memmove+0x24>
	...

08007ed0 <_close_r>:
 8007ed0:	b538      	push	{r3, r4, r5, lr}
 8007ed2:	4d06      	ldr	r5, [pc, #24]	@ (8007eec <_close_r+0x1c>)
 8007ed4:	2300      	movs	r3, #0
 8007ed6:	4604      	mov	r4, r0
 8007ed8:	4608      	mov	r0, r1
 8007eda:	602b      	str	r3, [r5, #0]
 8007edc:	f7fa fa3c 	bl	8002358 <_close>
 8007ee0:	1c43      	adds	r3, r0, #1
 8007ee2:	d102      	bne.n	8007eea <_close_r+0x1a>
 8007ee4:	682b      	ldr	r3, [r5, #0]
 8007ee6:	b103      	cbz	r3, 8007eea <_close_r+0x1a>
 8007ee8:	6023      	str	r3, [r4, #0]
 8007eea:	bd38      	pop	{r3, r4, r5, pc}
 8007eec:	200004b8 	.word	0x200004b8

08007ef0 <_lseek_r>:
 8007ef0:	b538      	push	{r3, r4, r5, lr}
 8007ef2:	4d07      	ldr	r5, [pc, #28]	@ (8007f10 <_lseek_r+0x20>)
 8007ef4:	4604      	mov	r4, r0
 8007ef6:	4608      	mov	r0, r1
 8007ef8:	4611      	mov	r1, r2
 8007efa:	2200      	movs	r2, #0
 8007efc:	602a      	str	r2, [r5, #0]
 8007efe:	461a      	mov	r2, r3
 8007f00:	f7fa fa51 	bl	80023a6 <_lseek>
 8007f04:	1c43      	adds	r3, r0, #1
 8007f06:	d102      	bne.n	8007f0e <_lseek_r+0x1e>
 8007f08:	682b      	ldr	r3, [r5, #0]
 8007f0a:	b103      	cbz	r3, 8007f0e <_lseek_r+0x1e>
 8007f0c:	6023      	str	r3, [r4, #0]
 8007f0e:	bd38      	pop	{r3, r4, r5, pc}
 8007f10:	200004b8 	.word	0x200004b8

08007f14 <_read_r>:
 8007f14:	b538      	push	{r3, r4, r5, lr}
 8007f16:	4d07      	ldr	r5, [pc, #28]	@ (8007f34 <_read_r+0x20>)
 8007f18:	4604      	mov	r4, r0
 8007f1a:	4608      	mov	r0, r1
 8007f1c:	4611      	mov	r1, r2
 8007f1e:	2200      	movs	r2, #0
 8007f20:	602a      	str	r2, [r5, #0]
 8007f22:	461a      	mov	r2, r3
 8007f24:	f7fa f9df 	bl	80022e6 <_read>
 8007f28:	1c43      	adds	r3, r0, #1
 8007f2a:	d102      	bne.n	8007f32 <_read_r+0x1e>
 8007f2c:	682b      	ldr	r3, [r5, #0]
 8007f2e:	b103      	cbz	r3, 8007f32 <_read_r+0x1e>
 8007f30:	6023      	str	r3, [r4, #0]
 8007f32:	bd38      	pop	{r3, r4, r5, pc}
 8007f34:	200004b8 	.word	0x200004b8

08007f38 <_write_r>:
 8007f38:	b538      	push	{r3, r4, r5, lr}
 8007f3a:	4d07      	ldr	r5, [pc, #28]	@ (8007f58 <_write_r+0x20>)
 8007f3c:	4604      	mov	r4, r0
 8007f3e:	4608      	mov	r0, r1
 8007f40:	4611      	mov	r1, r2
 8007f42:	2200      	movs	r2, #0
 8007f44:	602a      	str	r2, [r5, #0]
 8007f46:	461a      	mov	r2, r3
 8007f48:	f7fa f9ea 	bl	8002320 <_write>
 8007f4c:	1c43      	adds	r3, r0, #1
 8007f4e:	d102      	bne.n	8007f56 <_write_r+0x1e>
 8007f50:	682b      	ldr	r3, [r5, #0]
 8007f52:	b103      	cbz	r3, 8007f56 <_write_r+0x1e>
 8007f54:	6023      	str	r3, [r4, #0]
 8007f56:	bd38      	pop	{r3, r4, r5, pc}
 8007f58:	200004b8 	.word	0x200004b8

08007f5c <memcpy>:
 8007f5c:	440a      	add	r2, r1
 8007f5e:	4291      	cmp	r1, r2
 8007f60:	f100 33ff 	add.w	r3, r0, #4294967295	@ 0xffffffff
 8007f64:	d100      	bne.n	8007f68 <memcpy+0xc>
 8007f66:	4770      	bx	lr
 8007f68:	b510      	push	{r4, lr}
 8007f6a:	f811 4b01 	ldrb.w	r4, [r1], #1
 8007f6e:	f803 4f01 	strb.w	r4, [r3, #1]!
 8007f72:	4291      	cmp	r1, r2
 8007f74:	d1f9      	bne.n	8007f6a <memcpy+0xe>
 8007f76:	bd10      	pop	{r4, pc}

08007f78 <__assert_func>:
 8007f78:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8007f7a:	4614      	mov	r4, r2
 8007f7c:	461a      	mov	r2, r3
 8007f7e:	4b09      	ldr	r3, [pc, #36]	@ (8007fa4 <__assert_func+0x2c>)
 8007f80:	681b      	ldr	r3, [r3, #0]
 8007f82:	4605      	mov	r5, r0
 8007f84:	68d8      	ldr	r0, [r3, #12]
 8007f86:	b954      	cbnz	r4, 8007f9e <__assert_func+0x26>
 8007f88:	4b07      	ldr	r3, [pc, #28]	@ (8007fa8 <__assert_func+0x30>)
 8007f8a:	461c      	mov	r4, r3
 8007f8c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8007f90:	9100      	str	r1, [sp, #0]
 8007f92:	462b      	mov	r3, r5
 8007f94:	4905      	ldr	r1, [pc, #20]	@ (8007fac <__assert_func+0x34>)
 8007f96:	f000 f827 	bl	8007fe8 <fiprintf>
 8007f9a:	f000 f844 	bl	8008026 <abort>
 8007f9e:	4b04      	ldr	r3, [pc, #16]	@ (8007fb0 <__assert_func+0x38>)
 8007fa0:	e7f4      	b.n	8007f8c <__assert_func+0x14>
 8007fa2:	bf00      	nop
 8007fa4:	20000018 	.word	0x20000018
 8007fa8:	08008a86 	.word	0x08008a86
 8007fac:	08008a58 	.word	0x08008a58
 8007fb0:	08008a4b 	.word	0x08008a4b

08007fb4 <__ascii_mbtowc>:
 8007fb4:	b082      	sub	sp, #8
 8007fb6:	b901      	cbnz	r1, 8007fba <__ascii_mbtowc+0x6>
 8007fb8:	a901      	add	r1, sp, #4
 8007fba:	b142      	cbz	r2, 8007fce <__ascii_mbtowc+0x1a>
 8007fbc:	b14b      	cbz	r3, 8007fd2 <__ascii_mbtowc+0x1e>
 8007fbe:	7813      	ldrb	r3, [r2, #0]
 8007fc0:	600b      	str	r3, [r1, #0]
 8007fc2:	7812      	ldrb	r2, [r2, #0]
 8007fc4:	1e10      	subs	r0, r2, #0
 8007fc6:	bf18      	it	ne
 8007fc8:	2001      	movne	r0, #1
 8007fca:	b002      	add	sp, #8
 8007fcc:	4770      	bx	lr
 8007fce:	4610      	mov	r0, r2
 8007fd0:	e7fb      	b.n	8007fca <__ascii_mbtowc+0x16>
 8007fd2:	f06f 0001 	mvn.w	r0, #1
 8007fd6:	e7f8      	b.n	8007fca <__ascii_mbtowc+0x16>

08007fd8 <_malloc_usable_size_r>:
 8007fd8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8007fdc:	1f18      	subs	r0, r3, #4
 8007fde:	2b00      	cmp	r3, #0
 8007fe0:	bfbc      	itt	lt
 8007fe2:	580b      	ldrlt	r3, [r1, r0]
 8007fe4:	18c0      	addlt	r0, r0, r3
 8007fe6:	4770      	bx	lr

08007fe8 <fiprintf>:
 8007fe8:	b40e      	push	{r1, r2, r3}
 8007fea:	b503      	push	{r0, r1, lr}
 8007fec:	4601      	mov	r1, r0
 8007fee:	ab03      	add	r3, sp, #12
 8007ff0:	4805      	ldr	r0, [pc, #20]	@ (8008008 <fiprintf+0x20>)
 8007ff2:	f853 2b04 	ldr.w	r2, [r3], #4
 8007ff6:	6800      	ldr	r0, [r0, #0]
 8007ff8:	9301      	str	r3, [sp, #4]
 8007ffa:	f000 f845 	bl	8008088 <_vfiprintf_r>
 8007ffe:	b002      	add	sp, #8
 8008000:	f85d eb04 	ldr.w	lr, [sp], #4
 8008004:	b003      	add	sp, #12
 8008006:	4770      	bx	lr
 8008008:	20000018 	.word	0x20000018

0800800c <__ascii_wctomb>:
 800800c:	4603      	mov	r3, r0
 800800e:	4608      	mov	r0, r1
 8008010:	b141      	cbz	r1, 8008024 <__ascii_wctomb+0x18>
 8008012:	2aff      	cmp	r2, #255	@ 0xff
 8008014:	d904      	bls.n	8008020 <__ascii_wctomb+0x14>
 8008016:	228a      	movs	r2, #138	@ 0x8a
 8008018:	601a      	str	r2, [r3, #0]
 800801a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 800801e:	4770      	bx	lr
 8008020:	700a      	strb	r2, [r1, #0]
 8008022:	2001      	movs	r0, #1
 8008024:	4770      	bx	lr

08008026 <abort>:
 8008026:	b508      	push	{r3, lr}
 8008028:	2006      	movs	r0, #6
 800802a:	f000 fa85 	bl	8008538 <raise>
 800802e:	2001      	movs	r0, #1
 8008030:	f7fa f94e 	bl	80022d0 <_exit>

08008034 <__sfputc_r>:
 8008034:	6893      	ldr	r3, [r2, #8]
 8008036:	3b01      	subs	r3, #1
 8008038:	2b00      	cmp	r3, #0
 800803a:	b410      	push	{r4}
 800803c:	6093      	str	r3, [r2, #8]
 800803e:	da08      	bge.n	8008052 <__sfputc_r+0x1e>
 8008040:	6994      	ldr	r4, [r2, #24]
 8008042:	42a3      	cmp	r3, r4
 8008044:	db01      	blt.n	800804a <__sfputc_r+0x16>
 8008046:	290a      	cmp	r1, #10
 8008048:	d103      	bne.n	8008052 <__sfputc_r+0x1e>
 800804a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800804e:	f000 b933 	b.w	80082b8 <__swbuf_r>
 8008052:	6813      	ldr	r3, [r2, #0]
 8008054:	1c58      	adds	r0, r3, #1
 8008056:	6010      	str	r0, [r2, #0]
 8008058:	7019      	strb	r1, [r3, #0]
 800805a:	4608      	mov	r0, r1
 800805c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008060:	4770      	bx	lr

08008062 <__sfputs_r>:
 8008062:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008064:	4606      	mov	r6, r0
 8008066:	460f      	mov	r7, r1
 8008068:	4614      	mov	r4, r2
 800806a:	18d5      	adds	r5, r2, r3
 800806c:	42ac      	cmp	r4, r5
 800806e:	d101      	bne.n	8008074 <__sfputs_r+0x12>
 8008070:	2000      	movs	r0, #0
 8008072:	e007      	b.n	8008084 <__sfputs_r+0x22>
 8008074:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008078:	463a      	mov	r2, r7
 800807a:	4630      	mov	r0, r6
 800807c:	f7ff ffda 	bl	8008034 <__sfputc_r>
 8008080:	1c43      	adds	r3, r0, #1
 8008082:	d1f3      	bne.n	800806c <__sfputs_r+0xa>
 8008084:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08008088 <_vfiprintf_r>:
 8008088:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800808c:	460d      	mov	r5, r1
 800808e:	b09d      	sub	sp, #116	@ 0x74
 8008090:	4614      	mov	r4, r2
 8008092:	4698      	mov	r8, r3
 8008094:	4606      	mov	r6, r0
 8008096:	b118      	cbz	r0, 80080a0 <_vfiprintf_r+0x18>
 8008098:	6a03      	ldr	r3, [r0, #32]
 800809a:	b90b      	cbnz	r3, 80080a0 <_vfiprintf_r+0x18>
 800809c:	f7fe f9f0 	bl	8006480 <__sinit>
 80080a0:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80080a2:	07d9      	lsls	r1, r3, #31
 80080a4:	d405      	bmi.n	80080b2 <_vfiprintf_r+0x2a>
 80080a6:	89ab      	ldrh	r3, [r5, #12]
 80080a8:	059a      	lsls	r2, r3, #22
 80080aa:	d402      	bmi.n	80080b2 <_vfiprintf_r+0x2a>
 80080ac:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80080ae:	f7fe fa64 	bl	800657a <__retarget_lock_acquire_recursive>
 80080b2:	89ab      	ldrh	r3, [r5, #12]
 80080b4:	071b      	lsls	r3, r3, #28
 80080b6:	d501      	bpl.n	80080bc <_vfiprintf_r+0x34>
 80080b8:	692b      	ldr	r3, [r5, #16]
 80080ba:	b99b      	cbnz	r3, 80080e4 <_vfiprintf_r+0x5c>
 80080bc:	4629      	mov	r1, r5
 80080be:	4630      	mov	r0, r6
 80080c0:	f000 f938 	bl	8008334 <__swsetup_r>
 80080c4:	b170      	cbz	r0, 80080e4 <_vfiprintf_r+0x5c>
 80080c6:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80080c8:	07dc      	lsls	r4, r3, #31
 80080ca:	d504      	bpl.n	80080d6 <_vfiprintf_r+0x4e>
 80080cc:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80080d0:	b01d      	add	sp, #116	@ 0x74
 80080d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80080d6:	89ab      	ldrh	r3, [r5, #12]
 80080d8:	0598      	lsls	r0, r3, #22
 80080da:	d4f7      	bmi.n	80080cc <_vfiprintf_r+0x44>
 80080dc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80080de:	f7fe fa4d 	bl	800657c <__retarget_lock_release_recursive>
 80080e2:	e7f3      	b.n	80080cc <_vfiprintf_r+0x44>
 80080e4:	2300      	movs	r3, #0
 80080e6:	9309      	str	r3, [sp, #36]	@ 0x24
 80080e8:	2320      	movs	r3, #32
 80080ea:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 80080ee:	f8cd 800c 	str.w	r8, [sp, #12]
 80080f2:	2330      	movs	r3, #48	@ 0x30
 80080f4:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 80082a4 <_vfiprintf_r+0x21c>
 80080f8:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 80080fc:	f04f 0901 	mov.w	r9, #1
 8008100:	4623      	mov	r3, r4
 8008102:	469a      	mov	sl, r3
 8008104:	f813 2b01 	ldrb.w	r2, [r3], #1
 8008108:	b10a      	cbz	r2, 800810e <_vfiprintf_r+0x86>
 800810a:	2a25      	cmp	r2, #37	@ 0x25
 800810c:	d1f9      	bne.n	8008102 <_vfiprintf_r+0x7a>
 800810e:	ebba 0b04 	subs.w	fp, sl, r4
 8008112:	d00b      	beq.n	800812c <_vfiprintf_r+0xa4>
 8008114:	465b      	mov	r3, fp
 8008116:	4622      	mov	r2, r4
 8008118:	4629      	mov	r1, r5
 800811a:	4630      	mov	r0, r6
 800811c:	f7ff ffa1 	bl	8008062 <__sfputs_r>
 8008120:	3001      	adds	r0, #1
 8008122:	f000 80a7 	beq.w	8008274 <_vfiprintf_r+0x1ec>
 8008126:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8008128:	445a      	add	r2, fp
 800812a:	9209      	str	r2, [sp, #36]	@ 0x24
 800812c:	f89a 3000 	ldrb.w	r3, [sl]
 8008130:	2b00      	cmp	r3, #0
 8008132:	f000 809f 	beq.w	8008274 <_vfiprintf_r+0x1ec>
 8008136:	2300      	movs	r3, #0
 8008138:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 800813c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8008140:	f10a 0a01 	add.w	sl, sl, #1
 8008144:	9304      	str	r3, [sp, #16]
 8008146:	9307      	str	r3, [sp, #28]
 8008148:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 800814c:	931a      	str	r3, [sp, #104]	@ 0x68
 800814e:	4654      	mov	r4, sl
 8008150:	2205      	movs	r2, #5
 8008152:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008156:	4853      	ldr	r0, [pc, #332]	@ (80082a4 <_vfiprintf_r+0x21c>)
 8008158:	f7f8 f85a 	bl	8000210 <memchr>
 800815c:	9a04      	ldr	r2, [sp, #16]
 800815e:	b9d8      	cbnz	r0, 8008198 <_vfiprintf_r+0x110>
 8008160:	06d1      	lsls	r1, r2, #27
 8008162:	bf44      	itt	mi
 8008164:	2320      	movmi	r3, #32
 8008166:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800816a:	0713      	lsls	r3, r2, #28
 800816c:	bf44      	itt	mi
 800816e:	232b      	movmi	r3, #43	@ 0x2b
 8008170:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8008174:	f89a 3000 	ldrb.w	r3, [sl]
 8008178:	2b2a      	cmp	r3, #42	@ 0x2a
 800817a:	d015      	beq.n	80081a8 <_vfiprintf_r+0x120>
 800817c:	9a07      	ldr	r2, [sp, #28]
 800817e:	4654      	mov	r4, sl
 8008180:	2000      	movs	r0, #0
 8008182:	f04f 0c0a 	mov.w	ip, #10
 8008186:	4621      	mov	r1, r4
 8008188:	f811 3b01 	ldrb.w	r3, [r1], #1
 800818c:	3b30      	subs	r3, #48	@ 0x30
 800818e:	2b09      	cmp	r3, #9
 8008190:	d94b      	bls.n	800822a <_vfiprintf_r+0x1a2>
 8008192:	b1b0      	cbz	r0, 80081c2 <_vfiprintf_r+0x13a>
 8008194:	9207      	str	r2, [sp, #28]
 8008196:	e014      	b.n	80081c2 <_vfiprintf_r+0x13a>
 8008198:	eba0 0308 	sub.w	r3, r0, r8
 800819c:	fa09 f303 	lsl.w	r3, r9, r3
 80081a0:	4313      	orrs	r3, r2
 80081a2:	9304      	str	r3, [sp, #16]
 80081a4:	46a2      	mov	sl, r4
 80081a6:	e7d2      	b.n	800814e <_vfiprintf_r+0xc6>
 80081a8:	9b03      	ldr	r3, [sp, #12]
 80081aa:	1d19      	adds	r1, r3, #4
 80081ac:	681b      	ldr	r3, [r3, #0]
 80081ae:	9103      	str	r1, [sp, #12]
 80081b0:	2b00      	cmp	r3, #0
 80081b2:	bfbb      	ittet	lt
 80081b4:	425b      	neglt	r3, r3
 80081b6:	f042 0202 	orrlt.w	r2, r2, #2
 80081ba:	9307      	strge	r3, [sp, #28]
 80081bc:	9307      	strlt	r3, [sp, #28]
 80081be:	bfb8      	it	lt
 80081c0:	9204      	strlt	r2, [sp, #16]
 80081c2:	7823      	ldrb	r3, [r4, #0]
 80081c4:	2b2e      	cmp	r3, #46	@ 0x2e
 80081c6:	d10a      	bne.n	80081de <_vfiprintf_r+0x156>
 80081c8:	7863      	ldrb	r3, [r4, #1]
 80081ca:	2b2a      	cmp	r3, #42	@ 0x2a
 80081cc:	d132      	bne.n	8008234 <_vfiprintf_r+0x1ac>
 80081ce:	9b03      	ldr	r3, [sp, #12]
 80081d0:	1d1a      	adds	r2, r3, #4
 80081d2:	681b      	ldr	r3, [r3, #0]
 80081d4:	9203      	str	r2, [sp, #12]
 80081d6:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80081da:	3402      	adds	r4, #2
 80081dc:	9305      	str	r3, [sp, #20]
 80081de:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 80082b4 <_vfiprintf_r+0x22c>
 80081e2:	7821      	ldrb	r1, [r4, #0]
 80081e4:	2203      	movs	r2, #3
 80081e6:	4650      	mov	r0, sl
 80081e8:	f7f8 f812 	bl	8000210 <memchr>
 80081ec:	b138      	cbz	r0, 80081fe <_vfiprintf_r+0x176>
 80081ee:	9b04      	ldr	r3, [sp, #16]
 80081f0:	eba0 000a 	sub.w	r0, r0, sl
 80081f4:	2240      	movs	r2, #64	@ 0x40
 80081f6:	4082      	lsls	r2, r0
 80081f8:	4313      	orrs	r3, r2
 80081fa:	3401      	adds	r4, #1
 80081fc:	9304      	str	r3, [sp, #16]
 80081fe:	f814 1b01 	ldrb.w	r1, [r4], #1
 8008202:	4829      	ldr	r0, [pc, #164]	@ (80082a8 <_vfiprintf_r+0x220>)
 8008204:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8008208:	2206      	movs	r2, #6
 800820a:	f7f8 f801 	bl	8000210 <memchr>
 800820e:	2800      	cmp	r0, #0
 8008210:	d03f      	beq.n	8008292 <_vfiprintf_r+0x20a>
 8008212:	4b26      	ldr	r3, [pc, #152]	@ (80082ac <_vfiprintf_r+0x224>)
 8008214:	bb1b      	cbnz	r3, 800825e <_vfiprintf_r+0x1d6>
 8008216:	9b03      	ldr	r3, [sp, #12]
 8008218:	3307      	adds	r3, #7
 800821a:	f023 0307 	bic.w	r3, r3, #7
 800821e:	3308      	adds	r3, #8
 8008220:	9303      	str	r3, [sp, #12]
 8008222:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008224:	443b      	add	r3, r7
 8008226:	9309      	str	r3, [sp, #36]	@ 0x24
 8008228:	e76a      	b.n	8008100 <_vfiprintf_r+0x78>
 800822a:	fb0c 3202 	mla	r2, ip, r2, r3
 800822e:	460c      	mov	r4, r1
 8008230:	2001      	movs	r0, #1
 8008232:	e7a8      	b.n	8008186 <_vfiprintf_r+0xfe>
 8008234:	2300      	movs	r3, #0
 8008236:	3401      	adds	r4, #1
 8008238:	9305      	str	r3, [sp, #20]
 800823a:	4619      	mov	r1, r3
 800823c:	f04f 0c0a 	mov.w	ip, #10
 8008240:	4620      	mov	r0, r4
 8008242:	f810 2b01 	ldrb.w	r2, [r0], #1
 8008246:	3a30      	subs	r2, #48	@ 0x30
 8008248:	2a09      	cmp	r2, #9
 800824a:	d903      	bls.n	8008254 <_vfiprintf_r+0x1cc>
 800824c:	2b00      	cmp	r3, #0
 800824e:	d0c6      	beq.n	80081de <_vfiprintf_r+0x156>
 8008250:	9105      	str	r1, [sp, #20]
 8008252:	e7c4      	b.n	80081de <_vfiprintf_r+0x156>
 8008254:	fb0c 2101 	mla	r1, ip, r1, r2
 8008258:	4604      	mov	r4, r0
 800825a:	2301      	movs	r3, #1
 800825c:	e7f0      	b.n	8008240 <_vfiprintf_r+0x1b8>
 800825e:	ab03      	add	r3, sp, #12
 8008260:	9300      	str	r3, [sp, #0]
 8008262:	462a      	mov	r2, r5
 8008264:	4b12      	ldr	r3, [pc, #72]	@ (80082b0 <_vfiprintf_r+0x228>)
 8008266:	a904      	add	r1, sp, #16
 8008268:	4630      	mov	r0, r6
 800826a:	f7fd fbef 	bl	8005a4c <_printf_float>
 800826e:	4607      	mov	r7, r0
 8008270:	1c78      	adds	r0, r7, #1
 8008272:	d1d6      	bne.n	8008222 <_vfiprintf_r+0x19a>
 8008274:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8008276:	07d9      	lsls	r1, r3, #31
 8008278:	d405      	bmi.n	8008286 <_vfiprintf_r+0x1fe>
 800827a:	89ab      	ldrh	r3, [r5, #12]
 800827c:	059a      	lsls	r2, r3, #22
 800827e:	d402      	bmi.n	8008286 <_vfiprintf_r+0x1fe>
 8008280:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8008282:	f7fe f97b 	bl	800657c <__retarget_lock_release_recursive>
 8008286:	89ab      	ldrh	r3, [r5, #12]
 8008288:	065b      	lsls	r3, r3, #25
 800828a:	f53f af1f 	bmi.w	80080cc <_vfiprintf_r+0x44>
 800828e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8008290:	e71e      	b.n	80080d0 <_vfiprintf_r+0x48>
 8008292:	ab03      	add	r3, sp, #12
 8008294:	9300      	str	r3, [sp, #0]
 8008296:	462a      	mov	r2, r5
 8008298:	4b05      	ldr	r3, [pc, #20]	@ (80082b0 <_vfiprintf_r+0x228>)
 800829a:	a904      	add	r1, sp, #16
 800829c:	4630      	mov	r0, r6
 800829e:	f7fd ff17 	bl	80060d0 <_printf_i>
 80082a2:	e7e4      	b.n	800826e <_vfiprintf_r+0x1e6>
 80082a4:	080087d9 	.word	0x080087d9
 80082a8:	080087e3 	.word	0x080087e3
 80082ac:	08005a4d 	.word	0x08005a4d
 80082b0:	08008063 	.word	0x08008063
 80082b4:	080087df 	.word	0x080087df

080082b8 <__swbuf_r>:
 80082b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80082ba:	460e      	mov	r6, r1
 80082bc:	4614      	mov	r4, r2
 80082be:	4605      	mov	r5, r0
 80082c0:	b118      	cbz	r0, 80082ca <__swbuf_r+0x12>
 80082c2:	6a03      	ldr	r3, [r0, #32]
 80082c4:	b90b      	cbnz	r3, 80082ca <__swbuf_r+0x12>
 80082c6:	f7fe f8db 	bl	8006480 <__sinit>
 80082ca:	69a3      	ldr	r3, [r4, #24]
 80082cc:	60a3      	str	r3, [r4, #8]
 80082ce:	89a3      	ldrh	r3, [r4, #12]
 80082d0:	071a      	lsls	r2, r3, #28
 80082d2:	d501      	bpl.n	80082d8 <__swbuf_r+0x20>
 80082d4:	6923      	ldr	r3, [r4, #16]
 80082d6:	b943      	cbnz	r3, 80082ea <__swbuf_r+0x32>
 80082d8:	4621      	mov	r1, r4
 80082da:	4628      	mov	r0, r5
 80082dc:	f000 f82a 	bl	8008334 <__swsetup_r>
 80082e0:	b118      	cbz	r0, 80082ea <__swbuf_r+0x32>
 80082e2:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 80082e6:	4638      	mov	r0, r7
 80082e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80082ea:	6823      	ldr	r3, [r4, #0]
 80082ec:	6922      	ldr	r2, [r4, #16]
 80082ee:	1a98      	subs	r0, r3, r2
 80082f0:	6963      	ldr	r3, [r4, #20]
 80082f2:	b2f6      	uxtb	r6, r6
 80082f4:	4283      	cmp	r3, r0
 80082f6:	4637      	mov	r7, r6
 80082f8:	dc05      	bgt.n	8008306 <__swbuf_r+0x4e>
 80082fa:	4621      	mov	r1, r4
 80082fc:	4628      	mov	r0, r5
 80082fe:	f7ff f9b1 	bl	8007664 <_fflush_r>
 8008302:	2800      	cmp	r0, #0
 8008304:	d1ed      	bne.n	80082e2 <__swbuf_r+0x2a>
 8008306:	68a3      	ldr	r3, [r4, #8]
 8008308:	3b01      	subs	r3, #1
 800830a:	60a3      	str	r3, [r4, #8]
 800830c:	6823      	ldr	r3, [r4, #0]
 800830e:	1c5a      	adds	r2, r3, #1
 8008310:	6022      	str	r2, [r4, #0]
 8008312:	701e      	strb	r6, [r3, #0]
 8008314:	6962      	ldr	r2, [r4, #20]
 8008316:	1c43      	adds	r3, r0, #1
 8008318:	429a      	cmp	r2, r3
 800831a:	d004      	beq.n	8008326 <__swbuf_r+0x6e>
 800831c:	89a3      	ldrh	r3, [r4, #12]
 800831e:	07db      	lsls	r3, r3, #31
 8008320:	d5e1      	bpl.n	80082e6 <__swbuf_r+0x2e>
 8008322:	2e0a      	cmp	r6, #10
 8008324:	d1df      	bne.n	80082e6 <__swbuf_r+0x2e>
 8008326:	4621      	mov	r1, r4
 8008328:	4628      	mov	r0, r5
 800832a:	f7ff f99b 	bl	8007664 <_fflush_r>
 800832e:	2800      	cmp	r0, #0
 8008330:	d0d9      	beq.n	80082e6 <__swbuf_r+0x2e>
 8008332:	e7d6      	b.n	80082e2 <__swbuf_r+0x2a>

08008334 <__swsetup_r>:
 8008334:	b538      	push	{r3, r4, r5, lr}
 8008336:	4b29      	ldr	r3, [pc, #164]	@ (80083dc <__swsetup_r+0xa8>)
 8008338:	4605      	mov	r5, r0
 800833a:	6818      	ldr	r0, [r3, #0]
 800833c:	460c      	mov	r4, r1
 800833e:	b118      	cbz	r0, 8008348 <__swsetup_r+0x14>
 8008340:	6a03      	ldr	r3, [r0, #32]
 8008342:	b90b      	cbnz	r3, 8008348 <__swsetup_r+0x14>
 8008344:	f7fe f89c 	bl	8006480 <__sinit>
 8008348:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800834c:	0719      	lsls	r1, r3, #28
 800834e:	d422      	bmi.n	8008396 <__swsetup_r+0x62>
 8008350:	06da      	lsls	r2, r3, #27
 8008352:	d407      	bmi.n	8008364 <__swsetup_r+0x30>
 8008354:	2209      	movs	r2, #9
 8008356:	602a      	str	r2, [r5, #0]
 8008358:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800835c:	81a3      	strh	r3, [r4, #12]
 800835e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8008362:	e033      	b.n	80083cc <__swsetup_r+0x98>
 8008364:	0758      	lsls	r0, r3, #29
 8008366:	d512      	bpl.n	800838e <__swsetup_r+0x5a>
 8008368:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800836a:	b141      	cbz	r1, 800837e <__swsetup_r+0x4a>
 800836c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8008370:	4299      	cmp	r1, r3
 8008372:	d002      	beq.n	800837a <__swsetup_r+0x46>
 8008374:	4628      	mov	r0, r5
 8008376:	f7fe ff4f 	bl	8007218 <_free_r>
 800837a:	2300      	movs	r3, #0
 800837c:	6363      	str	r3, [r4, #52]	@ 0x34
 800837e:	89a3      	ldrh	r3, [r4, #12]
 8008380:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8008384:	81a3      	strh	r3, [r4, #12]
 8008386:	2300      	movs	r3, #0
 8008388:	6063      	str	r3, [r4, #4]
 800838a:	6923      	ldr	r3, [r4, #16]
 800838c:	6023      	str	r3, [r4, #0]
 800838e:	89a3      	ldrh	r3, [r4, #12]
 8008390:	f043 0308 	orr.w	r3, r3, #8
 8008394:	81a3      	strh	r3, [r4, #12]
 8008396:	6923      	ldr	r3, [r4, #16]
 8008398:	b94b      	cbnz	r3, 80083ae <__swsetup_r+0x7a>
 800839a:	89a3      	ldrh	r3, [r4, #12]
 800839c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80083a0:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80083a4:	d003      	beq.n	80083ae <__swsetup_r+0x7a>
 80083a6:	4621      	mov	r1, r4
 80083a8:	4628      	mov	r0, r5
 80083aa:	f000 f83f 	bl	800842c <__smakebuf_r>
 80083ae:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80083b2:	f013 0201 	ands.w	r2, r3, #1
 80083b6:	d00a      	beq.n	80083ce <__swsetup_r+0x9a>
 80083b8:	2200      	movs	r2, #0
 80083ba:	60a2      	str	r2, [r4, #8]
 80083bc:	6962      	ldr	r2, [r4, #20]
 80083be:	4252      	negs	r2, r2
 80083c0:	61a2      	str	r2, [r4, #24]
 80083c2:	6922      	ldr	r2, [r4, #16]
 80083c4:	b942      	cbnz	r2, 80083d8 <__swsetup_r+0xa4>
 80083c6:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 80083ca:	d1c5      	bne.n	8008358 <__swsetup_r+0x24>
 80083cc:	bd38      	pop	{r3, r4, r5, pc}
 80083ce:	0799      	lsls	r1, r3, #30
 80083d0:	bf58      	it	pl
 80083d2:	6962      	ldrpl	r2, [r4, #20]
 80083d4:	60a2      	str	r2, [r4, #8]
 80083d6:	e7f4      	b.n	80083c2 <__swsetup_r+0x8e>
 80083d8:	2000      	movs	r0, #0
 80083da:	e7f7      	b.n	80083cc <__swsetup_r+0x98>
 80083dc:	20000018 	.word	0x20000018

080083e0 <__swhatbuf_r>:
 80083e0:	b570      	push	{r4, r5, r6, lr}
 80083e2:	460c      	mov	r4, r1
 80083e4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80083e8:	2900      	cmp	r1, #0
 80083ea:	b096      	sub	sp, #88	@ 0x58
 80083ec:	4615      	mov	r5, r2
 80083ee:	461e      	mov	r6, r3
 80083f0:	da0d      	bge.n	800840e <__swhatbuf_r+0x2e>
 80083f2:	89a3      	ldrh	r3, [r4, #12]
 80083f4:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80083f8:	f04f 0100 	mov.w	r1, #0
 80083fc:	bf14      	ite	ne
 80083fe:	2340      	movne	r3, #64	@ 0x40
 8008400:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8008404:	2000      	movs	r0, #0
 8008406:	6031      	str	r1, [r6, #0]
 8008408:	602b      	str	r3, [r5, #0]
 800840a:	b016      	add	sp, #88	@ 0x58
 800840c:	bd70      	pop	{r4, r5, r6, pc}
 800840e:	466a      	mov	r2, sp
 8008410:	f000 f848 	bl	80084a4 <_fstat_r>
 8008414:	2800      	cmp	r0, #0
 8008416:	dbec      	blt.n	80083f2 <__swhatbuf_r+0x12>
 8008418:	9901      	ldr	r1, [sp, #4]
 800841a:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 800841e:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8008422:	4259      	negs	r1, r3
 8008424:	4159      	adcs	r1, r3
 8008426:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800842a:	e7eb      	b.n	8008404 <__swhatbuf_r+0x24>

0800842c <__smakebuf_r>:
 800842c:	898b      	ldrh	r3, [r1, #12]
 800842e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008430:	079d      	lsls	r5, r3, #30
 8008432:	4606      	mov	r6, r0
 8008434:	460c      	mov	r4, r1
 8008436:	d507      	bpl.n	8008448 <__smakebuf_r+0x1c>
 8008438:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 800843c:	6023      	str	r3, [r4, #0]
 800843e:	6123      	str	r3, [r4, #16]
 8008440:	2301      	movs	r3, #1
 8008442:	6163      	str	r3, [r4, #20]
 8008444:	b003      	add	sp, #12
 8008446:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008448:	ab01      	add	r3, sp, #4
 800844a:	466a      	mov	r2, sp
 800844c:	f7ff ffc8 	bl	80083e0 <__swhatbuf_r>
 8008450:	9f00      	ldr	r7, [sp, #0]
 8008452:	4605      	mov	r5, r0
 8008454:	4639      	mov	r1, r7
 8008456:	4630      	mov	r0, r6
 8008458:	f7fd fd4c 	bl	8005ef4 <_malloc_r>
 800845c:	b948      	cbnz	r0, 8008472 <__smakebuf_r+0x46>
 800845e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8008462:	059a      	lsls	r2, r3, #22
 8008464:	d4ee      	bmi.n	8008444 <__smakebuf_r+0x18>
 8008466:	f023 0303 	bic.w	r3, r3, #3
 800846a:	f043 0302 	orr.w	r3, r3, #2
 800846e:	81a3      	strh	r3, [r4, #12]
 8008470:	e7e2      	b.n	8008438 <__smakebuf_r+0xc>
 8008472:	89a3      	ldrh	r3, [r4, #12]
 8008474:	6020      	str	r0, [r4, #0]
 8008476:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800847a:	81a3      	strh	r3, [r4, #12]
 800847c:	9b01      	ldr	r3, [sp, #4]
 800847e:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8008482:	b15b      	cbz	r3, 800849c <__smakebuf_r+0x70>
 8008484:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8008488:	4630      	mov	r0, r6
 800848a:	f000 f81d 	bl	80084c8 <_isatty_r>
 800848e:	b128      	cbz	r0, 800849c <__smakebuf_r+0x70>
 8008490:	89a3      	ldrh	r3, [r4, #12]
 8008492:	f023 0303 	bic.w	r3, r3, #3
 8008496:	f043 0301 	orr.w	r3, r3, #1
 800849a:	81a3      	strh	r3, [r4, #12]
 800849c:	89a3      	ldrh	r3, [r4, #12]
 800849e:	431d      	orrs	r5, r3
 80084a0:	81a5      	strh	r5, [r4, #12]
 80084a2:	e7cf      	b.n	8008444 <__smakebuf_r+0x18>

080084a4 <_fstat_r>:
 80084a4:	b538      	push	{r3, r4, r5, lr}
 80084a6:	4d07      	ldr	r5, [pc, #28]	@ (80084c4 <_fstat_r+0x20>)
 80084a8:	2300      	movs	r3, #0
 80084aa:	4604      	mov	r4, r0
 80084ac:	4608      	mov	r0, r1
 80084ae:	4611      	mov	r1, r2
 80084b0:	602b      	str	r3, [r5, #0]
 80084b2:	f7f9 ff5d 	bl	8002370 <_fstat>
 80084b6:	1c43      	adds	r3, r0, #1
 80084b8:	d102      	bne.n	80084c0 <_fstat_r+0x1c>
 80084ba:	682b      	ldr	r3, [r5, #0]
 80084bc:	b103      	cbz	r3, 80084c0 <_fstat_r+0x1c>
 80084be:	6023      	str	r3, [r4, #0]
 80084c0:	bd38      	pop	{r3, r4, r5, pc}
 80084c2:	bf00      	nop
 80084c4:	200004b8 	.word	0x200004b8

080084c8 <_isatty_r>:
 80084c8:	b538      	push	{r3, r4, r5, lr}
 80084ca:	4d06      	ldr	r5, [pc, #24]	@ (80084e4 <_isatty_r+0x1c>)
 80084cc:	2300      	movs	r3, #0
 80084ce:	4604      	mov	r4, r0
 80084d0:	4608      	mov	r0, r1
 80084d2:	602b      	str	r3, [r5, #0]
 80084d4:	f7f9 ff5c 	bl	8002390 <_isatty>
 80084d8:	1c43      	adds	r3, r0, #1
 80084da:	d102      	bne.n	80084e2 <_isatty_r+0x1a>
 80084dc:	682b      	ldr	r3, [r5, #0]
 80084de:	b103      	cbz	r3, 80084e2 <_isatty_r+0x1a>
 80084e0:	6023      	str	r3, [r4, #0]
 80084e2:	bd38      	pop	{r3, r4, r5, pc}
 80084e4:	200004b8 	.word	0x200004b8

080084e8 <_raise_r>:
 80084e8:	291f      	cmp	r1, #31
 80084ea:	b538      	push	{r3, r4, r5, lr}
 80084ec:	4605      	mov	r5, r0
 80084ee:	460c      	mov	r4, r1
 80084f0:	d904      	bls.n	80084fc <_raise_r+0x14>
 80084f2:	2316      	movs	r3, #22
 80084f4:	6003      	str	r3, [r0, #0]
 80084f6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 80084fa:	bd38      	pop	{r3, r4, r5, pc}
 80084fc:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 80084fe:	b112      	cbz	r2, 8008506 <_raise_r+0x1e>
 8008500:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8008504:	b94b      	cbnz	r3, 800851a <_raise_r+0x32>
 8008506:	4628      	mov	r0, r5
 8008508:	f000 f830 	bl	800856c <_getpid_r>
 800850c:	4622      	mov	r2, r4
 800850e:	4601      	mov	r1, r0
 8008510:	4628      	mov	r0, r5
 8008512:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8008516:	f000 b817 	b.w	8008548 <_kill_r>
 800851a:	2b01      	cmp	r3, #1
 800851c:	d00a      	beq.n	8008534 <_raise_r+0x4c>
 800851e:	1c59      	adds	r1, r3, #1
 8008520:	d103      	bne.n	800852a <_raise_r+0x42>
 8008522:	2316      	movs	r3, #22
 8008524:	6003      	str	r3, [r0, #0]
 8008526:	2001      	movs	r0, #1
 8008528:	e7e7      	b.n	80084fa <_raise_r+0x12>
 800852a:	2100      	movs	r1, #0
 800852c:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8008530:	4620      	mov	r0, r4
 8008532:	4798      	blx	r3
 8008534:	2000      	movs	r0, #0
 8008536:	e7e0      	b.n	80084fa <_raise_r+0x12>

08008538 <raise>:
 8008538:	4b02      	ldr	r3, [pc, #8]	@ (8008544 <raise+0xc>)
 800853a:	4601      	mov	r1, r0
 800853c:	6818      	ldr	r0, [r3, #0]
 800853e:	f7ff bfd3 	b.w	80084e8 <_raise_r>
 8008542:	bf00      	nop
 8008544:	20000018 	.word	0x20000018

08008548 <_kill_r>:
 8008548:	b538      	push	{r3, r4, r5, lr}
 800854a:	4d07      	ldr	r5, [pc, #28]	@ (8008568 <_kill_r+0x20>)
 800854c:	2300      	movs	r3, #0
 800854e:	4604      	mov	r4, r0
 8008550:	4608      	mov	r0, r1
 8008552:	4611      	mov	r1, r2
 8008554:	602b      	str	r3, [r5, #0]
 8008556:	f7f9 feab 	bl	80022b0 <_kill>
 800855a:	1c43      	adds	r3, r0, #1
 800855c:	d102      	bne.n	8008564 <_kill_r+0x1c>
 800855e:	682b      	ldr	r3, [r5, #0]
 8008560:	b103      	cbz	r3, 8008564 <_kill_r+0x1c>
 8008562:	6023      	str	r3, [r4, #0]
 8008564:	bd38      	pop	{r3, r4, r5, pc}
 8008566:	bf00      	nop
 8008568:	200004b8 	.word	0x200004b8

0800856c <_getpid_r>:
 800856c:	f7f9 be98 	b.w	80022a0 <_getpid>

08008570 <_init>:
 8008570:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008572:	bf00      	nop
 8008574:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008576:	bc08      	pop	{r3}
 8008578:	469e      	mov	lr, r3
 800857a:	4770      	bx	lr

0800857c <_fini>:
 800857c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800857e:	bf00      	nop
 8008580:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8008582:	bc08      	pop	{r3}
 8008584:	469e      	mov	lr, r3
 8008586:	4770      	bx	lr
